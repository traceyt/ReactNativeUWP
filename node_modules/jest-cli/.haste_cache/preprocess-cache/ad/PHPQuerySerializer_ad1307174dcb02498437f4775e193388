function 




























serialize(obj){
return _serializeElement(obj,null);}


function _serializeElement(obj,name){

name=name||'';
var kv_pairs=[];

if(obj===null||obj===undefined){
kv_pairs.push(encodeComponent(name));}else 
if(typeof obj=='object'){

!
!('nodeName' in obj||'nodeType' in obj)?require('invariant')(0,
'PHPQuerySerializer serializing a DOM element, not good ...'):undefined;


for(var k in obj){
if(obj.hasOwnProperty(k)&&obj[k]!==undefined){
kv_pairs.push(_serializeElement(
obj[k],
name?name+'['+k+']':k));}}}else 




{
kv_pairs.push(encodeComponent(name)+'='+encodeComponent(obj));}


return kv_pairs.join('&');}











function encodeComponent(raw){
return encodeURIComponent(raw).replace(/%5D/g,"]").replace(/%5B/g,"[");}





var ARRAY_QUERY_PATTERN=/^([-_\w]+)((?:\[[-_\w]*\])+)=?(.*)/;








function deserialize(q){
if(!q){
return {};}


var result={};





q=q.replace(/%5B/ig,'[').replace(/%5D/ig,']');

q=q.split('&');

var hasOwnProp=Object.prototype.hasOwnProperty;

for(var ii=0,length=q.length;ii<length;ii++){
var match=q[ii].match(ARRAY_QUERY_PATTERN);

if(!match){
var term=q[ii].split('=');
result[decodeComponent(term[0])]=
term[1]===undefined?null:decodeComponent(term[1]);}else 
{
var indices=match[2].split(/\]\[|\[|\]/).slice(0,-1);
var name=match[1];
var value=decodeComponent(match[3]||'');
indices[0]=name;



var resultNode=result;
for(var i=0;i<indices.length-1;i++){
if(indices[i]){
if(!hasOwnProp.call(resultNode,indices[i])){
var nv=indices[i+1]&&!indices[i+1].match(/^\d{1,3}$/)?
{}:[];
resultNode[indices[i]]=nv;
if(resultNode[indices[i]]!==nv){




return result;}}



resultNode=resultNode[indices[i]];}else 
{
if(indices[i+1]&&!indices[i+1].match(/^\d{1,3}$/)){
resultNode.push({});}else 
{
resultNode.push([]);}

resultNode=resultNode[resultNode.length-1];}}



if(resultNode instanceof Array&&indices[indices.length-1]===''){
resultNode.push(value);}else 
{
resultNode[indices[indices.length-1]]=value;}}}



return result;}











function decodeComponent(encoded_s){
return decodeURIComponent(encoded_s.replace(/\+/g,' '));}


var PHPQuerySerializer={
serialize:serialize,
encodeComponent:encodeComponent,
deserialize:deserialize,
decodeComponent:decodeComponent};


module.exports=PHPQuerySerializer;