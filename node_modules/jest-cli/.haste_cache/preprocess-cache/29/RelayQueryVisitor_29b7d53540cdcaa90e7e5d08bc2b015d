'use strict';var 















































RelayQueryVisitor=function(){function RelayQueryVisitor(){babelHelpers.classCallCheck(this,RelayQueryVisitor);}babelHelpers.createClass(RelayQueryVisitor,[{key:'visit',value:function visit(

node,
nextState)
{
if(node instanceof require('RelayQuery').Field){
return this.visitField(node,nextState);}else 
if(node instanceof require('RelayQuery').Fragment){
return this.visitFragment(node,nextState);}else 
if(node instanceof require('RelayQuery').Root){
return this.visitRoot(node,nextState);}}},{key:'traverse',value:function traverse(




node,
nextState)
{
if(node.canHaveSubselections()){
this.traverseChildren(node,nextState,function(child){
this.visit(child,nextState);},
this);}

return node;}},{key:'traverseChildren',value:function traverseChildren(



node,
nextState,
callback,




context)
{
var children=node.getChildren();
for(var _index=0;_index<children.length;_index++){
callback.call(context,children[_index],_index,children);}}},{key:'visitField',value:function visitField(




node,
nextState)
{
return this.traverse(node,nextState);}},{key:'visitFragment',value:function visitFragment(



node,
nextState)
{
return this.traverse(node,nextState);}},{key:'visitRoot',value:function visitRoot(



node,
nextState)
{
return this.traverse(node,nextState);}}]);return RelayQueryVisitor;}();



module.exports=RelayQueryVisitor;