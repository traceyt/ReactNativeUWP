/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule validateMutationConfig
 * @typechecks
 * 
 */

'use strict';











var FUZZY_THRESHOLD = 3;
var OPTIONAL = false;
var REQUIRED = true;

function validateMutationConfig(
config, 
name) 
{
  function assertValid(properties) {
    // Check for unexpected properties.
    Object.keys(config).forEach(function (property) {
      if (property === 'type') {
        return;}


      if (!properties.hasOwnProperty(property)) {
        var message = require('/Users/cpojer/Projects/relay/scripts/jest/../../node_modules/fbjs/lib/sprintf')(
        'validateMutationConfig: Unexpected key `%s` in `%s` config ' + 
        'for `%s`', 
        property, 
        config.type, 
        name);

        var suggestion = Object.keys(properties).find(
        function (candidate) {return require('testEditDistance')(candidate, property, FUZZY_THRESHOLD);});

        if (suggestion) {
          require('/Users/cpojer/Projects/relay/scripts/jest/../../node_modules/fbjs/lib/invariant')(false, '%s; did you mean `%s`?', message, suggestion);} else 
        {
          /* eslint-disable fb-www/sprintf-like-args-uniqueness */
          require('/Users/cpojer/Projects/relay/scripts/jest/../../node_modules/fbjs/lib/invariant')(false, '%s.', message);
          /* eslint-enable fb-www/sprintf-like-args-uniqueness */}}});




    // Check for missing properties.
    Object.keys(properties).forEach(function (property) {
      var isRequired = properties[property];
      if (isRequired && !config[property]) {
        require('/Users/cpojer/Projects/relay/scripts/jest/../../node_modules/fbjs/lib/invariant')(
        false, 
        'validateMutationConfig: `%s` config on `%s` must have property ' + 
        '`%s`.', 
        config.type, 
        name, 
        property);}});}





  switch (config.type) {
    case 'FIELDS_CHANGE':
      assertValid({ 
        fieldIDs: REQUIRED });

      break;

    case 'RANGE_ADD':
      assertValid({ 
        connectionName: REQUIRED, 
        edgeName: REQUIRED, 
        parentID: REQUIRED, 
        parentName: OPTIONAL, 
        rangeBehaviors: REQUIRED });

      break;

    case 'NODE_DELETE':
      assertValid({ 
        connectionName: REQUIRED, 
        deletedIDFieldName: REQUIRED, 
        parentID: REQUIRED, 
        parentName: REQUIRED });

      break;

    case 'RANGE_DELETE':
      assertValid({ 
        connectionName: REQUIRED, 
        deletedIDFieldName: REQUIRED, 
        parentID: REQUIRED, 
        parentName: REQUIRED, 
        pathToConnection: REQUIRED });

      break;

    case 'REQUIRED_CHILDREN':
      assertValid({ 
        children: REQUIRED });

      break;

    default:
      require('/Users/cpojer/Projects/relay/scripts/jest/../../node_modules/fbjs/lib/invariant')(
      false, 
      'validateMutationConfig: unknown config type `%s` on `%s`', 
      config.type, 
      name);}}




module.exports = validateMutationConfig;