'use strict';































var fromGraphQL={
Field:function(query){
var node=createNode(query,require('RelayQuery').Field);
!(
node instanceof require('RelayQuery').Field)?require('invariant')(0,
'fromGraphQL.Field(): Expected a GraphQL field node.'):undefined;

return node;},

Fragment:function(query){
var node=createNode(query,require('RelayQuery').Fragment);
!(
node instanceof require('RelayQuery').Fragment)?require('invariant')(0,
'fromGraphQL.Fragment(): Expected a GraphQL fragment node.'):undefined;

return node;},

Query:function(query){
var node=createNode(query,require('RelayQuery').Root);
!(
node instanceof require('RelayQuery').Root)?require('invariant')(0,
'fromGraphQL.Query(): Expected a root node.'):undefined;

return node;},

Operation:function(query){
var node=createNode(query,require('RelayQuery').Operation);
!(
node instanceof require('RelayQuery').Operation)?require('invariant')(0,
'fromGraphQL.Operation(): Expected a mutation/subscription node.'):undefined;

return node;}};



function createNode(
query,
desiredType)
{
var variables={};
var route=require('RelayMetaRoute').get('$fromGraphQL');
return desiredType.create(query,route,variables);}


module.exports=fromGraphQL;