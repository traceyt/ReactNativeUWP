'use strict';var 










































TaskQueue=function(){







function TaskQueue(_ref){var onMoreTasks=_ref.onMoreTasks;babelHelpers.classCallCheck(this,TaskQueue);
this.$TaskQueue_onMoreTasks=onMoreTasks;
this.$TaskQueue_queueStack=[{tasks:[],popable:false}];}babelHelpers.createClass(TaskQueue,[{key:'enqueue',value:function enqueue(







task){
this.$TaskQueue_getCurrentQueue().push(task);}},{key:'hasTasksToProcess',value:function hasTasksToProcess()












{
return this.$TaskQueue_getCurrentQueue().length>0;}},{key:'processNext',value:function processNext()





{
var queue=this.$TaskQueue_getCurrentQueue();
if(queue.length){
var task=queue.shift();
try{
if(task.gen){
this.$TaskQueue_genPromise(task);}else 
if(task.run){
task.run();}else 
{
!(
typeof task==='function')?require('fbjs/lib/invariant')(0,
'Expected Function, SimpleTask, or PromiseTask, but got: '+
JSON.stringify(task)):undefined;

task();}}

catch(e){
e.message='TaskQueue: Error with task'+(task.name||' ')+': '+
e.message;
require('ErrorUtils').reportError(e);}}}},{key:'$TaskQueue_getCurrentQueue',value:function $TaskQueue_getCurrentQueue()







{
var stackIdx=this.$TaskQueue_queueStack.length-1;
var queue=this.$TaskQueue_queueStack[stackIdx];
if(queue.popable&&
queue.tasks.length===0&&
this.$TaskQueue_queueStack.length>1){
this.$TaskQueue_queueStack.pop();
return this.$TaskQueue_getCurrentQueue();}else 
{
return queue.tasks;}}},{key:'$TaskQueue_genPromise',value:function $TaskQueue_genPromise(



task){var _this=this;




this.$TaskQueue_queueStack.push({tasks:[],popable:false});
var stackIdx=this.$TaskQueue_queueStack.length-1;
require('ErrorUtils').applyWithGuard(task.gen).
then(function(){
_this.$TaskQueue_queueStack[stackIdx].popable=true;
_this.hasTasksToProcess()&&_this.$TaskQueue_onMoreTasks();}).

catch(function(ex){
console.warn(
'TaskQueue: Error resolving Promise in task '+task.name,
ex);

throw ex;});}}]);return TaskQueue;}();





module.exports=TaskQueue;