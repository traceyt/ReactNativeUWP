'use strict';






jest.
dontMock('AdsManagerCreativeStore').
dontMock('AdsManagerEditorBaseStore').
dontMock('immutable');

jest.setMock('AdsLayout',{createFlow:{},largeListImage:{}});











var ADGROUP_ID='6033298897467';
var ADGROUP_NAME='TEST ADGROUP NAME';
var CREATIVE_ID='6033298897467';
var PROMOTED_OBJECT_ID='6033298897467';
var LEGACY_API_STORY_ID='747965511918993_944110862304456';
var TEXT='Hey test';
var NAME='Name';
var IMAGE_HASH='547699afb122f9ff25fe03df40e8c3d6';
var LINK='https://www.facebook.com/juice0001/';

describe('AdsManagerCreativeStore',function(){

beforeEach(function(){
require('Relay').Store.read=jest.genMockFn();

require('AdsManagerCreativeStore').onDispatchToken({
action:{
actionType:require('AdsManagerActionTypes').BEGIN_EDITOR}});


require('AdsManagerActionTypes').isEditorActionType.mockReturnValue(true);
require('AdsManagerCapabilities').isPromotedObjectSupoorted.mockReturnValue(true);});


testInitialization();
testPopulateStoreWithPostEngagementStory();
testPopulateStoreWithLocalAwarenessStory();
testPopulateStoreWithWebsiteClickStory();
testPopulateStoreWithPageLikesStory();});


function testInitialization(){
it('initialized correctly',function(){
expect(require('AdsManagerCreativeStore').shouldShowCTASection()).toBe(false);
expect(require('AdsManagerCreativeStore').getCreativeCTA()).toBeNull();
expect(require('AdsManagerCreativeStore').getSelectedPagePostID()).toBeNull();
expect(require('AdsManagerCreativeStore').getSelectedPagePost()).toBeNull();
expect(require('AdsManagerCreativeStore').getPresetPagePost()).toBeNull();
expect(require('AdsManagerCreativeStore').getScheduledPosts().length).toBe(0);
expect(require('AdsManagerCreativeStore').getText()).toBeNull();
expect(require('AdsManagerCreativeStore').getSelectedURLType()).toBeNull();
expect(require('AdsManagerCreativeStore').getURL()).toBeNull();
expect(require('AdsManagerCreativeStore').getNewURL()).toBeNull();
expect(require('AdsManagerCreativeStore').getHeadline()).toBeNull();
expect(require('AdsManagerCreativeStore').getRawPhoneNumber()).toBeNull();
expect(require('AdsManagerCreativeStore').getValidatedPhoneNumber()).toBeNull();
expect(require('AdsManagerCreativeStore').getRawAddressString()).toBeNull();
expect(require('AdsManagerCreativeStore').getValidatedAddress()).toBeNull();
expect(require('AdsManagerCreativeStore').getImage()).toBeNull();
expect(require('AdsManagerCreativeStore').getImageURI()).toBeNull();
expect(require('AdsManagerCreativeStore').getImageTransformData()).toBeNull();
expect(require('AdsManagerCreativeStore').getImageSourceCategory()).toBeNull();
expect(require('AdsManagerCreativeStore').getImageHash()).toBeNull();});}



function testPopulateStoreWithPostEngagementStory(){
it('populated store with post engagement adgroup node',function(){
require('AdsManagerCampaignGroupStore').getObjective.mockReturnValue(
require('AdsAPIObjectives').POST_ENGAGEMENT);


require('Relay').Store.read.mockReturnValue({
__dataID__:ADGROUP_ID,
id:ADGROUP_ID,
name:ADGROUP_NAME,
creative:getPostEngagementCreative()});


require('AdsManagerCampaignGroupStore').getObjective.mockReturnValue(require('AdsAPIObjectives').POST_ENGAGEMENT);
var mockAdgroup={__dataID__:ADGROUP_ID};
require('AdsManagerCreativeStore').handleEditorAction({
actionType:require('AdsManagerActionTypes').EDITOR_ADGROUP_CHANGED,
adgroup:mockAdgroup});

expect(require('Relay').Store.read.mock.calls.length).toBe(1);
expect(require('Relay').Store.read.mock.calls[0][1]).toBe(ADGROUP_ID);

expect(require('AdsManagerCreativeStore').shouldShowCTASection()).toBe(false);
expect(require('AdsManagerCreativeStore').getCreativeCTA()).toBeNull();
expect(require('AdsManagerCreativeStore').getSelectedPagePostID()).toBe(LEGACY_API_STORY_ID);
expect(require('AdsManagerCreativeStore').getSelectedPagePost()).not.toBeNull();
expect(require('AdsManagerCreativeStore').getPresetPagePost()).not.toBeNull();
expect(require('AdsManagerCreativeStore').getScheduledPosts().length).toBe(0);
expect(require('AdsManagerCreativeStore').getText()).toBe(TEXT);
expect(require('AdsManagerCreativeStore').getSelectedURLType()).toBeNull();
expect(require('AdsManagerCreativeStore').getURL()).toBeNull();
expect(require('AdsManagerCreativeStore').getNewURL()).toBeNull();
expect(require('AdsManagerCreativeStore').getHeadline()).toBeNull();
expect(require('AdsManagerCreativeStore').getRawPhoneNumber()).toBeNull();
expect(require('AdsManagerCreativeStore').getValidatedPhoneNumber()).toBeNull();
expect(require('AdsManagerCreativeStore').getRawAddressString()).toBeNull();
expect(require('AdsManagerCreativeStore').getValidatedAddress()).toBeNull();
expect(require('AdsManagerCreativeStore').getImage()).toBeNull();
expect(require('AdsManagerCreativeStore').getImageURI()).toBeNull();
expect(require('AdsManagerCreativeStore').getImageTransformData()).toBeNull();
expect(require('AdsManagerCreativeStore').getImageSourceCategory()).toBeNull();
expect(require('AdsManagerCreativeStore').getImageHash()).toBeNull();});}



function testPopulateStoreWithLocalAwarenessStory(){
it('populated store with local awareness adgroup node',function(){
require('AdsManagerCampaignGroupStore').getObjective.mockReturnValue(
require('AdsAPIObjectives').LOCAL_AWARENESS);


require('Relay').Store.read.mockReturnValue({
__dataID__:ADGROUP_ID,
id:ADGROUP_ID,
name:ADGROUP_NAME,
creative:getLocalAwarenessCreative()});


require('AdsManagerCampaignGroupStore').getObjective.mockReturnValue(require('AdsAPIObjectives').LOCAL_AWARENESS);
var mockAdgroup={__dataID__:ADGROUP_ID};
require('AdsManagerCreativeStore').onDispatchToken({
action:{
actionType:require('AdsManagerActionTypes').EDITOR_ADGROUP_CHANGED,
adgroup:mockAdgroup}});


expect(require('Relay').Store.read.mock.calls.length).toBe(1);
expect(require('Relay').Store.read.mock.calls[0][1]).toBe(ADGROUP_ID);

expect(require('AdsManagerCreativeStore').shouldShowCTASection()).toBe(true);
expect(require('AdsManagerCreativeStore').getCreativeCTA()).toBe(require('AdsCallToActionTypes').TYPES.NO_BUTTON.name);
expect(require('AdsManagerCreativeStore').getSelectedPagePostID()).toBeNull();
expect(require('AdsManagerCreativeStore').getSelectedPagePost()).toBeNull();
expect(require('AdsManagerCreativeStore').getPresetPagePost()).toBeNull();
expect(require('AdsManagerCreativeStore').getScheduledPosts().length).toBe(0);
expect(require('AdsManagerCreativeStore').getText()).toBe(TEXT);
expect(require('AdsManagerCreativeStore').getSelectedURLType()).toBe(require('AdsManagerURLType').NEW_URL);
expect(require('AdsManagerCreativeStore').getURL()).toBe(LINK);
expect(require('AdsManagerCreativeStore').getNewURL()).toBe(LINK);
expect(require('AdsManagerCreativeStore').getHeadline()).toBe(NAME);
expect(require('AdsManagerCreativeStore').getRawPhoneNumber()).toBeNull();
expect(require('AdsManagerCreativeStore').getValidatedPhoneNumber()).toBeNull();
expect(require('AdsManagerCreativeStore').getRawAddressString()).toBeNull();
expect(require('AdsManagerCreativeStore').getValidatedAddress()).toBeNull();
expect(require('AdsManagerCreativeStore').getImage()).toEqual(getCreativeImage());
expect(require('AdsManagerCreativeStore').getImageURI()).toBeNull();
expect(require('AdsManagerCreativeStore').getImageTransformData()).toBeNull();
expect(require('AdsManagerCreativeStore').getImageSourceCategory()).toBeNull();
expect(require('AdsManagerCreativeStore').getImageHash()).toBe(IMAGE_HASH);});}



function testPopulateStoreWithWebsiteClickStory(){
it('populated store with website click adgroup node',function(){
require('AdsManagerCampaignGroupStore').getObjective.mockReturnValue(
require('AdsAPIObjectives').WEBSITE_CLICKS);


require('Relay').Store.read.mockReturnValue({
__dataID__:ADGROUP_ID,
id:ADGROUP_ID,
name:ADGROUP_NAME,
creative:getWebsiteClickCreative()});

require('AdsManagerCampaignGroupStore').getObjective.mockReturnValue(require('AdsAPIObjectives').WEBSITE_CLICKS);
var mockAdgroup={__dataID__:ADGROUP_ID};
require('AdsManagerCreativeStore').onDispatchToken({
action:{
actionType:require('AdsManagerActionTypes').EDITOR_ADGROUP_CHANGED,
adgroup:mockAdgroup}});


expect(require('Relay').Store.read.mock.calls.length).toBe(1);
expect(require('Relay').Store.read.mock.calls[0][1]).toBe(ADGROUP_ID);

expect(require('AdsManagerCreativeStore').shouldShowCTASection()).toBe(true);
expect(require('AdsManagerCreativeStore').getCreativeCTA()).toBe(require('AdsCallToActionTypes').TYPES.SHOP_NOW.name);
expect(require('AdsManagerCreativeStore').getSelectedPagePostID()).toBeNull();
expect(require('AdsManagerCreativeStore').getSelectedPagePost()).toBeNull();
expect(require('AdsManagerCreativeStore').getPresetPagePost()).toBeNull();
expect(require('AdsManagerCreativeStore').getScheduledPosts().length).toBe(0);
expect(require('AdsManagerCreativeStore').getText()).toBe(TEXT);
expect(require('AdsManagerCreativeStore').getSelectedURLType()).toBe(require('AdsManagerURLType').NEW_URL);
expect(require('AdsManagerCreativeStore').getURL()).toBe(LINK);
expect(require('AdsManagerCreativeStore').getNewURL()).toBe(LINK);
expect(require('AdsManagerCreativeStore').getHeadline()).toBe(NAME);
expect(require('AdsManagerCreativeStore').getRawPhoneNumber()).toBeNull();
expect(require('AdsManagerCreativeStore').getValidatedPhoneNumber()).toBeNull();
expect(require('AdsManagerCreativeStore').getRawAddressString()).toBeNull();
expect(require('AdsManagerCreativeStore').getValidatedAddress()).toBeNull();
expect(require('AdsManagerCreativeStore').getImage()).toEqual(getCreativeImage());
expect(require('AdsManagerCreativeStore').getImageURI()).toBeNull();
expect(require('AdsManagerCreativeStore').getImageTransformData()).toBeNull();
expect(require('AdsManagerCreativeStore').getImageSourceCategory()).toBeNull();
expect(require('AdsManagerCreativeStore').getImageHash()).toBe(IMAGE_HASH);});}



function testPopulateStoreWithPageLikesStory(){
it('populated store with page like adgroup node',function(){
require('AdsManagerCampaignGroupStore').getObjective.mockReturnValue(
require('AdsAPIObjectives').PAGE_LIKES);


require('Relay').Store.read.mockReturnValue({
__dataID__:ADGROUP_ID,
id:ADGROUP_ID,
name:ADGROUP_NAME,
creative:getPageLikesCreative()});

require('AdsManagerCampaignGroupStore').getObjective.mockReturnValue(require('AdsAPIObjectives').PAGE_LIKES);
var mockAdgroup={__dataID__:ADGROUP_ID};
require('AdsManagerCreativeStore').onDispatchToken({
action:{
actionType:require('AdsManagerActionTypes').EDITOR_ADGROUP_CHANGED,
adgroup:mockAdgroup}});


expect(require('Relay').Store.read.mock.calls.length).toBe(1);
expect(require('Relay').Store.read.mock.calls[0][1]).toBe(ADGROUP_ID);

expect(require('AdsManagerCreativeStore').shouldShowCTASection()).toBe(false);
expect(require('AdsManagerCreativeStore').getCreativeCTA()).toBeNull();
expect(require('AdsManagerCreativeStore').getSelectedPagePostID()).toBeNull();
expect(require('AdsManagerCreativeStore').getSelectedPagePost()).toBeNull();
expect(require('AdsManagerCreativeStore').getPresetPagePost()).toBeNull();
expect(require('AdsManagerCreativeStore').getScheduledPosts().length).toBe(0);
expect(require('AdsManagerCreativeStore').getText()).toBe(TEXT);
expect(require('AdsManagerCreativeStore').getSelectedURLType()).toBeNull();
expect(require('AdsManagerCreativeStore').getURL()).toBeNull();
expect(require('AdsManagerCreativeStore').getNewURL()).toBeNull();
expect(require('AdsManagerCreativeStore').getHeadline()).toBeNull();
expect(require('AdsManagerCreativeStore').getRawPhoneNumber()).toBeNull();
expect(require('AdsManagerCreativeStore').getValidatedPhoneNumber()).toBeNull();
expect(require('AdsManagerCreativeStore').getRawAddressString()).toBeNull();
expect(require('AdsManagerCreativeStore').getValidatedAddress()).toBeNull();
expect(require('AdsManagerCreativeStore').getImage()).toEqual(getCreativeImage());
expect(require('AdsManagerCreativeStore').getImageURI()).toBeNull();
expect(require('AdsManagerCreativeStore').getImageTransformData()).toBeNull();
expect(require('AdsManagerCreativeStore').getImageSourceCategory()).toBeNull();
expect(require('AdsManagerCreativeStore').getImageHash()).toBe(IMAGE_HASH);});}






function getPromotedObject(type){
return {
__dataID__:PROMOTED_OBJECT_ID,
node:{
__dataID__:'UzpfSTc0Nzk2NTUxMTkxODk5Mzo5NDQxMTA4NjIzMDQ0NTY=',
__type__:{
name:type},

attached_story:null,
attachments:[],
creation_time:1443829235,
legacy_api_story_id:LEGACY_API_STORY_ID,
message:{
__dataID__:'client:424688852861',
text:TEXT},

scheduled_publish_time:null,
title:null},

node_id:'944110862304456'};}



function getPostEngagementCreative(){
return {
__dataID__:CREATIVE_ID,
body_text:'',
creative_image:null,
image_hash:null,
object_story_spec:null,
promoted_object:getPromotedObject('Story')};}



function getLocalAwarenessCreative(){
return {
__dataID__:CREATIVE_ID,
body_text:'',
creative_image:getCreativeImage(),
image_hash:IMAGE_HASH,
object_story_spec:{
__dataID__:'client:105001775476',
link_data:getLinkData()},

promoted_object:getPromotedObject('Story')};}



function getWebsiteClickCreative(){
return {
__dataID__:CREATIVE_ID,
body_text:'',
creative_image:getCreativeImage(),
image_hash:IMAGE_HASH,
object_story_spec:{
__dataID__:'client:105001775476',
link_data:getWebsiteClickLinkData()},

promoted_object:getPromotedObject('Story')};}



function getPageLikesCreative(){
return {
__dataID__:CREATIVE_ID,
body_text:TEXT,
creative_image:getCreativeImage(),
image_hash:IMAGE_HASH,
object_story_spec:null,
promoted_object:getPromotedObject('Page')};}



function getCreativeImage(){
return {
__dataID__:'client:105001775478',
height:504,
uri:'https://www.facebook.com/ads/image/',
width:960};}



function getLinkData(){
return {
__dataID__:'client:105001775477',
call_to_action:null,
image_hash:IMAGE_HASH,
link:LINK,
message:TEXT,
name:NAME};}



function getWebsiteClickLinkData(){
return {
__dataID__:'client:105001775477',
call_to_action:{
__dataID__:'client:-14604825652677',
call_to_action_type:require('AdsCallToActionTypes').TYPES.SHOP_NOW.name,
call_to_action_value:{
__dataID__:'client:-14604825652678',
link:LINK}},


image_hash:IMAGE_HASH,
link:LINK,
message:TEXT,
name:NAME};}