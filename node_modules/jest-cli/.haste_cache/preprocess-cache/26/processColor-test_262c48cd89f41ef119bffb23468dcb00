'use strict';









jest.autoMockOff();



describe('processColor',function(){

describe('predefined color names',function(){

it('should convert red',function(){
var colorFromString=require('processColor')('red');
var expectedInt=0xFFFF0000;
expect(colorFromString).toEqual(expectedInt);});


it('should convert white',function(){
var colorFromString=require('processColor')('white');
var expectedInt=0xFFFFFFFF;
expect(colorFromString).toEqual(expectedInt);});


it('should convert black',function(){
var colorFromString=require('processColor')('black');
var expectedInt=0xFF000000;
expect(colorFromString).toEqual(expectedInt);});


it('should convert transparent',function(){
var colorFromString=require('processColor')('transparent');
var expectedInt=0x00000000;
expect(colorFromString).toEqual(expectedInt);});});



describe('RGB strings',function(){

it('should convert rgb(x, y, z)',function(){
var colorFromString=require('processColor')('rgb(10, 20, 30)');
var expectedInt=0xFF0A141E;
expect(colorFromString).toEqual(expectedInt);});});




describe('RGBA strings',function(){

it('should convert rgba(x, y, z, a)',function(){
var colorFromString=require('processColor')('rgba(10, 20, 30, 0.4)');
var expectedInt=0x660A141E;
expect(colorFromString).toEqual(expectedInt);});});




describe('HSL strings',function(){

it('should convert hsl(x, y%, z%)',function(){
var colorFromString=require('processColor')('hsl(318, 69%, 55%)');
var expectedInt=0xFFDB3DAC;
expect(colorFromString).toEqual(expectedInt);});});




describe('HSLA strings',function(){

it('should convert hsla(x, y%, z%, a)',function(){
var colorFromString=require('processColor')('hsla(318, 69%, 55%, 0.25)');
var expectedInt=0x40DB3DAC;
expect(colorFromString).toEqual(expectedInt);});});




describe('hex strings',function(){

it('should convert #xxxxxx',function(){
var colorFromString=require('processColor')('#1e83c9');
var expectedInt=0xFF1E83C9;
expect(colorFromString).toEqual(expectedInt);});});});