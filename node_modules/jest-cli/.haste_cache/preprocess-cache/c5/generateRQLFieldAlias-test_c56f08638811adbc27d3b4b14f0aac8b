/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @emails oncall+relay
 */

'use strict';



var ALIAS_HEURISTIC = /^[\w-]+$/;

function expectEncode(input) {
  var encoded = require('generateRQLFieldAlias')(input);
  expect(ALIAS_HEURISTIC.test(encoded)).toBe(true);
  expect(encoded).not.toEqual(input);}


describe('GraphQLFieldEncoder', function () {
  it('does not encode field names without calls', function () {
    expect(require('generateRQLFieldAlias')('friends')).toEqual('friends');});


  it('encodes field names with calls', function () {
    expectEncode('friends.orderby(importance).first(10)');});


  it('encodes field names with call variables', function () {
    expectEncode('friends.first(<count>)');});


  it('encodes field names with weird characters in calls', function () {
    expectEncode('friends.orderby(=  e1 \\ )');});


  it('returns the same hash for the same input', function () {
    var input = 'friends.orderby(importance).first(20)';
    expectEncode(input);
    expect(require('generateRQLFieldAlias')(input)).
    toEqual(require('generateRQLFieldAlias')(input));});});