'use strict';


















var AllActionTypeValues={};

Object.keys(require('CRMNowActionTypes').AllActionTypes).forEach(function(key){
var value=require('CRMNowActionTypes').AllActionTypes[key];
AllActionTypeValues[value]=true;});var 


CRMNowDispatcher=function(_Dispatcher){babelHelpers.inherits(CRMNowDispatcher,_Dispatcher);




function CRMNowDispatcher(){babelHelpers.classCallCheck(this,CRMNowDispatcher);var _this=babelHelpers.possibleConstructorReturn(this,Object.getPrototypeOf(CRMNowDispatcher).call(this));

_this.$CRMNowDispatcher_payloadQueue=[];
_this.$CRMNowDispatcher_canDispatch=false;return _this;}babelHelpers.createClass(CRMNowDispatcher,[{key:'handleInform_DO_NOT_USE',value:function handleInform_DO_NOT_USE(


action){
this.$CRMNowDispatcher_handleAction(
require('CRMNowPayloadSource').INFORM_DO_NOT_USE,
action);}},{key:'handleUpdateFromLocalCache',value:function handleUpdateFromLocalCache(



action){
this.$CRMNowDispatcher_handleAction(
require('CRMNowPayloadSource').LOCAL_CACHE,
action);}},{key:'handleUpdateFromServerResponse',value:function handleUpdateFromServerResponse(



action){
this.$CRMNowDispatcher_handleAction(
require('CRMNowPayloadSource').SERVER_RESPONSE,
action);}},{key:'handleUpdateFromViewAction',value:function handleUpdateFromViewAction(



action){
this.$CRMNowDispatcher_handleAction(
require('CRMNowPayloadSource').VIEW_ACTION,
action);}},{key:'handleUpdateFromNativePlatform',value:function handleUpdateFromNativePlatform(



action){
this.$CRMNowDispatcher_handleAction(
require('CRMNowPayloadSource').NATIVE_PLATFORM,
action);}},{key:'dispatch',value:function dispatch(



payload){


!this.$CRMNowDispatcher_canDispatch?require('invariant')(0,'Do not call CRMNowDispatcher.dispatch'):undefined;
babelHelpers.get(Object.getPrototypeOf(CRMNowDispatcher.prototype),'dispatch',this).call(this,payload);}},{key:'$CRMNowDispatcher_handleAction',value:function $CRMNowDispatcher_handleAction(


payloadSource,action){var _this2=this;
!
!!action?require('invariant')(0,
'action is empty'):undefined;


!
AllActionTypeValues.hasOwnProperty(action.actionType)?require('invariant')(0,
'invalid action type %s',
action.actionType):undefined;


!
require('CRMNowPayloadSource').hasOwnProperty(payloadSource)?require('invariant')(0,
'invalid payload source %s',
payloadSource):undefined;


require('ReactNative').unstable_batchedUpdates(function(){
_this2.$CRMNowDispatcher_tryDispatch({
payloadsource:payloadSource,
action:action});});}},{key:'$CRMNowDispatcher_tryDispatch',value:function $CRMNowDispatcher_tryDispatch(




payload){var 
actionType=payload.action.actionType;
if(this.isDispatching()){









if(__DEV__){
console.warn(
'attempt to dispatch the action "'+actionType+'"" while '+('dispatching '+
this.$CRMNowDispatcher_currrentActonType+'.'));}


this.$CRMNowDispatcher_payloadQueue.push(payload);
return;}


this.$CRMNowDispatcher_currrentActonType=actionType;
this.$CRMNowDispatcher_canDispatch=true;
this.dispatch(payload);
this.$CRMNowDispatcher_currrentActonType=null;
this.$CRMNowDispatcher_canDispatch=false;
this.$CRMNowDispatcher_didDispatch();}},{key:'$CRMNowDispatcher_didDispatch',value:function $CRMNowDispatcher_didDispatch()


{
!!this.isDispatching()?require('invariant')(0,'dispatch should have finished'):undefined;
if(this.$CRMNowDispatcher_payloadQueue.length>0){
this.$CRMNowDispatcher_tryDispatch(this.$CRMNowDispatcher_payloadQueue.shift());}}}]);return CRMNowDispatcher;}(require('Dispatcher'));




module.exports=new CRMNowDispatcher();