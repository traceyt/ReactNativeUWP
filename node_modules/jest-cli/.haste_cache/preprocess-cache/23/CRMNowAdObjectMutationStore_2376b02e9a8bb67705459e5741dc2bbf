'use strict';


























var MutationStatus=require('keyMirror')({
PENDING:true,
SUCCESS:true,
FAILED:true});var 


AdObjectMutation=function(){
function AdObjectMutation(options,level){babelHelpers.classCallCheck(this,AdObjectMutation);
!options?require('invariant')(0,'invalid options'):undefined;
!options.id?require('invariant')(0,'invalid ID'):undefined;
!options.objectID?require('invariant')(0,'invalid objectID'):undefined;

this.$AdObjectMutation_id=options.id;
this.$AdObjectMutation_objectID=options.objectID;
this.$AdObjectMutation_onSuccess=options.onSuccess;
this.$AdObjectMutation_onFailure=options.onFailure;
this.$AdObjectMutation_status=MutationStatus.PENDING;
this.$AdObjectMutation_level=level;
this.$AdObjectMutation_response=null;
this.$AdObjectMutation_error=null;}babelHelpers.createClass(AdObjectMutation,[{key:'getID',value:function getID()


{
return this.$AdObjectMutation_id;}},{key:'getObjectID',value:function getObjectID()


{
return this.$AdObjectMutation_objectID;}},{key:'getStatus',value:function getStatus()


{
return this.$AdObjectMutation_status;}},{key:'getLevel',value:function getLevel()


{
return this.$AdObjectMutation_level;}},{key:'getResponse',value:function getResponse()


{
return this.$AdObjectMutation_response;}},{key:'getError',value:function getError()


{
return this.$AdObjectMutation_error;}},{key:'succeeded',value:function succeeded(


response){
this.$AdObjectMutation_response=response;
this.$AdObjectMutation_status=MutationStatus.SUCCESS;
this.$AdObjectMutation_onSuccess&&this.$AdObjectMutation_onSuccess();}},{key:'failed',value:function failed(


error){
this.$AdObjectMutation_error=error;
this.$AdObjectMutation_status=MutationStatus.FAILED;
this.$AdObjectMutation_onFailure&&this.$AdObjectMutation_onFailure(error);}}]);return AdObjectMutation;}();var 

































CRMNowAdObjectMutationStore=function(_CRMNowBaseStore){babelHelpers.inherits(CRMNowAdObjectMutationStore,_CRMNowBaseStore);
function CRMNowAdObjectMutationStore(){babelHelpers.classCallCheck(this,CRMNowAdObjectMutationStore);var _this=babelHelpers.possibleConstructorReturn(this,Object.getPrototypeOf(CRMNowAdObjectMutationStore).call(this));


_this.$CRMNowAdObjectMutationStore_mutations={};return _this;}babelHelpers.createClass(CRMNowAdObjectMutationStore,[{key:'isPending',value:function isPending(


id){
return this.$CRMNowAdObjectMutationStore_mutations[id]&&
this.$CRMNowAdObjectMutationStore_mutations[id].getStatus()===MutationStatus.PENDING?
true:
false;}},{key:'$CRMNowAdObjectMutationStore_createNewMutation',value:function $CRMNowAdObjectMutationStore_createNewMutation(


options,level){
var id=options.id;
!
!this.isPending(id)?require('invariant')(0,
'cannot start new mutation before the previous one finishes'):undefined;

var mutation=new AdObjectMutation(options,level);
this.$CRMNowAdObjectMutationStore_mutations[id]=mutation;
this.inform('change',mutation);
return mutation;}},{key:'$CRMNowAdObjectMutationStore_onSuccess',value:function $CRMNowAdObjectMutationStore_onSuccess(


response,id){
var mutation=this.$CRMNowAdObjectMutationStore_mutations[id];
if(mutation){
mutation.succeeded(response);
this.$CRMNowAdObjectMutationStore_endMutation(id);}}},{key:'$CRMNowAdObjectMutationStore_onFailure',value:function $CRMNowAdObjectMutationStore_onFailure(



err,id,failureMessage){
var mutation=this.$CRMNowAdObjectMutationStore_mutations[id];
if(mutation){
mutation.failed(err);
this.$CRMNowAdObjectMutationStore_endMutation(id);
require('CRMNowNavigationEventEmitter').globalError(failureMessage);}}},{key:'$CRMNowAdObjectMutationStore_endMutation',value:function $CRMNowAdObjectMutationStore_endMutation(



id){
this.inform('change',this.$CRMNowAdObjectMutationStore_mutations[id]);
delete this.$CRMNowAdObjectMutationStore_mutations[id];}},{key:'activateAdgroupAndParentsRunStatus',value:function activateAdgroupAndParentsRunStatus(





options){var _this2=this;
var mutation=this.$CRMNowAdObjectMutationStore_createNewMutation(options,require('AdObjectLevels').ADGROUP);
var id=mutation.getID();
var failureMessage=
this.$CRMNowAdObjectMutationStore_getActivatingFailureMessage(require('AdObjectLevels').ADGROUP);

var onSuccess=function(response){return _this2.$CRMNowAdObjectMutationStore_onSuccess(response,id);};
var onFailure=function(err){return _this2.$CRMNowAdObjectMutationStore_onFailure(err,id,failureMessage);};

require('AdgroupAndParentsActivateAction').handleSwitch(
options.objectID,
options.campaignID,
options.campaignGroupID,
onSuccess,
onFailure);}},{key:'editAdObjectRunStatus',value:function editAdObjectRunStatus(



options){var _this3=this;
var mutation=this.$CRMNowAdObjectMutationStore_createNewMutation(options,options.level);
var id=mutation.getID();
var failureMessage;
if(options.isActivating){
failureMessage=this.$CRMNowAdObjectMutationStore_getActivatingFailureMessage(options.level);}else 
{
failureMessage=this.$CRMNowAdObjectMutationStore_getPausingFailureMessage(options.level);}


var onSuccess=function(response){return _this3.$CRMNowAdObjectMutationStore_onSuccess(response,id);};
var onFailure=function(err){return _this3.$CRMNowAdObjectMutationStore_onFailure(err,id,failureMessage);};

switch(options.level){
case require('AdObjectLevels').CAMPAIGN_GROUP:
require('AdCampaignGroupActivateAction').handleSwitch(
options.objectID,
options.isActivating,
onSuccess,
onFailure);

break;
case require('AdObjectLevels').CAMPAIGN:
require('AdCampaignActivateAction').handleSwitch(
options.objectID,
options.campaignGroupID,
options.isActivating,
onSuccess,
onFailure);

break;
case require('AdObjectLevels').ADGROUP:
require('AdgroupActivateAction').handleSwitch(
options.objectID,
options.campaignID,
options.campaignGroupID,
options.isActivating,
onSuccess,
onFailure);

break;}}},{key:'$CRMNowAdObjectMutationStore_getActivatingFailureMessage',value:function $CRMNowAdObjectMutationStore_getActivatingFailureMessage(



adObjectLevel){
switch(adObjectLevel){
case require('AdObjectLevels').CAMPAIGN_GROUP:
return require('fbt')._('__FBT__{"type":"text","texts":["Campaign couldn\'t be activated."],"desc":"An error message that appears when an advertiser attempts to activate a paused campaign and it fails to activate. This error message appears in a bar that pops up for a second beneath the navigation bar on the active screen. Space is somewhat limited.","project":""}__FBT__');








case require('AdObjectLevels').CAMPAIGN:
return require('fbt')._('__FBT__{"type":"text","texts":["Ad Set couldn\'t be activated."],"desc":"An error message that appears when an advertiser attempts to activate a paused ad set and it fails to activate. This error message appears in a bar that pops up for a second beneath the navigation bar on the active screen. Space is somewhat limited.","project":""}__FBT__');








case require('AdObjectLevels').ADGROUP:
return require('fbt')._('__FBT__{"type":"text","texts":["Ad couldn\'t be activated."],"desc":"An error message that appears when an advertiser attempts to activate a paused ad and it fails to activate. This error message appears in a bar that pops up for a second beneath the navigation bar on the active screen. Space is somewhat limited.","project":""}__FBT__');








default:
!
false?require('invariant')(0,
'Bad ad object level %s',
adObjectLevel):undefined;}}},{key:'$CRMNowAdObjectMutationStore_getPausingFailureMessage',value:function $CRMNowAdObjectMutationStore_getPausingFailureMessage(




adObjectLevel){
switch(adObjectLevel){
case require('AdObjectLevels').CAMPAIGN_GROUP:
return require('fbt')._('__FBT__{"type":"text","texts":["Campaign couldn\'t be paused."],"desc":"An error message that appears when an advertiser attempts to pause an active campaign and it fails to deactivate This error message appears in a bar that pops up for a second beneath the navigation bar on the active screen. Space is somewhat limited.","project":""}__FBT__');








case require('AdObjectLevels').CAMPAIGN:
return require('fbt')._('__FBT__{"type":"text","texts":["Ad Set couldn\'t be paused."],"desc":"An error message that appears when an advertiser attempts to pause an active ad set and it fails to deactivate This error message appears in a bar that pops up for a second beneath the navigation bar on the active screen. Space is somewhat limited.","project":""}__FBT__');








case require('AdObjectLevels').ADGROUP:
return require('fbt')._('__FBT__{"type":"text","texts":["Ad couldn\'t be paused."],"desc":"An error message that appears when an advertiser attempts to pause an active ad and it fails to deactivate This error message appears in a bar that pops up for a second beneath the navigation bar on the active screen. Space is somewhat limited.","project":""}__FBT__');








default:
!
false?require('invariant')(0,
'Bad ad object level %s',
adObjectLevel):undefined;}}},{key:'editName',value:function editName(







options){var _this4=this;
var mutation=this.$CRMNowAdObjectMutationStore_createNewMutation(options,options.level);
var id=mutation.getID();
var failureMessage=this.$CRMNowAdObjectMutationStore_getNameFailureMessage(options.level);

require('CRMNowEditNameAction').editName(
options.level,
options.objectID,
options.name,
function(response){return _this4.$CRMNowAdObjectMutationStore_onSuccess(response,id);},
function(err){return _this4.$CRMNowAdObjectMutationStore_onFailure(err,id,failureMessage);});}},{key:'$CRMNowAdObjectMutationStore_getNameFailureMessage',value:function $CRMNowAdObjectMutationStore_getNameFailureMessage(



adObjectLevel){
switch(adObjectLevel){
case require('AdObjectLevels').CAMPAIGN_GROUP:
return require('fbt')._('__FBT__{"type":"text","texts":["Campaign name changes couldn\'t be saved."],"desc":"Text for an error message that appears when an advertiser is trying to change the name of a campaign and their changes fail to save. This error message appears in a bar that pops up for a second beneath the navigation bar on the active screen. Space is somewhat limited.","project":""}__FBT__');









case require('AdObjectLevels').CAMPAIGN:
return require('fbt')._('__FBT__{"type":"text","texts":["Ad Set name changes couldn\'t be saved."],"desc":"Text for an error message that appears when an advertiser is trying to change the name of an ad set and their changes fail to save. This error message appears in a bar that pops up for a second beneath the navigation bar on the active screen. Space is somewhat limited.","project":""}__FBT__');









case require('AdObjectLevels').ADGROUP:
return require('fbt')._('__FBT__{"type":"text","texts":["Ad name changes couldn\'t be saved."],"desc":"Text for an error message that appears when an advertiser is trying to change the name of an ad and their changes fail to save. This error message appears in a bar that pops up for a second beneath the navigation bar on the active screen. Space is somewhat limited.","project":""}__FBT__');









default:
!
false?require('invariant')(0,
'Bad ad object level %s',
adObjectLevel):undefined;}}},{key:'editAdCampaignPlacement',value:function editAdCampaignPlacement(






options){var _this5=this;
var mutation=this.$CRMNowAdObjectMutationStore_createNewMutation(options,require('AdObjectLevels').CAMPAIGN);

var id=mutation.getID();
var failureMessage=require('fbt')._('__FBT__{"type":"text","texts":["Placement changes couldn\'t be saved."],"desc":"Text for an error message that appears when an advertiser is attempting to update the placement for an ad and their changes fail to save. This error message appears in a bar that pops up for a second beneath the navigation bar on the active screen. Space is somewhat limited.","project":""}__FBT__');







require('AdCampaignEditAction').editPlacementSpec(
options.objectID,
options.spec,
function(response){
_this5.$CRMNowAdObjectMutationStore_onSuccess(response,id);},

function(err){
_this5.$CRMNowAdObjectMutationStore_onFailure(err,id,failureMessage);});}},{key:'editAdCampaignTargeting',value:function editAdCampaignTargeting(








options){var _this6=this;
var mutation=this.$CRMNowAdObjectMutationStore_createNewMutation(options,require('AdObjectLevels').CAMPAIGN);
var id=mutation.getID();
var failureMessage=require('fbt')._('__FBT__{"type":"text","texts":["Audience changes couldn\'t be saved."],"desc":"Text for an error message that appears when an advertiser is attempting to update the target audiences for an ad and their changes fail to save. This error message appears in a bar that pops up for a second beneath the navigation bar on the active screen. Space is somewhat limited.","project":""}__FBT__');







require('AdCampaignEditAction').editTargetSpec(
options.objectID,
options.campaignGroupID,
options.previousAudienceID,
options.spec,
function(response){return _this6.$CRMNowAdObjectMutationStore_onSuccess(response,id);},
function(err){return _this6.$CRMNowAdObjectMutationStore_onFailure(err,id,failureMessage);});}},{key:'createAndSaveNewAudienceToCampaign',value:function createAndSaveNewAudienceToCampaign(



options){var _this7=this;
var mutation=this.$CRMNowAdObjectMutationStore_createNewMutation(options,require('AdObjectLevels').CAMPAIGN);
var id=mutation.getID();
var failureMessage=require('fbt')._('__FBT__{"type":"text","texts":["Audience changes couldn\'t be saved."],"desc":"Text for an error message that appears when an advertiser is attempting to edit a target audience for an ad and their changes fail to save. This error message displays in the campaign view.Space is somewhat limited.","project":""}__FBT__');






require('AdCampaignEditAction').createAndSaveNewAudienceToCampaign(
options.campaignID,
options.campaignGroupID,
options.name,
options.targetSpec,
function(response){return _this7.$CRMNowAdObjectMutationStore_onSuccess(response,id);},
function(err){return _this7.$CRMNowAdObjectMutationStore_onFailure(err,id,failureMessage);});}},{key:'editAdCampaignAudience',value:function editAdCampaignAudience(



options){var _this8=this;
var mutation=this.$CRMNowAdObjectMutationStore_createNewMutation(options,require('AdObjectLevels').CAMPAIGN);
var id=mutation.getID();
var failureMessage=require('fbt')._('__FBT__{"type":"text","texts":["Audience changes couldn\'t be saved."],"desc":"Text for an error message that appears when an advertiser is attempting to update the target audiences for an ad and their changes fail to save. This error message appears in a bar that pops up for a second beneath the navigation bar on the active screen. Space is somewhat limited.","project":""}__FBT__');







require('AdCampaignEditAction').editAudience(
options.objectID,
options.campaignGroupID,
options.previousAudienceID,
options.audienceID,
function(response){return _this8.$CRMNowAdObjectMutationStore_onSuccess(response,id);},
function(err){return _this8.$CRMNowAdObjectMutationStore_onFailure(err,id,failureMessage);});}},{key:'editAudience',value:function editAudience(



options){var _this9=this;
var mutation=this.$CRMNowAdObjectMutationStore_createNewMutation(options,require('AdObjectLevels').CAMPAIGN);
var id=mutation.getID();


var failureMessage=require('fbt')._('__FBT__{"type":"text","texts":["Audience changes couldn\'t be saved."],"desc":"Text for an error message that appears when an advertiser is attempting to edit a target audience for an ad and their changes fail to save. This error message appears in a bar that pops up for a second beneath the navigation bar on the active screen. Space is somewhat limited.","project":""}__FBT__');






require('AdAccountEditAudienceAction').editAudience(
options.objectID,
options.name,
options.spec,
function(response){return _this9.$CRMNowAdObjectMutationStore_onSuccess(response,id);},
function(err){return _this9.$CRMNowAdObjectMutationStore_onFailure(err,id,failureMessage);});}},{key:'createNewAudience',value:function createNewAudience(



options){var _this10=this;
var mutation=this.$CRMNowAdObjectMutationStore_createNewMutation(options,require('AdObjectLevels').CAMPAIGN);
var id=mutation.getID();


var failureMessage=require('fbt')._('__FBT__{"type":"text","texts":["Audience changes couldn\'t be saved."],"desc":"Text for an error message that appears when an advertiser is attempting to create a new target audience for an ad and their changes fail to save. This error message appears in a bar that pops up for a second beneath the navigation bar on the active screen. Space is somewhat limited.","project":""}__FBT__');






require('AdAccountCreateAudienceAction').createAudience(
options.objectID,
options.name,
options.spec,
function(response){return _this10.$CRMNowAdObjectMutationStore_onSuccess(response,id);},
function(err){return _this10.$CRMNowAdObjectMutationStore_onFailure(err,id,failureMessage);});}},{key:'editAdCampaignBudgetAndSchedule',value:function editAdCampaignBudgetAndSchedule(






options){var _this11=this;
var mutation=this.$CRMNowAdObjectMutationStore_createNewMutation(options,require('AdObjectLevels').CAMPAIGN);
var id=mutation.getID();
var failureMessage=require('fbt')._('__FBT__{"type":"text","texts":["Budget and schedule changes couldn\'t be saved."],"desc":"Text for an error message that appears when an advertiser attempts to edit the budget and/or schedule of an ad and their changes fail to save. This error message appears in a bar that pops up for a second beneath the navigation bar on the active screen. Space is somewhat limited.","project":""}__FBT__');







require('AdCampaignEditAction').editBudgetAndSchedule(
options.objectID,
options.campaignGroupID,
options.budgetType,
options.budget,
options.startDateISO,
options.endDateISO,
function(response){return _this11.$CRMNowAdObjectMutationStore_onSuccess(response,id);},
function(err){return _this11.$CRMNowAdObjectMutationStore_onFailure(err,id,failureMessage);});}},{key:'editAdgroupImage',value:function editAdgroupImage(






options){var _this12=this;
var mutation=this.$CRMNowAdObjectMutationStore_createNewMutation(options,require('AdObjectLevels').ADGROUP);
var id=mutation.getID();
var failureMessage=require('fbt')._('__FBT__{"type":"text","texts":["Image changes couldn\'t be saved."],"desc":"Text for an error message that appears when an advertiser attempts to update the image for an ad and their changes fail to save. This error message appears in a bar that pops up for a second beneath the navigation bar on the active screen. Space is somewhat limited.","project":""}__FBT__');







var onFailure=function(err){return (
_this12.$CRMNowAdObjectMutationStore_onFailure(err,id,failureMessage));};


require('CRMNowImageUploadController').cropAndUpload(
options.accountID,
options.legacyAccountID,
options.imageURI,
options.imageTransformData,
{
onUploadStarted:null,
onUploadSucceeded:function(imageHash){
var newOptions=babelHelpers.extends({},options);
newOptions.spec=
require('CRMNowCreativeUtils').updateCreativeSpecWithImageHash(
newOptions.spec,
imageHash);

_this12.$CRMNowAdObjectMutationStore_editAdgroupCreativeHelper(newOptions,failureMessage);},

onUploadFailed:onFailure,
onUploadProgressChanged:null,
onCropFailed:onFailure});}},{key:'editAdgroupCreative',value:function editAdgroupCreative(




options){
this.$CRMNowAdObjectMutationStore_createNewMutation(options,require('AdObjectLevels').ADGROUP);
var failureMessage=require('fbt')._('__FBT__{"type":"text","texts":["Text and links changes couldn\'t be saved."],"desc":"Text for an error message that appears when an advertiser attempts change the text and/or links for an ad and their changes fail to save. This error message appears in a bar that pops up for a second beneath the navigation bar on the active screen. Space is somewhat limited.","project":""}__FBT__');







this.$CRMNowAdObjectMutationStore_editAdgroupCreativeHelper(options,failureMessage);}},{key:'$CRMNowAdObjectMutationStore_editAdgroupCreativeHelper',value:function $CRMNowAdObjectMutationStore_editAdgroupCreativeHelper(


options,failureMessage){var _this13=this;

var id=options.id;
require('AdgroupEditAction').editCreativeSpec(
options.objectID,
options.spec,
function(response){return _this13.$CRMNowAdObjectMutationStore_onSuccess(response,id);},
function(err){return _this13.$CRMNowAdObjectMutationStore_onFailure(err,id,failureMessage);});}},{key:'createNewPost',value:function createNewPost(



options){var _this14=this;
var mutation=this.$CRMNowAdObjectMutationStore_createNewMutation(options,require('AdObjectLevels').CAMPAIGN);
var id=mutation.getID();
var failureMessage=require('fbt')._('__FBT__{"type":"text","texts":["There was a problem with your post and it wasn\'t published. Please check your network connection and try again"],"desc":"Text for an error message that appears when an advertiser is attempingto create a new post to boost and their changes fail to save. This error message appears in a bar that pops up for a second beneath the navigation bar on the active screen. Space is somewhat limited.","project":""}__FBT__');







require('CRMNowCreatePostAction').createPost(
options.objectID,
options.bodyText,
options.imageURI,
function(response){return _this14.$CRMNowAdObjectMutationStore_onSuccess(response,id);},
function(err){return _this14.$CRMNowAdObjectMutationStore_onFailure(err,id,failureMessage);});}}]);return CRMNowAdObjectMutationStore;}(require('CRMNowBaseStore'));





CRMNowAdObjectMutationStore.prototype.MutationStatus=MutationStatus;

module.exports=new CRMNowAdObjectMutationStore();