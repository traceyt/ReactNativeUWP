{
  "_args": [
    [
      "promiseback@https://registry.npmjs.org/promiseback/-/promiseback-2.0.2.tgz",
      "C:\\gitRepo\\f8app"
    ]
  ],
  "_from": "promiseback@>=2.0.2 <3.0.0",
  "_id": "promiseback@2.0.2",
  "_inCache": true,
  "_location": "/promiseback",
  "_phantomChildren": {},
  "_requested": {
    "name": "promiseback",
    "raw": "promiseback@https://registry.npmjs.org/promiseback/-/promiseback-2.0.2.tgz",
    "rawSpec": "https://registry.npmjs.org/promiseback/-/promiseback-2.0.2.tgz",
    "scope": null,
    "spec": "https://registry.npmjs.org/promiseback/-/promiseback-2.0.2.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/json-file-plus"
  ],
  "_resolved": "https://registry.npmjs.org/promiseback/-/promiseback-2.0.2.tgz",
  "_shasum": "424af89a43de0c6a8997bf3cb2d8139447fb3b97",
  "_shrinkwrap": null,
  "_spec": "promiseback@https://registry.npmjs.org/promiseback/-/promiseback-2.0.2.tgz",
  "_where": "C:\\gitRepo\\f8app",
  "author": {
    "name": "Jordan Harband"
  },
  "bugs": {
    "url": "https://github.com/ljharb/promiseback/issues"
  },
  "dependencies": {
    "is-callable": "^1.1.0",
    "promise-deferred": "^2.0.1"
  },
  "description": "Accept an optional node-style callback, and also return a spec-compliant Promise!",
  "devDependencies": {
    "@ljharb/eslint-config": "^1.3.0",
    "covert": "^1.1.0",
    "eslint": "^1.6.0",
    "foreach": "^2.0.5",
    "jscs": "^2.3.1",
    "nsp": "^1.1.0",
    "tape": "^4.2.1"
  },
  "engines": {
    "node": ">= 0.4"
  },
  "homepage": "https://github.com/ljharb/promiseback",
  "keywords": [
    "promiseback",
    "promisebacks",
    "promise",
    "promises",
    "callback",
    "callbacks"
  ],
  "license": "MIT",
  "main": "index.js",
  "name": "promiseback",
  "optionalDependencies": {},
  "readme": "#promiseback <sup>[![Version Badge][npm-version-svg]][npm-url]</sup>\n\n[![Build Status][travis-svg]][travis-url]\n[![dependency status][deps-svg]][deps-url]\n[![dev dependency status][dev-deps-svg]][dev-deps-url]\n\n[![npm badge][npm-badge-png]][npm-url]\n\n[![browser support][testling-png]][testling-url]\n\nAccept an optional node-style callback, and also return a spec-compliant Promise!\n\n## API\n```js\nvar promiseback = require('promiseback');\nvar callback = function (err, value) {};\n\n/* without a promise: */\npromiseback(callback);\n\t/*\n\t\t- will throw if `callback` is not a function\n\t\t- returns a \"deferred\"\n\t\t- has resolve/reject methods, and `promise` property\n\t\t- will call `callback` as expected when deferred is resolved\n\t*/\n\n/* with a promise: */\npromiseback(promise, callback);\n\t/*\n\t\t- will throw if `callback` is truthy and not a function\n\t\t- `promise` will be converted to a Promise, so you can pass a value as well\n\t\t- returns a Promise\n\t\t- will call `callback` as expected when the promise is fulfilled\n\t*/\n```\n\n## Examples\n\nUsing deferreds:\n```js\nvar promiseback = require('promiseback');\n\nmodule.exports = function doSomethingCool(thing, callback) {\n\t// If callback is not provided, this code will simply return a normal promise.\n\t// If callback is provided but is not a function, promiseback will immediately throw a TypeError.\n\n\t// \"deferred\" is an object with `reject/resolve` methods, and a `promise` property.\n\tvar deferred = promiseback(callback);\n\tif (thing) {\n\t\tdeferred.resolve(thing);\n\t} else {\n\t\tdeferred.reject(thing);\n\t}\n\treturn deferred.promise;\n};\n```\n\nUsing a straight promise, when you can get it from somewhere else:\n```js\nvar promiseback = require('promiseback');\n\nmodule.exports = function doSomethingCool(thing, callback) {\n\t// If callback is not provided, this code will simply return a normal promise.\n\t// If callback is provided but is not a function, promiseback will immediately throw a TypeError.\n\n\tvar newThingPromise = makeNewThing(thing);\n\treturn promiseback(newThingPromise, callback);\n};\n```\n\n## Tests\nSimply clone the repo, `npm install`, and run `npm test`\n\n[npm-url]: https://npmjs.org/package/promiseback\n[npm-version-svg]: http://versionbadg.es/ljharb/promiseback.svg\n[travis-svg]: https://travis-ci.org/ljharb/promiseback.svg\n[travis-url]: https://travis-ci.org/ljharb/promiseback\n[deps-svg]: https://david-dm.org/ljharb/promiseback.svg\n[deps-url]: https://david-dm.org/ljharb/promiseback\n[dev-deps-svg]: https://david-dm.org/ljharb/promiseback/dev-status.svg\n[dev-deps-url]: https://david-dm.org/ljharb/promiseback#info=devDependencies\n[testling-png]: https://ci.testling.com/ljharb/promiseback.png\n[testling-url]: https://ci.testling.com/ljharb/promiseback\n[npm-badge-png]: https://nodei.co/npm/promiseback.png?downloads=true&stars=true\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/ljharb/promiseback.git"
  },
  "scripts": {
    "coverage": "covert test.js",
    "coverage-quiet": "covert test.js --quiet",
    "eslint": "eslint *.js",
    "jscs": "jscs *.js",
    "lint": "npm run jscs && npm run eslint",
    "security": "nsp package",
    "test": "npm run lint && node test.js && npm run coverage-quiet && npm run security"
  },
  "testling": {
    "browsers": [
      "iexplore/6.0..latest",
      "firefox/3.0..6.0",
      "firefox/15.0..latest",
      "firefox/nightly",
      "chrome/4.0..10.0",
      "chrome/20.0..latest",
      "chrome/canary",
      "opera/10.0..latest",
      "opera/next",
      "safari/4.0..latest",
      "ipad/6.0..latest",
      "iphone/6.0..latest",
      "android-browser/4.2"
    ],
    "files": "test.js"
  },
  "version": "2.0.2"
}
