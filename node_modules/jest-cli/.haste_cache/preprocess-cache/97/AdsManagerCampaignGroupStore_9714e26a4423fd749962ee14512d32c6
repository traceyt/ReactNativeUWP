'use strict';























var Queries={
getCampaignGroupQuery:function(){
return function(){return {children:[{fieldName:'name',kind:'Field',metadata:{},type:'String'},{fieldName:'objective',kind:'Field',metadata:{},type:'AdObjectiveType'},{fieldName:'id',kind:'Field',metadata:{isGenerated:true,isRequisite:true},type:'ID'}],id:require('Relay').QL.__id(),kind:'Fragment',metadata:{},name:'AdsManagerCampaignGroupStore_GetCampaignGroupQueryRelayQL',type:'AdCampaignGroup'};}();}};









var StoreState=require('immutable').Record({
active:false,
isDraftMode:false});



var SpecState=require('immutable').Record({
name:null,
run_status:require('AdsRunStatus').ACTIVE,
objective:null});var 



AdsManagerCampaignGroupStore=function(_FluxStore){babelHelpers.inherits(AdsManagerCampaignGroupStore,_FluxStore);




function AdsManagerCampaignGroupStore(){babelHelpers.classCallCheck(this,AdsManagerCampaignGroupStore);var _this=babelHelpers.possibleConstructorReturn(this,Object.getPrototypeOf(AdsManagerCampaignGroupStore).call(this,require('AdsManagerDispatcher')));

_this.$AdsManagerCampaignGroupStore_storeState=new StoreState();
_this.$AdsManagerCampaignGroupStore_specState=new SpecState();
_this.Queries=Queries;return _this;}babelHelpers.createClass(AdsManagerCampaignGroupStore,[{key:'__onDispatch',value:function __onDispatch(


payload){
this.__dispatcher.waitFor([
require('AdsManagerPageStore').getDispatchToken()]);


var storeState=this.$AdsManagerCampaignGroupStore_storeState;
var specState=this.$AdsManagerCampaignGroupStore_specState;
var action=payload.action;

if(require('AdsManagerActionTypes').isEditorActionType(action.actionType)){
if(!this.$AdsManagerCampaignGroupStore_storeState.active){



console.warn('Received an editor action while not in editor mode');
return;}}



switch(action.actionType){
case require('AdsManagerActionTypes').BEGIN_EDITOR:
this.$AdsManagerCampaignGroupStore_storeState=new StoreState({active:true});
this.$AdsManagerCampaignGroupStore_specState=new SpecState();
break;
case require('AdsManagerActionTypes').RESET_EDITOR:
this.$AdsManagerCampaignGroupStore_storeState=new StoreState({active:false});
this.$AdsManagerCampaignGroupStore_specState=new SpecState();
break;
case require('AdsManagerActionTypes').EDITOR_CAMPAIGN_GROUP_CHANGED:
this.$AdsManagerCampaignGroupStore_populateStoreWithNode(action.campaignGroup);
break;
case require('AdsManagerActionTypes').OBJECTIVE_SELECTED:
this.$AdsManagerCampaignGroupStore_specState=this.$AdsManagerCampaignGroupStore_specState.merge({
objective:action.objective});



var name=require('fbt')._('__FBT__{"type":"text","texts":["{page name} - {objective (e.g. Local Awareness)}"],"desc":"Text that will be used as the default name for a campaign, e.g. My Page - Post Engagement","project":""}__FBT__',[require('fbt').param(



'page name',
require('AdsManagerPageStore').getPageName()),require('fbt').param(


'objective (e.g. Local Awareness)',
require('AdsManagerObjectiveTypes').humanReadableOutcome(action.objective))]);



name=require('AdsManagerNameUtils').getNameWithinValidLength(name);
this.$AdsManagerCampaignGroupStore_specState=this.$AdsManagerCampaignGroupStore_specState.merge({
name:name});

break;


case require('AdsManagerActionTypes').CAMPAIGN_GROUP_NAME_CHANGED:
!(
action.name.length<=require('AdsValidationConfig').FRIENDLY_NAME_MAX_LENGTH)?require('invariant')(0,
'campaign group name too long'):undefined;

this.$AdsManagerCampaignGroupStore_specState=this.$AdsManagerCampaignGroupStore_specState.merge({
name:action.name});

break;
case require('AdsManagerActionTypes').RESUME_DRAFT:
var campaignGroupSpec=action.draft.getCampaignGroupSpec();
this.$AdsManagerCampaignGroupStore_specState=this.$AdsManagerCampaignGroupStore_specState.merge({
name:campaignGroupSpec.name,
objective:campaignGroupSpec.objective});

this.$AdsManagerCampaignGroupStore_storeState=this.$AdsManagerCampaignGroupStore_storeState.merge({
isDraftMode:true});

break;}


if(this.$AdsManagerCampaignGroupStore_storeState!==storeState||this.$AdsManagerCampaignGroupStore_specState!==specState){
this.__emitChange();}}},{key:'$AdsManagerCampaignGroupStore_populateStoreWithNode',value:function $AdsManagerCampaignGroupStore_populateStoreWithNode(



campaignGroup){
var campaignGroupID=require('RelayRecord').getDataID(campaignGroup);
!campaignGroupID?require('invariant')(0,'invalid campaignGroup %s',campaignGroup):undefined;

var campaignGroup=require('Relay').Store.read(
require('fromGraphQL').Fragment(Queries.getCampaignGroupQuery()),
campaignGroupID);





!!!campaignGroup?require('invariant')(0,'invalid campaignGourp %s',campaignGroup):undefined;

this.$AdsManagerCampaignGroupStore_specState=this.$AdsManagerCampaignGroupStore_specState.merge({
name:campaignGroup.name,
objective:campaignGroup.objective});}},{key:'isActive',value:function isActive()






{
return this.$AdsManagerCampaignGroupStore_storeState.active;}},{key:'getName',value:function getName()


{
return this.$AdsManagerCampaignGroupStore_specState.name;}},{key:'getIsDraftMode',value:function getIsDraftMode()


{
return this.$AdsManagerCampaignGroupStore_storeState.isDraftMode;}},{key:'getCampaignGroupSpec',value:function getCampaignGroupSpec()


{
return this.$AdsManagerCampaignGroupStore_specState.toJS();}},{key:'getCampaignGroupErrors',value:function getCampaignGroupErrors()


{
return [this.getCampaignGroupNameEmptyError()].filter(function(e){return e;});}},{key:'getCampaignGroupNameEmptyError',value:function getCampaignGroupNameEmptyError()


{
var name=this.$AdsManagerCampaignGroupStore_specState.name;
return name&&name.length?null:require('fbt')._('__FBT__{"type":"text","texts":["Add a Campaign name for your ad."],"desc":"Text for an error message that appears at the top of the Review screen if an advertiser is trying to create or edit a campaign without a valid name. This can happen if they edit the name and delete the default value. This error message appears in a bulleted list at the top of the screen, so space is not limited.","project":""}__FBT__');}},{key:'getObjective',value:function getObjective()









{
return this.$AdsManagerCampaignGroupStore_specState.objective;}}]);return AdsManagerCampaignGroupStore;}(require('FluxStore'));




module.exports=new AdsManagerCampaignGroupStore();