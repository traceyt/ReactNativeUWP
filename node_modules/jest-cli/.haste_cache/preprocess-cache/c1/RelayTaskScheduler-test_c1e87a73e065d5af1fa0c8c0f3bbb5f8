/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @emails oncall+relay
 */

'use strict';

jest.dontMock('RelayTaskScheduler');




describe('RelayTaskScheduler', function () {
  beforeEach(function () {
    jest.resetModuleRegistry();});


  describe('enqueue()', function () {
    describe('having had no scheduler injected', function () {
      it('causes a queue to be created the first time it\'s used', function () {
        expect(require('RelayTaskQueue').mock.instances.length).toBe(0);
        require('RelayTaskScheduler').enqueue(function () {});
        expect(require('RelayTaskQueue').mock.instances.length).toBe(1);
        expect(require('RelayTaskQueue').prototype.constructor).toBeCalledWith(undefined);
        require('RelayTaskScheduler').enqueue(function () {});
        expect(require('RelayTaskQueue').mock.instances.length).toBe(1);});});



    describe('having had a scheduler injected', function () {
      var mockScheduler = undefined;

      beforeEach(function () {
        mockScheduler = jest.genMockFunction();
        require('RelayTaskScheduler').injectScheduler(mockScheduler);});


      it('causes a queue to be created the first time it\'s used', function () {
        expect(require('RelayTaskQueue').mock.instances.length).toBe(0);
        require('RelayTaskScheduler').enqueue(function () {});
        expect(require('RelayTaskQueue').mock.instances.length).toBe(1);
        expect(require('RelayTaskQueue').prototype.constructor).toBeCalledWith(
        mockScheduler);

        require('RelayTaskScheduler').enqueue(function () {});
        expect(require('RelayTaskQueue').mock.instances.length).toBe(1);});


      it('uses the injected scheduler to schedule tasks', function () {
        jest.dontMock('RelayTaskQueue');
        var mockTask = function () {};
        require('RelayTaskScheduler').enqueue(mockTask);
        expect(mockScheduler).toBeCalled();});});});});