/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @emails oncall+relay
 */

'use strict';function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError('Cannot call a class as a function');}}function _inherits(subClass, superClass) {if (typeof superClass !== 'function' && superClass !== null) {throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;}

require('configureForRelayOSS');

jest.dontMock('RelayContainer');








describe('RelayContainer.hasPartialData', function () {
  var MockContainer;
  var relayContext;
  var RelayTestRenderer;

  beforeEach(function () {
    jest.resetModuleRegistry();var 

    MockComponent = (function (_React$Component) {_inherits(MockComponent, _React$Component);function MockComponent() {_classCallCheck(this, MockComponent);_React$Component.apply(this, arguments);}MockComponent.prototype.
      render = function render() {
        return require('/Users/cpojer/Projects/relay/scripts/jest/../../node_modules/react').createElement('div', null);};return MockComponent;})(require('/Users/cpojer/Projects/relay/scripts/jest/../../node_modules/react').Component);


    MockContainer = require('Relay').createContainer(MockComponent, { 
      fragments: { foo: function () {return (function () {return { children: [{ fieldName: 'id', kind: 'Field', metadata: { isRequisite: true }, type: 'ID' }, { fieldName: '__typename', kind: 'Field', metadata: { isGenerated: true, isRequisite: true }, type: 'String' }], id: 'pq0tyzqlUfX8:0', kind: 'Fragment', metadata: { isAbstract: true }, name: 'RelayContainer_hasPartialDataRelayQL', type: 'Node' };})();} } });

    relayContext = new (require('RelayContext'))();
    RelayTestRenderer = require('RelayTestUtils').createRenderer();

    require('GraphQLStoreQueryResolver').mockDefaultResolveImplementation(function (_, dataID) {
      return { __dataID__: dataID, id: dataID };});


    jasmine.addMatchers(require('RelayTestUtils').matchers);});


  it('returns true for records with partial data bit set', function () {
    var instance = RelayTestRenderer.render(
    function (genMockPointer) {return require('/Users/cpojer/Projects/relay/scripts/jest/../../node_modules/react').createElement(MockContainer, { foo: genMockPointer('123') });}, 
    relayContext);

    var prop = { 
      __dataID__: '123', 
      __status__: require('RelayRecordStatusMap').setPartialStatus(0, true) };

    expect(instance.hasPartialData(prop)).toBe(true);});


  it('returns false for records without partial data bit set', function () {
    var instance = RelayTestRenderer.render(
    function (genMockPointer) {return require('/Users/cpojer/Projects/relay/scripts/jest/../../node_modules/react').createElement(MockContainer, { foo: genMockPointer('123') });}, 
    relayContext);

    expect(instance.hasPartialData({ __dataID__: '123' })).toBe(false);});});