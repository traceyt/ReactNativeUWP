/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @emails oncall+relay
 */

'use strict';



describe('RelayRecord', function () {
  beforeEach(function () {
    jest.resetModuleRegistry();});


  it('checks if a value is a record', function () {
    expect(require('RelayRecord').isRecord({ __dataID__: '123' })).toBe(true);

    expect(require('RelayRecord').isRecord(null)).toBe(false);
    expect(require('RelayRecord').isRecord(undefined)).toBe(false);
    expect(require('RelayRecord').isRecord([])).toBe(false);
    expect(require('RelayRecord').isRecord({})).toBe(false);

    var deceptiveArray = [];
    deceptiveArray.__dataID__ = '123';
    expect(require('RelayRecord').isRecord(deceptiveArray)).toBe(false);});


  it('checks if a key is for metadata', function () {
    expect(require('RelayRecord').isMetadataKey('__dataID__')).toBe(true);
    expect(require('RelayRecord').isMetadataKey('__range__')).toBe(true);

    expect(require('RelayRecord').isMetadataKey('id')).toBe(false);
    expect(require('RelayRecord').isMetadataKey('')).toBe(false);});});