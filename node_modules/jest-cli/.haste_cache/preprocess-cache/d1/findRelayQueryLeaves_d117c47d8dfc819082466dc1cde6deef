'use strict';var _RelayConnectionInter=require('RelayConnectionInterface');var 



















































EDGES=_RelayConnectionInter.EDGES;var PAGE_INFO=_RelayConnectionInter.PAGE_INFO;












function findRelayQueryLeaves(
store,
cachedRecords,
queryNode,
dataID,
path,
rangeCalls)
{
var finder=new RelayQueryLeavesFinder(store,cachedRecords);

var state={
dataID:dataID,
missingData:false,
path:path,
rangeCalls:rangeCalls,
rangeInfo:undefined};

finder.visit(queryNode,state);
return {
missingData:state.missingData,
pendingNodes:finder.getPendingNodes()};}var 



RelayQueryLeavesFinder=function(_RelayQueryVisitor){babelHelpers.inherits(RelayQueryLeavesFinder,_RelayQueryVisitor);




function RelayQueryLeavesFinder(store){var cachedRecords=arguments.length<=1||arguments[1]===undefined?{}:arguments[1];babelHelpers.classCallCheck(this,RelayQueryLeavesFinder);var _this=babelHelpers.possibleConstructorReturn(this,Object.getPrototypeOf(RelayQueryLeavesFinder).call(this));

_this.$RelayQueryLeavesFinder_store=store;
_this.$RelayQueryLeavesFinder_cachedRecords=cachedRecords;
_this.$RelayQueryLeavesFinder_pendingNodes={};return _this;}babelHelpers.createClass(RelayQueryLeavesFinder,[{key:'getPendingNodes',value:function getPendingNodes()


{
return this.$RelayQueryLeavesFinder_pendingNodes;}},{key:'traverse',value:function traverse(






node,
state)
{
var children=node.getChildren();
for(var ii=0;ii<children.length;ii++){
if(state.missingData){
return;}

this.visit(children[ii],state);}}},{key:'visitFragment',value:function visitFragment(




fragment,
state)
{
var dataID=state.dataID;
var recordState=this.$RelayQueryLeavesFinder_store.getRecordState(dataID);
if(recordState===require('RelayRecordState').UNKNOWN){
this.$RelayQueryLeavesFinder_handleMissingData(fragment,state);
return;}else 
if(recordState===require('RelayRecordState').NONEXISTENT){
return;}


if(require('isCompatibleRelayFragmentType')(
fragment,
this.$RelayQueryLeavesFinder_store.getType(dataID)))
{
this.traverse(fragment,state);}}},{key:'visitField',value:function visitField(




field,
state)
{
var dataID=state.dataID;
var recordState=this.$RelayQueryLeavesFinder_store.getRecordState(dataID);
if(recordState===require('RelayRecordState').UNKNOWN){
this.$RelayQueryLeavesFinder_handleMissingData(field,state);
return;}else 
if(recordState===require('RelayRecordState').NONEXISTENT){
return;}


if(state.rangeCalls&&!state.rangeInfo){
var metadata=this.$RelayQueryLeavesFinder_store.getRangeMetadata(dataID,state.rangeCalls);
if(metadata){
state.rangeInfo=metadata;}}


var rangeInfo=state.rangeInfo;
if(rangeInfo&&field.getSchemaName()===EDGES){
this.$RelayQueryLeavesFinder_visitEdges(field,state);}else 
if(rangeInfo&&field.getSchemaName()===PAGE_INFO){
this.$RelayQueryLeavesFinder_visitPageInfo(field,state);}else 
if(!field.canHaveSubselections()){
this.$RelayQueryLeavesFinder_visitScalar(field,state);}else 
if(field.isPlural()){
this.$RelayQueryLeavesFinder_visitPlural(field,state);}else 
if(field.isConnection()){
this.$RelayQueryLeavesFinder_visitConnection(field,state);}else 
{
this.$RelayQueryLeavesFinder_visitLinkedField(field,state);}}},{key:'$RelayQueryLeavesFinder_visitScalar',value:function $RelayQueryLeavesFinder_visitScalar(



field,state){
var fieldData=this.$RelayQueryLeavesFinder_store.getField(state.dataID,field.getStorageKey());
if(fieldData===undefined){
this.$RelayQueryLeavesFinder_handleMissingData(field,state);}}},{key:'$RelayQueryLeavesFinder_visitPlural',value:function $RelayQueryLeavesFinder_visitPlural(



field,state){
var dataIDs=this.$RelayQueryLeavesFinder_store.getLinkedRecordIDs(
state.dataID,
field.getStorageKey());

if(dataIDs===undefined){
this.$RelayQueryLeavesFinder_handleMissingData(field,state);
return;}

if(dataIDs){
for(var ii=0;ii<dataIDs.length;ii++){
if(state.missingData){
break;}

var nextState={
dataID:dataIDs[ii],
missingData:false,
path:require('RelayQueryPath').getPath(state.path,field,dataIDs[ii]),
rangeCalls:undefined,
rangeInfo:undefined};

this.traverse(field,nextState);
state.missingData=nextState.missingData;}}}},{key:'$RelayQueryLeavesFinder_visitConnection',value:function $RelayQueryLeavesFinder_visitConnection(




field,state){
var calls=field.getCallsWithValues();
var dataID=this.$RelayQueryLeavesFinder_store.getLinkedRecordID(
state.dataID,
field.getStorageKey());

if(dataID===undefined){
this.$RelayQueryLeavesFinder_handleMissingData(field,state);
return;}

if(dataID){
var nextState={
dataID:dataID,
missingData:false,
path:require('RelayQueryPath').getPath(state.path,field,dataID),
rangeCalls:calls,
rangeInfo:null};

var metadata=this.$RelayQueryLeavesFinder_store.getRangeMetadata(dataID,calls);
if(metadata){
nextState.rangeInfo=metadata;}

this.traverse(field,nextState);
state.missingData=state.missingData||nextState.missingData;}}},{key:'$RelayQueryLeavesFinder_visitEdges',value:function $RelayQueryLeavesFinder_visitEdges(



field,state){
var rangeInfo=state.rangeInfo;

if(!rangeInfo){
this.$RelayQueryLeavesFinder_handleMissingData(field,state);
return;}

if(rangeInfo.diffCalls.length){
state.missingData=true;
return;}

var edgeIDs=rangeInfo.requestedEdgeIDs;
for(var ii=0;ii<edgeIDs.length;ii++){
if(state.missingData){
break;}

var nextState={
dataID:edgeIDs[ii],
missingData:false,
path:require('RelayQueryPath').getPath(state.path,field,edgeIDs[ii]),
rangeCalls:undefined,
rangeInfo:undefined};

this.traverse(field,nextState);
state.missingData=state.missingData||nextState.missingData;}}},{key:'$RelayQueryLeavesFinder_visitPageInfo',value:function $RelayQueryLeavesFinder_visitPageInfo(



field,state){var 
rangeInfo=state.rangeInfo;
if(!rangeInfo||!rangeInfo.pageInfo){
this.$RelayQueryLeavesFinder_handleMissingData(field,state);
return;}}},{key:'$RelayQueryLeavesFinder_visitLinkedField',value:function $RelayQueryLeavesFinder_visitLinkedField(



field,state){
var dataID=
this.$RelayQueryLeavesFinder_store.getLinkedRecordID(state.dataID,field.getStorageKey());
if(dataID===undefined){
this.$RelayQueryLeavesFinder_handleMissingData(field,state);
return;}

if(dataID){
var nextState={
dataID:dataID,
missingData:false,
path:require('RelayQueryPath').getPath(state.path,field,dataID),
rangeCalls:undefined,
rangeInfo:undefined};

this.traverse(field,nextState);
state.missingData=state.missingData||nextState.missingData;}}},{key:'$RelayQueryLeavesFinder_handleMissingData',value:function $RelayQueryLeavesFinder_handleMissingData(



node,state){
var dataID=state.dataID;
if(this.$RelayQueryLeavesFinder_cachedRecords.hasOwnProperty(dataID)){


state.missingData=true;}else 
{


this.$RelayQueryLeavesFinder_pendingNodes[dataID]=this.$RelayQueryLeavesFinder_pendingNodes[dataID]||[];
this.$RelayQueryLeavesFinder_pendingNodes[dataID].push({
node:node,
path:state.path,
rangeCalls:state.rangeCalls});}}}]);return RelayQueryLeavesFinder;}(require('RelayQueryVisitor'));





module.exports=require('RelayProfiler').instrument(
'findRelayQueryLeaves',
findRelayQueryLeaves);