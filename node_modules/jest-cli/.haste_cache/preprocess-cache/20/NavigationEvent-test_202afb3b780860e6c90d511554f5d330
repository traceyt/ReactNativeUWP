'use strict';


























jest.
dontMock('NavigationEvent').
dontMock('fbjs/lib/invariant');



describe('NavigationEvent',function(){
it('constructs',function(){
var target={};
var event=new (require('NavigationEvent'))('foo',target,123);
expect(event.type).toBe('foo');
expect(event.target).toBe(target);
expect(event.data).toBe(123);});


it('constructs from pool',function(){
var target={};
var event=require('NavigationEvent').pool('foo',target,123);
expect(event.type).toBe('foo');
expect(event.target).toBe(target);
expect(event.data).toBe(123);});


it('prevents default',function(){
var event=new (require('NavigationEvent'))('foo',{},123);
expect(event.defaultPrevented).toBe(false);
event.preventDefault();
expect(event.defaultPrevented).toBe(true);});


it('recycles',function(){
var event1=require('NavigationEvent').pool('foo',{},123);
event1.dispose();
expect(event1.type).toBe(null);
expect(event1.data).toBe(null);
expect(event1.target).toBe(null);

var event2=require('NavigationEvent').pool('bar',{},456);
expect(event2.type).toBe('bar');
expect(event2).toBe(event1);});});