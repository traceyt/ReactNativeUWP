'use strict';














var AdsManagerEditNameAction={






editName:function(
adObjectLevel,
adObjectID,
newName,
onSuccess,
onFailed)
{
!
require('isValidRecordID')(adObjectID)?require('invariant')(0,
'Action taken on unknown ad object id '+adObjectID):undefined;


var mutationFrag=null;
var mutation=null;
var input=null;
var analyticsName=null;
switch(adObjectLevel){
case require('AdObjectLevels').CAMPAIGN_GROUP:
mutationFrag=require('GraphQLMutationQueryCreator').createQuery(
'ad_campaign_group_edit',
{ad_campaign_group:adObjectID});

mutation=function(RQL_0){return {calls:[{kind:'Call',metadata:{},name:'ad_campaign_group_edit',value:{kind:'CallVariable',callVariableName:'input'}}],children:[].concat.apply([],[{fieldName:'client_mutation_id',kind:'Field',metadata:{isGenerated:true,isRequisite:true},type:'ID'},require('Relay').QL.__frag(RQL_0)]),kind:'Mutation',metadata:{inputType:'AdCampaignGroupEditData!'},name:'AdsManagerEditNameAction',responseType:'AdCampaignGroupEditResponsePayload'};}(


mutationFrag);



input={
ad_campaign_group_id:adObjectID,
name:newName};

analyticsName=
require('MobileAdsManagerLoggerConsts').events.EDIT_CAMPAIGN_GROUP_NAME;
break;
case require('AdObjectLevels').CAMPAIGN:
mutationFrag=require('GraphQLMutationQueryCreator').createQuery(
'ad_campaign_edit',
{ad_campaign:adObjectID});

mutation=function(RQL_0){return {calls:[{kind:'Call',metadata:{},name:'ad_campaign_edit',value:{kind:'CallVariable',callVariableName:'input'}}],children:[].concat.apply([],[{fieldName:'client_mutation_id',kind:'Field',metadata:{isGenerated:true,isRequisite:true},type:'ID'},require('Relay').QL.__frag(RQL_0)]),kind:'Mutation',metadata:{inputType:'AdCampaignEditData!'},name:'AdsManagerEditNameAction',responseType:'AdCampaignEditResponsePayload'};}(


mutationFrag);



input={
ad_campaign_id:adObjectID,
name:newName};

analyticsName=require('MobileAdsManagerLoggerConsts').events.EDIT_CAMPAIGN_NAME;
break;
case require('AdObjectLevels').ADGROUP:
mutationFrag=require('GraphQLMutationQueryCreator').createQuery(
'adgroup_edit',
{adgroup:adObjectID});

mutation=function(RQL_0){return {calls:[{kind:'Call',metadata:{},name:'adgroup_edit',value:{kind:'CallVariable',callVariableName:'input'}}],children:[].concat.apply([],[{fieldName:'client_mutation_id',kind:'Field',metadata:{isGenerated:true,isRequisite:true},type:'ID'},require('Relay').QL.__frag(RQL_0)]),kind:'Mutation',metadata:{inputType:'AdgroupEditData!'},name:'AdsManagerEditNameAction',responseType:'AdgroupEditResponsePayload'};}(


mutationFrag);



input={
adgroup_id:adObjectID,
name:newName};

analyticsName=require('MobileAdsManagerLoggerConsts').events.EDIT_ADGROUP_NAME;
break;
default:
!false?require('invariant')(0,'bad ad object level passed: '+adObjectLevel):undefined;}


var action=new (require('AdsManagerMutationAction'))(analyticsName);

action.runServerAction(
mutation,
input,
function(err,response){
if(err){
onFailed&&onFailed(err);}else 
{
onSuccess&&onSuccess(response);}


var id=action.getClientMutationID();
require('defaultRQLMutationCallback')(err,response,mutation,id);});}};





module.exports=AdsManagerEditNameAction;