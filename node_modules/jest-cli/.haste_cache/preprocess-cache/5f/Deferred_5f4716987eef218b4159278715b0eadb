var 































Deferred=function(){





function Deferred(){var _this=this;babelHelpers.classCallCheck(this,Deferred);
this.$Deferred_settled=false;
this.$Deferred_promise=new (require('Promise'))(function(resolve,reject){
_this.$Deferred_resolve=resolve;
_this.$Deferred_reject=reject;});}babelHelpers.createClass(Deferred,[{key:'getPromise',value:function getPromise()




{
return this.$Deferred_promise;}},{key:'resolve',value:function resolve(


value){
this.$Deferred_settled=true;
this.$Deferred_resolve(value);}},{key:'reject',value:function reject(


reason){
this.$Deferred_settled=true;
this.$Deferred_reject(reason);}},{key:'then',value:function then()


{
return require('Promise').prototype.then.apply(this.$Deferred_promise,arguments);}},{key:'done',value:function done()


{
require('Promise').prototype.done.apply(this.$Deferred_promise,arguments);}},{key:'isSettled',value:function isSettled()


{
return this.$Deferred_settled;}}]);return Deferred;}();



module.exports=Deferred;