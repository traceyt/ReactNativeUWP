'use strict';















var AdgroupAndParentsActivateAction={
handleSwitch:function(
adgroupID,
campaignID,
campaignGroupID,
onSuccess,
onFailure)
{
!
require('isValidRecordID')(adgroupID)?require('invariant')(0,
'Action taken on unknown adgroup '+adgroupID):undefined;

!
require('isValidRecordID')(campaignID)?require('invariant')(0,
'Action taken on unknown campaign '+campaignID):undefined;

!
require('isValidRecordID')(campaignGroupID)?require('invariant')(0,
'Action taken on unknown campaign group '+campaignGroupID):undefined;


var mutationName='adgroup_and_parents_activate';

var mutationFrag=require('GraphQLMutationQueryCreator').createQuery(
mutationName,
{
adgroup:adgroupID,
ad_campaign:campaignID,
ad_campaign_group:campaignGroupID});



var mutation=function(RQL_0){return {calls:[{kind:'Call',metadata:{},name:'adgroup_and_parents_activate',value:{kind:'CallVariable',callVariableName:'input'}}],children:[].concat.apply([],[{fieldName:'client_mutation_id',kind:'Field',metadata:{isGenerated:true,isRequisite:true},type:'ID'},require('Relay').QL.__frag(RQL_0)]),kind:'Mutation',metadata:{inputType:'AdgroupAndParentsActivateData!'},name:'AdgroupAndParentsActivateAction',responseType:'AdgroupAndParentsActivateResponsePayload'};}(


mutationFrag);




var action=new (require('AdsManagerMutationAction'))(
require('MobileAdsManagerLoggerConsts').events.ACTIVATE_ADGROUP_AND_PARENTS);



action.runOptimisticAction(
this._buildOptimisticPayload(adgroupID,campaignID,campaignGroupID));


action.runServerAction(
mutation,
{
adgroup_id:adgroupID},

function(err,response){
if(err){
onFailure(err);}else 
{
onSuccess(response);}



var id=action.getClientMutationID();
require('defaultRQLMutationCallback')(err,response,mutation,id);});},




_buildOptimisticPayload:function(adgroupID,campaignID,campaignGroupID){
var updatedAdgroup={
id:adgroupID,
run_status_info_with_flattening:{
is_active:true}};


var updatedCampaign={
id:campaignID,
run_status_info_with_flattening:{
is_active:true}};


var updatedCampgaignGroup={
id:campaignGroupID,
run_status_info_with_flattening:{
is_active:true}};



var payloadName='adgroup_and_parents_activate';
var result=babelHelpers.defineProperty({},
payloadName,{
adgroup:updatedAdgroup,
campiagn:updatedCampaign,
campaignGroup:updatedCampgaignGroup});


return result;}};



module.exports=AdgroupAndParentsActivateAction;