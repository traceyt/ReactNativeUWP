/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule RelayQueryConfig
 * 
 * @typechecks
 */

'use strict';Object.defineProperty(exports, '__esModule', { value: true });var _extends = Object.assign || function (target) {for (var i = 1; i < arguments.length; i++) {var source = arguments[i];for (var key in source) {if (Object.prototype.hasOwnProperty.call(source, key)) {target[key] = source[key];}}}return target;};function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError('Cannot call a class as a function');}}








/**
 * Configures the root queries and initial variables that define the context in
 * which the top-level component's fragments are requested. This is meant to be
 * subclassed, of which instances are supplied to `RelayRootContainer`.
 */var 
RelayQueryConfig = (function () {








  function RelayQueryConfig(initialVariables) {_classCallCheck(this, RelayQueryConfig);
    require('/Users/cpojer/Projects/relay/scripts/jest/../../node_modules/fbjs/lib/invariant')(
    this.constructor !== RelayQueryConfig, 
    'RelayQueryConfig: Abstract class cannot be instantiated.');


    Object.defineProperty(this, 'name', { 
      enumerable: true, 
      value: this.constructor.routeName });

    Object.defineProperty(this, 'params', { 
      enumerable: true, 
      value: this.prepareVariables(_extends({}, initialVariables)) || {} });

    Object.defineProperty(this, 'queries', { 
      enumerable: true, 
      value: _extends({}, this.constructor.queries) });


    if (__DEV__) {
      Object.freeze(this.params);
      Object.freeze(this.queries);}}



  /**
   * Provides an opportunity to perform additional logic on the variables.
   * Child class should override this function to perform custom logic.
   */RelayQueryConfig.prototype.
  prepareVariables = function prepareVariables(prevVariables) {
    return prevVariables;};return RelayQueryConfig;})();



module.exports = RelayQueryConfig; // TODO: Deprecate `routeName`, #8478719.