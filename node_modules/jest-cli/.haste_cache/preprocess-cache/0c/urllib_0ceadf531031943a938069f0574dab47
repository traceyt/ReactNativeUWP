function 













objectifyUrl(text){
return parse(urllib.normalize(text.trim()));}







var EXPRESSION=
/^(?:(\w+):)?(?:\/\/([^\/:?#]*)(?::(\d+))?)?([^#?]*)(?:\?([^#]*))?(?:#(.*))?/;

var INVALID_DOMAIN='invalid.invalid';












function sanitizeDomain(domain){
var re=new RegExp(


'[\\x00-\\x2c\\x2f\\x3b-\\x40\\x5c\\x5e\\x60\\x7b-\\x7f'+

'\\uFDD0-\\uFDEF\\uFFF0-\\uFFFF'+

'\\u2047\\u2048\\uFE56\\uFE5F\\uFF03\\uFF0F\\uFF1F]');
if(re.test(domain)){
return INVALID_DOMAIN;}else 
{
return domain;}}









function parse(uri){
var m=uri.toString().trim().match(EXPRESSION);
var parts={
protocol:m[1]||'',
domain:sanitizeDomain(m[2]||''),
port:m[3]||'',
path:m[4]||'',
query_s:m[5]||'',
fragment:m[6]||''};




if(!parts.domain&&parts.path.indexOf('\\')!==-1){
return {};}




var re=new RegExp(

'^(?:[^/]*:|'+

'[\\x00-\\x1f]*/[\\x00-\\x1f]*/)');
if(!parts.protocol&&re.test(uri.toString())){
return {};}


return parts;}








function partsToString(parts){
var r='';

parts.protocol&&(r+=parts.protocol+'://');
parts.domain&&(r+=parts.domain);
parts.port&&(r+=':'+parts.port);

if(parts.domain&&!parts.path){
r+='/';}


parts.path&&(r+=parts.path);
parts.query_s&&(r+='?'+parts.query_s);
parts.fragment&&(r+='#'+parts.fragment);

return r;}


var urllib={
normalize:function(urlText){
if(!urlText){
return urlText;}

var urlParts=parse(urlText);

if(!urlParts.protocol){
urlParts.protocol='http';}

return partsToString(urlParts);},


isUrlSimple:function(text){
var parts=text.trim().split('.');
return parts.length>1&&parts.filter(function(p){
return !p;}).
length===0;},



isUrl:function(text){
var t=objectifyUrl(text);
return t.domain&&
t.domain!==INVALID_DOMAIN&&
urllib.isUrlSimple(t.domain);},


isPotentialUrl:function(text){
if(!text){
return true;}

var t=objectifyUrl(text);
return t.domain&&t.domain!==INVALID_DOMAIN;}};



module.exports=urllib;