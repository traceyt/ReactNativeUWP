'use strict';var 
























EventSubscriptionVendor=function(){

function EventSubscriptionVendor(){babelHelpers.classCallCheck(this,EventSubscriptionVendor);
this.$EventSubscriptionVendor_subscriptionsForType={};
this.$EventSubscriptionVendor_currentSubscription=null;}babelHelpers.createClass(EventSubscriptionVendor,[{key:'addSubscription',value:function addSubscription(









eventType,subscription){
!(
subscription.subscriber===this)?require('fbjs/lib/invariant')(0,
'The subscriber of the subscription is incorrectly set.'):undefined;
if(!this.$EventSubscriptionVendor_subscriptionsForType[eventType]){
this.$EventSubscriptionVendor_subscriptionsForType[eventType]=[];}

var key=this.$EventSubscriptionVendor_subscriptionsForType[eventType].length;
this.$EventSubscriptionVendor_subscriptionsForType[eventType].push(subscription);
subscription.eventType=eventType;
subscription.key=key;
return subscription;}},{key:'removeAllSubscriptions',value:function removeAllSubscriptions(








eventType){
if(eventType===undefined){
this.$EventSubscriptionVendor_subscriptionsForType={};}else 
{
delete this.$EventSubscriptionVendor_subscriptionsForType[eventType];}}},{key:'removeSubscription',value:function removeSubscription(









subscription){
var eventType=subscription.eventType;
var key=subscription.key;

var subscriptionsForType=this.$EventSubscriptionVendor_subscriptionsForType[eventType];
if(subscriptionsForType){
delete subscriptionsForType[key];}}},{key:'getSubscriptionsForType',value:function getSubscriptionsForType(















eventType){
return this.$EventSubscriptionVendor_subscriptionsForType[eventType];}}]);return EventSubscriptionVendor;}();



module.exports=EventSubscriptionVendor;