'use strict';
















var validateOpts=require('../lib/declareOpts')({
projectRoots:{
type:'array',
required:true},

blacklistRE:{
type:'object'},

polyfillModuleNames:{
type:'array',
default:[]},

moduleFormat:{
type:'string',
default:'haste'},

assetRoots:{
type:'array',
default:[]},

fileWatcher:{
type:'object',
required:true},

assetExts:{
type:'array',
required:true},

cache:{
type:'object',
required:true},

transformCode:{
type:'function'},

minifyCode:{
type:'function'}});



var getDependenciesValidateOpts=require('../lib/declareOpts')({
dev:{
type:'boolean',
default:true},

platform:{
type:'string',
required:false},

unbundle:{
type:'boolean',
default:false},

recursive:{
type:'boolean',
default:true}});var 



Resolver=function(){

function Resolver(options){babelHelpers.classCallCheck(this,Resolver);
var opts=validateOpts(options);

this._depGraph=new (require('node-haste'))({
activity:require('../Activity'),
roots:opts.projectRoots,
assetRoots_DEPRECATED:opts.assetRoots,
assetExts:opts.assetExts,
ignoreFilePath:function(filepath){
return filepath.indexOf('__tests__')!==-1||
opts.blacklistRE&&opts.blacklistRE.test(filepath);},

providesModuleNodeModules:[
'react',
'react-native',




'parse'],

platforms:['ios','android'],
preferNativePlatform:true,
fileWatcher:opts.fileWatcher,
cache:opts.cache,
shouldThrowOnUnresolvedErrors:function(_,platform){return platform==='ios';},
transformCode:opts.transformCode});


this._minifyCode=opts.minifyCode;
this._polyfillModuleNames=opts.polyfillModuleNames||[];

this._depGraph.load().catch(function(err){
console.error(err.message+'\n'+err.stack);
process.exit(1);});}babelHelpers.createClass(Resolver,[{key:'getShallowDependencies',value:function getShallowDependencies(



entryFile){
return this._depGraph.getShallowDependencies(entryFile);}},{key:'stat',value:function stat(


filePath){
return this._depGraph.getFS().stat(filePath);}},{key:'getModuleForPath',value:function getModuleForPath(


entryFile){
return this._depGraph.getModuleForPath(entryFile);}},{key:'getDependencies',value:function getDependencies(


entryPath,options,transformOptions,onProgress){var _this=this;var _getDependenciesValid=
getDependenciesValidateOpts(options);var platform=_getDependenciesValid.platform;var recursive=_getDependenciesValid.recursive;
return this._depGraph.getDependencies({
entryPath:entryPath,
platform:platform,
transformOptions:transformOptions,
recursive:recursive,
onProgress:onProgress}).
then(function(resolutionResponse){
_this._getPolyfillDependencies().reverse().forEach(
function(polyfill){return resolutionResponse.prependDependency(polyfill);});


return resolutionResponse.finalize();});}},{key:'getModuleSystemDependencies',value:function getModuleSystemDependencies(



options){var _this2=this;
var opts=getDependenciesValidateOpts(options);

var prelude=opts.dev?
require('path').join(__dirname,'polyfills/prelude_dev.js'):
require('path').join(__dirname,'polyfills/prelude.js');

var moduleSystem=opts.unbundle?
require('path').join(__dirname,'polyfills/require-unbundle.js'):
require('path').join(__dirname,'polyfills/require.js');

return [
prelude,
moduleSystem].
map(function(moduleName){return _this2._depGraph.createPolyfill({
file:moduleName,
id:moduleName,
dependencies:[]});});}},{key:'_getPolyfillDependencies',value:function _getPolyfillDependencies()



{var _this3=this;
var polyfillModuleNames=[
require('path').join(__dirname,'polyfills/polyfills.js'),
require('path').join(__dirname,'polyfills/console.js'),
require('path').join(__dirname,'polyfills/error-guard.js'),
require('path').join(__dirname,'polyfills/String.prototype.es6.js'),
require('path').join(__dirname,'polyfills/Array.prototype.es6.js'),
require('path').join(__dirname,'polyfills/Array.es6.js'),
require('path').join(__dirname,'polyfills/Object.es7.js'),
require('path').join(__dirname,'polyfills/babelHelpers.js')].
concat(this._polyfillModuleNames);

return polyfillModuleNames.map(
function(polyfillModuleName,idx){return _this3._depGraph.createPolyfill({
file:polyfillModuleName,
id:polyfillModuleName,
dependencies:polyfillModuleNames.slice(0,idx)});});}},{key:'resolveRequires',value:function resolveRequires(




resolutionResponse,module,code){var dependencyOffsets=arguments.length<=3||arguments[3]===undefined?[]:arguments[3];
return require('promise').resolve().then(function(){
var resolvedDeps=Object.create(null);
var resolvedDepsArr=[];

return require('promise').all(


resolutionResponse.getResolvedDependencyPairs(module).map(
function(_ref){var _ref2=babelHelpers.slicedToArray(_ref,2);var depName=_ref2[0];var depModule=_ref2[1];
if(depModule){
return depModule.getName().then(function(name){
resolvedDeps[depName]=name;
resolvedDepsArr.push(name);});}})).




then(function(){
var relativizeCode=function(codeMatch,quot,depName){








var depId=resolvedDeps[depName];
if(depId){
return quot+depId+quot;}else 
{
return codeMatch;}};



code=dependencyOffsets.reduceRight(function(codeBits,offset){
var first=codeBits.shift();
codeBits.unshift(
first.slice(0,offset),
first.slice(offset).replace(/(['"])([^'"']*)\1/,relativizeCode));

return codeBits;},
[code]);

return code.join('');});});}},{key:'wrapModule',value:function wrapModule(_ref3)












{var _this4=this;var resolutionResponse=_ref3.resolutionResponse;var module=_ref3.module;var name=_ref3.name;var map=_ref3.map;var code=_ref3.code;var _ref3$meta=_ref3.meta;var meta=_ref3$meta===undefined?{}:_ref3$meta;var _ref3$minify=_ref3.minify;var minify=_ref3$minify===undefined?false:_ref3$minify;
if(module.isJSON()){
code='module.exports = '+code;}

var result=module.isPolyfill()?
require('promise').resolve({code:definePolyfillCode(code)}):
this.resolveRequires(
resolutionResponse,
module,
code,
meta.dependencyOffsets).
then(function(code){return {code:defineModuleCode(name,code),map:map};});

return minify?
result.then(function(_ref4){var code=_ref4.code;var map=_ref4.map;return _this4._minifyCode(module.path,code,map);}):
result;}},{key:'getDebugInfo',value:function getDebugInfo()


{
return this._depGraph.getDebugInfo();}}]);return Resolver;}();



function defineModuleCode(moduleName,code){
return ['__d(',

JSON.stringify(moduleName)+', ','function(global, require, module, exports) {',''+

code,
'\n});'].
join('');}


function definePolyfillCode(code){
return ['(function(global) {',

code,'\n})(typeof global !== \'undefined\' ? global : typeof self !== \'undefined\' ? self : this);'].

join('');}


module.exports=Resolver;