'use strict';var 














PropTypes=require('React').PropTypes;





var RelayPropTypes={
Container:function(props,propName,componentName){
var component=props[propName];
if(component==null){
return new Error(require('sprintf')(
'Required prop `%s` was not specified in `%s`.',
propName,
componentName));}else 

if(!require('isRelayContainer')(component)){
return new Error(require('sprintf')(
'Invalid prop `%s` supplied to `%s`, expected a RelayContainer.',
propName,
componentName));}


return null;},


Environment:function(props,propName,componentName){
var context=props[propName];
if(!require('isRelayEnvironment')(context)){
return new Error(require('sprintf')(
'Invalid prop/context `%s` supplied to `%s`, expected `%s` to be '+
'an object conforming to the `RelayEnvironment` interface.',
propName,
componentName,
context));}


return null;},


QueryConfig:PropTypes.shape({
name:PropTypes.string.isRequired,
params:PropTypes.object.isRequired,
queries:PropTypes.object.isRequired})};



module.exports=RelayPropTypes;