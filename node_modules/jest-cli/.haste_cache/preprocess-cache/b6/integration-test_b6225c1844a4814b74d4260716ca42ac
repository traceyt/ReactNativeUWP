/**
 * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 */

'use strict';









// These will all be hoisted above imports
jest.unmock('react');
jest.unmock('../__test_modules__/Unmocked');
jest.
unmock('../__test_modules__/c').
unmock('../__test_modules__/d');

// These will not be hoisted
var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) {return typeof obj;} : function (obj) {return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj;};var _react = require('react');var _react2 = _interopRequireDefault(_react);var _Unmocked = require('../__test_modules__/Unmocked');var _Unmocked2 = _interopRequireDefault(_Unmocked);var _Mocked = require('../__test_modules__/Mocked');var _Mocked2 = _interopRequireDefault(_Mocked);var _a = require('../__test_modules__/a');var _a2 = _interopRequireDefault(_a);var _b = require('../__test_modules__/b');var _b2 = _interopRequireDefault(_b);var _c = require('../__test_modules__/c');var _c2 = _interopRequireDefault(_c);var _d = require('../__test_modules__/d');var _d2 = _interopRequireDefault(_d);function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}jest.unmock('../__test_modules__/a').dontMock('../__test_modules__/b');
jest.unmock('../__test_modules__/' + 'c');
jest.dontMock('../__test_modules__/Mocked');


describe('babel-plugin-jest-unmock', function () {
  it('hoists react unmock call before imports', function () {
    expect(typeof _react2.default === 'undefined' ? 'undefined' : _typeof(_react2.default)).toEqual('object');
    expect(_react2.default.isValidElement.mock).toBe(undefined);});


  it('hoists unmocked modules before imports', function () {
    expect(_Unmocked2.default._isMockFunction).toBe(undefined);
    expect(new _Unmocked2.default().isUnmocked).toEqual(true);

    expect(_c2.default._isMockFunction).toBe(undefined);
    expect((0, _c2.default)()).toEqual('unmocked');

    expect(_d2.default._isMockFunction).toBe(undefined);
    expect((0, _d2.default)()).toEqual('unmocked');});


  it('does not hoist dontMock calls before imports', function () {
    expect(_Mocked2.default._isMockFunction).toBe(true);
    expect(new _Mocked2.default().isMocked).toEqual(undefined);

    expect(_a2.default._isMockFunction).toBe(true);
    expect((0, _a2.default)()).toEqual(undefined);

    expect(_b2.default._isMockFunction).toBe(true);
    expect((0, _b2.default)()).toEqual(undefined);});});