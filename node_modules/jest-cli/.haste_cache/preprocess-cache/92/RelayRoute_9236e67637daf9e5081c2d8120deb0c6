'use strict';





























var createURI=function(){return null;};var 





RelayRoute=function(_RelayQueryConfig){babelHelpers.inherits(RelayRoute,_RelayQueryConfig);








function RelayRoute(initialVariables,uri){babelHelpers.classCallCheck(this,RelayRoute);var _this=babelHelpers.possibleConstructorReturn(this,Object.getPrototypeOf(RelayRoute).call(this,
initialVariables));
var constructor=_this.constructor;var 

routeName=

constructor.routeName;var path=constructor.path;

!(
constructor!==RelayRoute)?require('invariant')(0,
'RelayRoute: Abstract class cannot be instantiated.'):undefined;

!
routeName?require('invariant')(0,
'%s: Subclasses of RelayRoute must define a `routeName`.',
constructor.name||'<<anonymous>>'):undefined;




Object.defineProperty(_this,'uri',{
enumerable:true,
get:function(){
if(!uri&&path){
uri=createURI(constructor,this.params);}

return uri;}});return _this;}babelHelpers.createClass(RelayRoute,[{key:'prepareVariables',value:function prepareVariables(




prevVariables){var _constructor=




this.constructor;var paramDefinitions=_constructor.paramDefinitions;var prepareParams=_constructor.prepareParams;var routeName=_constructor.routeName;
var params=prevVariables;
if(prepareParams){

params=prepareParams(params);}

require('forEachObject')(paramDefinitions,function(paramDefinition,paramName){
if(params){
if(params.hasOwnProperty(paramName)){
return;}else 
{

params[paramName]=undefined;}}


!
!paramDefinition.required?require('invariant')(0,
'RelayRoute: Missing required parameter `%s` in `%s`. Check the '+
'supplied params or URI.',
paramName,
routeName):undefined;});


return params;}}],[{key:'injectURICreator',value:function injectURICreator(


creator){
createURI=creator;}}]);return RelayRoute;}(require('RelayQueryConfig'));




module.exports=RelayRoute;