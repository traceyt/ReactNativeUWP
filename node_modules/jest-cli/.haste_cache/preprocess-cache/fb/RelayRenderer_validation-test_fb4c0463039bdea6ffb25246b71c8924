/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @emails oncall+relay
 */

'use strict';

require('configureForRelayOSS');

jest.dontMock('RelayRenderer');








describe('RelayRenderer.validation', function () {
  var MockComponent = undefined;
  var MockContainer = undefined;
  var ShallowRenderer = undefined;

  var queryConfig = undefined;var 
  error = console.error;

  beforeEach(function () {
    jest.resetModuleRegistry();
    jasmine.addMatchers(require('RelayTestUtils').matchers);

    MockComponent = require('/Users/cpojer/Projects/relay/scripts/jest/../../node_modules/react').createClass({ displayName: 'MockComponent', render: function () {return require('/Users/cpojer/Projects/relay/scripts/jest/../../node_modules/react').createElement('div', null);} });
    MockContainer = require('Relay').createContainer(MockComponent, { 
      fragments: {} });

    ShallowRenderer = require('/Users/cpojer/Projects/relay/scripts/jest/../../node_modules/react/lib/ReactTestUtils.js').createRenderer();

    queryConfig = require('RelayQueryConfig').genMockInstance();

    console.error = jest.genMockFunction().mockImplementation(function (message) {
      throw new Error(message.replace(/Composite propType/, 'propType'));});});



  afterEach(function () {
    console.error = error;});


  it('requires a valid `Container` prop', function () {
    expect(function () {return ShallowRenderer.render(
      require('/Users/cpojer/Projects/relay/scripts/jest/../../node_modules/react').createElement(require('RelayRenderer'), { queryConfig: queryConfig }));}).
    toThrowError(
    'Warning: Failed propType: Required prop `Container` was not specified ' + 
    'in `RelayRenderer`.');


    expect(function () {return ShallowRenderer.render(
      require('/Users/cpojer/Projects/relay/scripts/jest/../../node_modules/react').createElement(require('RelayRenderer'), { Container: MockComponent, queryConfig: queryConfig }));}).
    toThrowError(
    'Warning: Failed propType: Invalid prop `Container` supplied to ' + 
    '`RelayRenderer`, expected a RelayContainer.');});



  it('requires a valid `queryConfig` prop', function () {
    expect(function () {return ShallowRenderer.render(
      require('/Users/cpojer/Projects/relay/scripts/jest/../../node_modules/react').createElement(require('RelayRenderer'), { Container: MockContainer }));}).
    toThrowError(
    'Warning: Failed propType: Required prop `queryConfig` was not ' + 
    'specified in `RelayRenderer`.');


    expect(function () {return ShallowRenderer.render(
      require('/Users/cpojer/Projects/relay/scripts/jest/../../node_modules/react').createElement(require('RelayRenderer'), { Container: MockContainer, queryConfig: {} }));}).
    toThrowError(
    'Warning: Failed propType: Required prop `queryConfig.name` was not ' + 
    'specified in `RelayRenderer`.');});});