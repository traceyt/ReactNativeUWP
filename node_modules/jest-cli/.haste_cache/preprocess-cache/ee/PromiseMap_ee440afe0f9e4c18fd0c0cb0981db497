'use strict';var 
































PromiseMap=function(){


function PromiseMap(){babelHelpers.classCallCheck(this,PromiseMap);
this.$PromiseMap_deferred={};}babelHelpers.createClass(PromiseMap,[{key:'get',value:function get(


key){
return getDeferred(this.$PromiseMap_deferred,key).getPromise();}},{key:'resolveKey',value:function resolveKey(


key,value){
var entry=getDeferred(this.$PromiseMap_deferred,key);
!!entry.isSettled()?require('invariant')(0,'PromiseMap: Already settled `%s`.',key):undefined;
entry.resolve(value);}},{key:'rejectKey',value:function rejectKey(


key,reason){
var entry=getDeferred(this.$PromiseMap_deferred,key);
!!entry.isSettled()?require('invariant')(0,'PromiseMap: Already settled `%s`.',key):undefined;
entry.reject(reason);}}]);return PromiseMap;}();



function getDeferred(
entries,
key)
{
if(!entries.hasOwnProperty(key)){
entries[key]=new (require('Deferred'))();}

return entries[key];}


module.exports=PromiseMap;