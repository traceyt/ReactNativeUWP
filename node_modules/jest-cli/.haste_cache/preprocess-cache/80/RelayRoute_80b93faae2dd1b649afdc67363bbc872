/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule RelayRoute
 * 
 * @typechecks
 */

'use strict';Object.defineProperty(exports, '__esModule', { value: true });function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError('Cannot call a class as a function');}}function _inherits(subClass, superClass) {if (typeof superClass !== 'function' && superClass !== null) {throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;}
















var createURI = function () {return null;};

/**
 * Describes the root queries, param definitions and other metadata for a given
 * path (URI).
 */var 
RelayRoute = (function (_RelayQueryConfig) {_inherits(RelayRoute, _RelayQueryConfig);








  function RelayRoute(initialVariables, uri) {_classCallCheck(this, RelayRoute);
    _RelayQueryConfig.call(this, initialVariables);
    var constructor = this.constructor;var 

    routeName = 

    constructor.routeName;var path = constructor.path;

    require('/Users/cpojer/Projects/relay/scripts/jest/../../node_modules/fbjs/lib/invariant')(
    constructor !== RelayRoute, 
    'RelayRoute: Abstract class cannot be instantiated.');

    require('/Users/cpojer/Projects/relay/scripts/jest/../../node_modules/fbjs/lib/invariant')(
    routeName, 
    '%s: Subclasses of RelayRoute must define a `routeName`.', 
    constructor.name || '<<anonymous>>');



    // $FlowIssue #9905535 - Object.defineProperty doesn't understand getters
    Object.defineProperty(this, 'uri', { 
      enumerable: true, 
      get: function () {
        if (!uri && path) {
          uri = createURI(constructor, this.params);}

        return uri;} });}RelayRoute.prototype.




  prepareVariables = function prepareVariables(prevVariables) {var _constructor = 




    this.constructor;var paramDefinitions = _constructor.paramDefinitions;var prepareParams = _constructor.prepareParams;var routeName = _constructor.routeName;
    var params = prevVariables;
    if (prepareParams) {
      /* $FlowFixMe(>=0.17.0) - params is ?Tv but prepareParams expects Tv */
      params = prepareParams(params);}

    require('/Users/cpojer/Projects/relay/scripts/jest/../../node_modules/fbjs/lib/forEachObject')(paramDefinitions, function (paramDefinition, paramName) {
      if (params) {
        if (params.hasOwnProperty(paramName)) {
          return;} else 
        {
          // Backfill param so that a call variable is created for it.
          params[paramName] = undefined;}}


      require('/Users/cpojer/Projects/relay/scripts/jest/../../node_modules/fbjs/lib/invariant')(
      !paramDefinition.required, 
      'RelayRoute: Missing required parameter `%s` in `%s`. Check the ' + 
      'supplied params or URI.', 
      paramName, 
      routeName);});


    return params;};RelayRoute.


  injectURICreator = function injectURICreator(creator) {
    createURI = creator;};return RelayRoute;})(require('RelayQueryConfig'));




module.exports = RelayRoute;