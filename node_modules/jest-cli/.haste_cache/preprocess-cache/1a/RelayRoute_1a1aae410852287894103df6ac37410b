/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 */

'use strict';function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError('Cannot call a class as a function');}}function _inherits(subClass, superClass) {if (typeof superClass !== 'function' && superClass !== null) {throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;}

var RelayRoute = require.requireActual('RelayRoute');

RelayRoute.genMock = jest.genMockFunction().mockImplementation(function () {var 
  MockRoute = (function (_RelayRoute) {_inherits(MockRoute, _RelayRoute);function MockRoute() {_classCallCheck(this, MockRoute);_RelayRoute.apply(this, arguments);}return MockRoute;})(RelayRoute);
  MockRoute.routeName = 'MockRoute';
  MockRoute.path = '/jest';
  return MockRoute;});


RelayRoute.genMockInstance = jest.genMockFunction().mockImplementation(
function () {return new (RelayRoute.genMock())();});


module.exports = RelayRoute;