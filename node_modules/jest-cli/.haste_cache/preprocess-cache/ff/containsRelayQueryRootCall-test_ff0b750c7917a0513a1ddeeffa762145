/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @emails oncall+relay
 */

'use strict';

require('configureForRelayOSS');






describe('containsRelayQueryRootCall', function () {var 
  getNode = require('RelayTestUtils').getNode;

  beforeEach(function () {
    jasmine.addMatchers({ 
      toContainRootCall: function () {
        return { 
          compare: function (thisQuery, thatQuery) {
            var pass = require('containsRelayQueryRootCall')(
            getNode(thisQuery), 
            getNode(thatQuery));

            var notText = pass ? 'not ' : '';
            return { 
              pass: pass, 
              message: 'Expected `' + thisQuery + '` ' + notText + 
              'to contain root call of `' + thatQuery + '`.' };} };} });});







  it('compares root calls without arguments', function () {
    expect((function () {return { children: [{ children: [{ fieldName: 'id', kind: 'Field', metadata: { isRequisite: true }, type: 'ID' }, { fieldName: '__typename', kind: 'Field', metadata: { isGenerated: true, isRequisite: true }, type: 'String' }], fieldName: 'actor', kind: 'Field', metadata: { canHaveSubselections: true, inferredRootCallName: 'node', inferredPrimaryKey: 'id', isAbstract: true }, type: 'Actor' }], fieldName: 'viewer', kind: 'Query', metadata: {}, name: 'ContainsRelayQueryRootCall', type: 'Viewer' };})()).

    toContainRootCall((function () {return { children: [{ children: [{ fieldName: 'id', kind: 'Field', metadata: { isRequisite: true }, type: 'ID' }, { fieldName: '__typename', kind: 'Field', metadata: { isGenerated: true, isRequisite: true }, type: 'String' }], fieldName: 'actor', kind: 'Field', metadata: { canHaveSubselections: true, inferredRootCallName: 'node', inferredPrimaryKey: 'id', isAbstract: true }, type: 'Actor' }], fieldName: 'viewer', kind: 'Query', metadata: {}, name: 'ContainsRelayQueryRootCall', type: 'Viewer' };})());


    expect((function () {return { children: [{ fieldName: 'id', kind: 'Field', metadata: { isRequisite: true }, type: 'ID' }], fieldName: 'me', kind: 'Query', metadata: {}, name: 'ContainsRelayQueryRootCall', type: 'User' };})()).

    toContainRootCall((function () {return { children: [{ fieldName: 'id', kind: 'Field', metadata: { isRequisite: true }, type: 'ID' }], fieldName: 'me', kind: 'Query', metadata: {}, name: 'ContainsRelayQueryRootCall', type: 'User' };})());


    expect((function () {return { children: [{ fieldName: 'id', kind: 'Field', metadata: { isRequisite: true }, type: 'ID' }], fieldName: 'me', kind: 'Query', metadata: {}, name: 'ContainsRelayQueryRootCall', type: 'User' };})()).

    not.toContainRootCall((function () {return { children: [{ children: [{ fieldName: 'id', kind: 'Field', metadata: { isRequisite: true }, type: 'ID' }, { fieldName: '__typename', kind: 'Field', metadata: { isGenerated: true, isRequisite: true }, type: 'String' }], fieldName: 'actor', kind: 'Field', metadata: { canHaveSubselections: true, inferredRootCallName: 'node', inferredPrimaryKey: 'id', isAbstract: true }, type: 'Actor' }], fieldName: 'viewer', kind: 'Query', metadata: {}, name: 'ContainsRelayQueryRootCall', type: 'Viewer' };})());});




  it('compares root calls with single arguments', function () {
    expect((function () {return { calls: [{ kind: 'Call', metadata: {}, name: 'id', value: { kind: 'CallValue', callValue: '1038750002' } }], children: [{ fieldName: 'id', kind: 'Field', metadata: { isRequisite: true }, type: 'ID' }, { fieldName: '__typename', kind: 'Field', metadata: { isGenerated: true, isRequisite: true }, type: 'String' }], fieldName: 'node', kind: 'Query', metadata: { isAbstract: true, identifyingArgName: 'id' }, name: 'ContainsRelayQueryRootCall', type: 'Node' };})()).

    toContainRootCall((function () {return { calls: [{ kind: 'Call', metadata: {}, name: 'id', value: { kind: 'CallValue', callValue: '1038750002' } }], children: [{ fieldName: 'id', kind: 'Field', metadata: { isRequisite: true }, type: 'ID' }, { fieldName: '__typename', kind: 'Field', metadata: { isGenerated: true, isRequisite: true }, type: 'String' }], fieldName: 'node', kind: 'Query', metadata: { isAbstract: true, identifyingArgName: 'id' }, name: 'ContainsRelayQueryRootCall', type: 'Node' };})());


    expect((function () {return { calls: [{ kind: 'Call', metadata: {}, name: 'id', value: { kind: 'CallValue', callValue: '1038750002' } }], children: [{ fieldName: 'id', kind: 'Field', metadata: { isRequisite: true }, type: 'ID' }, { fieldName: '__typename', kind: 'Field', metadata: { isGenerated: true, isRequisite: true }, type: 'String' }], fieldName: 'node', kind: 'Query', metadata: { isAbstract: true, identifyingArgName: 'id' }, name: 'ContainsRelayQueryRootCall', type: 'Node' };})()).

    not.toContainRootCall((function () {return { calls: [{ kind: 'Call', metadata: {}, name: 'id', value: { kind: 'CallValue', callValue: '4808495' } }], children: [{ fieldName: 'id', kind: 'Field', metadata: { isRequisite: true }, type: 'ID' }, { fieldName: '__typename', kind: 'Field', metadata: { isGenerated: true, isRequisite: true }, type: 'String' }], fieldName: 'node', kind: 'Query', metadata: { isAbstract: true, identifyingArgName: 'id' }, name: 'ContainsRelayQueryRootCall', type: 'Node' };})());});




  it('compares root calls with variable arguments', function () {
    expect((function () {return { calls: [{ kind: 'Call', metadata: {}, name: 'ids', value: [{ kind: 'CallValue', callValue: '1038750002' }, { kind: 'CallValue', callValue: '4808495' }, { kind: 'CallValue', callValue: '1819001144' }] }], children: [{ fieldName: 'id', kind: 'Field', metadata: { isRequisite: true }, type: 'ID' }, { fieldName: '__typename', kind: 'Field', metadata: { isGenerated: true, isRequisite: true }, type: 'String' }], fieldName: 'nodes', kind: 'Query', metadata: { isPlural: true, isAbstract: true, identifyingArgName: 'ids' }, name: 'ContainsRelayQueryRootCall', type: 'Node' };})()).

    toContainRootCall((function () {return { calls: [{ kind: 'Call', metadata: {}, name: 'ids', value: { kind: 'CallValue', callValue: '1038750002' } }], children: [{ fieldName: 'id', kind: 'Field', metadata: { isRequisite: true }, type: 'ID' }, { fieldName: '__typename', kind: 'Field', metadata: { isGenerated: true, isRequisite: true }, type: 'String' }], fieldName: 'nodes', kind: 'Query', metadata: { isPlural: true, isAbstract: true, identifyingArgName: 'ids' }, name: 'ContainsRelayQueryRootCall', type: 'Node' };})());


    expect((function () {return { calls: [{ kind: 'Call', metadata: {}, name: 'ids', value: [{ kind: 'CallValue', callValue: '1038750002' }, { kind: 'CallValue', callValue: '4808495' }, { kind: 'CallValue', callValue: '1819001144' }] }], children: [{ fieldName: 'id', kind: 'Field', metadata: { isRequisite: true }, type: 'ID' }, { fieldName: '__typename', kind: 'Field', metadata: { isGenerated: true, isRequisite: true }, type: 'String' }], fieldName: 'nodes', kind: 'Query', metadata: { isPlural: true, isAbstract: true, identifyingArgName: 'ids' }, name: 'ContainsRelayQueryRootCall', type: 'Node' };})()).

    toContainRootCall((function () {return { calls: [{ kind: 'Call', metadata: {}, name: 'ids', value: [{ kind: 'CallValue', callValue: '1038750002' }, { kind: 'CallValue', callValue: '1819001144' }] }], children: [{ fieldName: 'id', kind: 'Field', metadata: { isRequisite: true }, type: 'ID' }, { fieldName: '__typename', kind: 'Field', metadata: { isGenerated: true, isRequisite: true }, type: 'String' }], fieldName: 'nodes', kind: 'Query', metadata: { isPlural: true, isAbstract: true, identifyingArgName: 'ids' }, name: 'ContainsRelayQueryRootCall', type: 'Node' };})());


    expect((function () {return { calls: [{ kind: 'Call', metadata: {}, name: 'ids', value: [{ kind: 'CallValue', callValue: '1038750002' }, { kind: 'CallValue', callValue: '4808495' }, { kind: 'CallValue', callValue: '1819001144' }] }], children: [{ fieldName: 'id', kind: 'Field', metadata: { isRequisite: true }, type: 'ID' }, { fieldName: '__typename', kind: 'Field', metadata: { isGenerated: true, isRequisite: true }, type: 'String' }], fieldName: 'nodes', kind: 'Query', metadata: { isPlural: true, isAbstract: true, identifyingArgName: 'ids' }, name: 'ContainsRelayQueryRootCall', type: 'Node' };})()).

    toContainRootCall((function () {return { calls: [{ kind: 'Call', metadata: {}, name: 'ids', value: [{ kind: 'CallValue', callValue: '1038750002' }, { kind: 'CallValue', callValue: '4808495' }, { kind: 'CallValue', callValue: '1819001144' }] }], children: [{ fieldName: 'id', kind: 'Field', metadata: { isRequisite: true }, type: 'ID' }, { fieldName: '__typename', kind: 'Field', metadata: { isGenerated: true, isRequisite: true }, type: 'String' }], fieldName: 'nodes', kind: 'Query', metadata: { isPlural: true, isAbstract: true, identifyingArgName: 'ids' }, name: 'ContainsRelayQueryRootCall', type: 'Node' };})());


    expect((function () {return { calls: [{ kind: 'Call', metadata: {}, name: 'ids', value: [{ kind: 'CallValue', callValue: '1038750002' }, { kind: 'CallValue', callValue: '4808495' }] }], children: [{ fieldName: 'id', kind: 'Field', metadata: { isRequisite: true }, type: 'ID' }, { fieldName: '__typename', kind: 'Field', metadata: { isGenerated: true, isRequisite: true }, type: 'String' }], fieldName: 'nodes', kind: 'Query', metadata: { isPlural: true, isAbstract: true, identifyingArgName: 'ids' }, name: 'ContainsRelayQueryRootCall', type: 'Node' };})()).

    not.toContainRootCall((function () {return { calls: [{ kind: 'Call', metadata: {}, name: 'ids', value: [{ kind: 'CallValue', callValue: '1038750002' }, { kind: 'CallValue', callValue: '4808495' }, { kind: 'CallValue', callValue: '1819001144' }] }], children: [{ fieldName: 'id', kind: 'Field', metadata: { isRequisite: true }, type: 'ID' }, { fieldName: '__typename', kind: 'Field', metadata: { isGenerated: true, isRequisite: true }, type: 'String' }], fieldName: 'nodes', kind: 'Query', metadata: { isPlural: true, isAbstract: true, identifyingArgName: 'ids' }, name: 'ContainsRelayQueryRootCall', type: 'Node' };})());


    expect((function () {return { calls: [{ kind: 'Call', metadata: {}, name: 'ids', value: { kind: 'CallValue', callValue: '1038750002' } }], children: [{ fieldName: 'id', kind: 'Field', metadata: { isRequisite: true }, type: 'ID' }, { fieldName: '__typename', kind: 'Field', metadata: { isGenerated: true, isRequisite: true }, type: 'String' }], fieldName: 'nodes', kind: 'Query', metadata: { isPlural: true, isAbstract: true, identifyingArgName: 'ids' }, name: 'ContainsRelayQueryRootCall', type: 'Node' };})()).

    not.toContainRootCall((function () {return { calls: [{ kind: 'Call', metadata: {}, name: 'ids', value: [{ kind: 'CallValue', callValue: '1038750002' }, { kind: 'CallValue', callValue: '4808495' }] }], children: [{ fieldName: 'id', kind: 'Field', metadata: { isRequisite: true }, type: 'ID' }, { fieldName: '__typename', kind: 'Field', metadata: { isGenerated: true, isRequisite: true }, type: 'String' }], fieldName: 'nodes', kind: 'Query', metadata: { isPlural: true, isAbstract: true, identifyingArgName: 'ids' }, name: 'ContainsRelayQueryRootCall', type: 'Node' };})());


    // Hypothetical queries.
    expect((function () {return { calls: [{ kind: 'Call', metadata: {}, name: 'ids', value: { kind: 'CallValue', callValue: '1038750002' } }], children: [{ fieldName: 'id', kind: 'Field', metadata: { isRequisite: true }, type: 'ID' }, { fieldName: '__typename', kind: 'Field', metadata: { isGenerated: true, isRequisite: true }, type: 'String' }], fieldName: 'nodes', kind: 'Query', metadata: { isPlural: true, isAbstract: true, identifyingArgName: 'ids' }, name: 'ContainsRelayQueryRootCall', type: 'Node' };})()).

    not.toContainRootCall((function () {return { children: [{ fieldName: 'id', kind: 'Field', metadata: { isRequisite: true }, type: 'ID' }, { fieldName: '__typename', kind: 'Field', metadata: { isGenerated: true, isRequisite: true }, type: 'String' }], fieldName: 'nodes', kind: 'Query', metadata: { isPlural: true, isAbstract: true }, name: 'ContainsRelayQueryRootCall', type: 'Node' };})());


    expect((function () {return { children: [{ fieldName: 'id', kind: 'Field', metadata: { isRequisite: true }, type: 'ID' }, { fieldName: '__typename', kind: 'Field', metadata: { isGenerated: true, isRequisite: true }, type: 'String' }], fieldName: 'nodes', kind: 'Query', metadata: { isPlural: true, isAbstract: true }, name: 'ContainsRelayQueryRootCall', type: 'Node' };})()).

    not.toContainRootCall((function () {return { calls: [{ kind: 'Call', metadata: {}, name: 'ids', value: { kind: 'CallValue', callValue: '1038750002' } }], children: [{ fieldName: 'id', kind: 'Field', metadata: { isRequisite: true }, type: 'ID' }, { fieldName: '__typename', kind: 'Field', metadata: { isGenerated: true, isRequisite: true }, type: 'String' }], fieldName: 'nodes', kind: 'Query', metadata: { isPlural: true, isAbstract: true, identifyingArgName: 'ids' }, name: 'ContainsRelayQueryRootCall', type: 'Node' };})());});




  it('compares root calls sharing a canonical name', function () {
    expect((function () {return { calls: [{ kind: 'Call', metadata: {}, name: 'ids', value: { kind: 'CallValue', callValue: '1038750002' } }], children: [{ fieldName: 'id', kind: 'Field', metadata: { isRequisite: true }, type: 'ID' }, { fieldName: '__typename', kind: 'Field', metadata: { isGenerated: true, isRequisite: true }, type: 'String' }], fieldName: 'nodes', kind: 'Query', metadata: { isPlural: true, isAbstract: true, identifyingArgName: 'ids' }, name: 'ContainsRelayQueryRootCall', type: 'Node' };})()).

    toContainRootCall((function () {return { calls: [{ kind: 'Call', metadata: {}, name: 'id', value: { kind: 'CallValue', callValue: '1038750002' } }], children: [{ fieldName: 'id', kind: 'Field', metadata: { isRequisite: true }, type: 'ID' }, { fieldName: '__typename', kind: 'Field', metadata: { isGenerated: true, isRequisite: true }, type: 'String' }], fieldName: 'node', kind: 'Query', metadata: { isAbstract: true, identifyingArgName: 'id' }, name: 'ContainsRelayQueryRootCall', type: 'Node' };})());


    expect((function () {return { calls: [{ kind: 'Call', metadata: {}, name: 'id', value: { kind: 'CallValue', callValue: '1038750002' } }], children: [{ fieldName: 'id', kind: 'Field', metadata: { isRequisite: true }, type: 'ID' }, { fieldName: '__typename', kind: 'Field', metadata: { isGenerated: true, isRequisite: true }, type: 'String' }], fieldName: 'node', kind: 'Query', metadata: { isAbstract: true, identifyingArgName: 'id' }, name: 'ContainsRelayQueryRootCall', type: 'Node' };})()).

    toContainRootCall((function () {return { calls: [{ kind: 'Call', metadata: {}, name: 'ids', value: { kind: 'CallValue', callValue: '1038750002' } }], children: [{ fieldName: 'id', kind: 'Field', metadata: { isRequisite: true }, type: 'ID' }, { fieldName: '__typename', kind: 'Field', metadata: { isGenerated: true, isRequisite: true }, type: 'String' }], fieldName: 'nodes', kind: 'Query', metadata: { isPlural: true, isAbstract: true, identifyingArgName: 'ids' }, name: 'ContainsRelayQueryRootCall', type: 'Node' };})());


    expect((function () {return { calls: [{ kind: 'Call', metadata: {}, name: 'id', value: { kind: 'CallValue', callValue: '1038750002' } }], children: [{ fieldName: 'id', kind: 'Field', metadata: { isRequisite: true }, type: 'ID' }, { fieldName: '__typename', kind: 'Field', metadata: { isGenerated: true, isRequisite: true }, type: 'String' }], fieldName: 'node', kind: 'Query', metadata: { isAbstract: true, identifyingArgName: 'id' }, name: 'ContainsRelayQueryRootCall', type: 'Node' };})()).

    not.toContainRootCall((function () {return { calls: [{ kind: 'Call', metadata: {}, name: 'ids', value: { kind: 'CallValue', callValue: '4808495' } }], children: [{ fieldName: 'id', kind: 'Field', metadata: { isRequisite: true }, type: 'ID' }, { fieldName: '__typename', kind: 'Field', metadata: { isGenerated: true, isRequisite: true }, type: 'String' }], fieldName: 'nodes', kind: 'Query', metadata: { isPlural: true, isAbstract: true, identifyingArgName: 'ids' }, name: 'ContainsRelayQueryRootCall', type: 'Node' };})());


    expect((function () {return { calls: [{ kind: 'Call', metadata: {}, name: 'ids', value: { kind: 'CallValue', callValue: '1038750002' } }], children: [{ fieldName: 'id', kind: 'Field', metadata: { isRequisite: true }, type: 'ID' }, { fieldName: '__typename', kind: 'Field', metadata: { isGenerated: true, isRequisite: true }, type: 'String' }], fieldName: 'nodes', kind: 'Query', metadata: { isPlural: true, isAbstract: true, identifyingArgName: 'ids' }, name: 'ContainsRelayQueryRootCall', type: 'Node' };})()).

    not.toContainRootCall((function () {return { calls: [{ kind: 'Call', metadata: {}, name: 'id', value: { kind: 'CallValue', callValue: '4808495' } }], children: [{ fieldName: 'id', kind: 'Field', metadata: { isRequisite: true }, type: 'ID' }, { fieldName: '__typename', kind: 'Field', metadata: { isGenerated: true, isRequisite: true }, type: 'String' }], fieldName: 'node', kind: 'Query', metadata: { isAbstract: true, identifyingArgName: 'id' }, name: 'ContainsRelayQueryRootCall', type: 'Node' };})());});});