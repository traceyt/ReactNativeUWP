'use strict';









jest.autoMockOff();



describe('flattenStyle',function(){

it('should merge style objects',function(){
var style1={width:10};
var style2={height:20};
var flatStyle=require('flattenStyle')([style1,style2]);
expect(flatStyle.width).toBe(10);
expect(flatStyle.height).toBe(20);});


it('should override style properties',function(){
var style1={backgroundColor:'#000',width:10};
var style2={backgroundColor:'#023c69',width:null};
var flatStyle=require('flattenStyle')([style1,style2]);
expect(flatStyle.backgroundColor).toBe('#023c69');
expect(flatStyle.width).toBe(null);});


it('should overwrite properties with `undefined`',function(){
var style1={backgroundColor:'#000'};
var style2={backgroundColor:undefined};
var flatStyle=require('flattenStyle')([style1,style2]);
expect(flatStyle.backgroundColor).toBe(undefined);});


it('should not fail on falsy values',function(){
expect(function(){return require('flattenStyle')([null,false,undefined]);}).not.toThrow();});


it('should recursively flatten arrays',function(){
var style1={width:10};
var style2={height:20};
var style3={width:30};
var flatStyle=require('flattenStyle')([null,[],[style1,style2],style3]);
expect(flatStyle.width).toBe(30);
expect(flatStyle.height).toBe(20);});});