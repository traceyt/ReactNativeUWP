'use strict';


































function RelayQL(
strings)

{
!
false?require('invariant')(0,
'RelayQL: Unexpected invocation at runtime. Either the Babel transform '+
'was not set up, or it failed to identify this call site. Make sure it '+
'is being used verbatim as `Relay.QL`.'):undefined;}



function assertValidFragment(substitution){
!(
substitution instanceof require('RelayFragmentReference')||
require('QueryBuilder').getFragment(substitution)||
require('QueryBuilder').getFragmentReference(substitution))?require('invariant')(0,
'RelayQL: Invalid fragment composition, use '+
'`${Child.getFragment(\'name\')}`.'):undefined;}






babelHelpers.extends(RelayQL,{
__frag:function(substitution){
if(typeof substitution==='function'){

return new (require('RelayRouteFragment'))(substitution);}

if(substitution!=null){
if(Array.isArray(substitution)){
substitution.forEach(assertValidFragment);}else 
{
assertValidFragment(substitution);}}


return substitution;},

__var:function(expression){
var variable=require('QueryBuilder').getCallVariable(expression);
if(variable){
!
false?require('invariant')(0,
'RelayQL: Invalid argument `%s` supplied via template substitution. '+
'Instead, use an inline variable (e.g. `comments(count: $count)`).',
variable.callVariableName):undefined;}


return require('QueryBuilder').createCallValue(expression);},

__id:function(){
return require('generateConcreteFragmentID')();}});



module.exports=RelayQL;