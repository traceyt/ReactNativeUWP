'use strict';

























var SourceCode=require('NativeModules').SourceCode;


var _serverURL,_offlinePath;

function getDevServerURL(){
if(_serverURL===undefined){
var scriptURL=SourceCode.scriptURL;
var match=scriptURL&&scriptURL.match(/^https?:\/\/.*?\//);
if(match){

_serverURL=match[0];}else 
{

_serverURL=null;}}



return _serverURL;}


function getOfflinePath(){
if(_offlinePath===undefined){
var scriptURL=SourceCode.scriptURL;
if(!scriptURL){

_offlinePath='';
return _offlinePath;}

if(scriptURL.startsWith('assets://')){

_offlinePath='';
return _offlinePath;}

if(scriptURL.startsWith('file://')){

_offlinePath=scriptURL.substring(7,scriptURL.lastIndexOf('/')+1);}else 
{
_offlinePath=scriptURL.substring(0,scriptURL.lastIndexOf('/')+1);}}



return _offlinePath;}





function getPathInArchive(asset){
var offlinePath=getOfflinePath();
if(require('Platform').OS==='android'){
if(offlinePath){

return 'file://'+offlinePath+getAssetPathInDrawableFolder(asset);}



return require('../../local-cli/bundle/assetPathUtils').getAndroidResourceIdentifier(asset);}else 
{

return offlinePath+getScaledAssetPath(asset);}}







function getPathOnDevserver(devServerUrl,asset){
return devServerUrl+getScaledAssetPath(asset)+'?platform='+require('Platform').OS+
'&hash='+asset.hash;}





function getScaledAssetPath(asset){
var scale=pickScale(asset.scales,require('PixelRatio').get());
var scaleSuffix=scale===1?'':'@'+scale+'x';
var assetDir=require('../../local-cli/bundle/assetPathUtils').getBasePath(asset);
return assetDir+'/'+asset.name+scaleSuffix+'.'+asset.type;}





function getAssetPathInDrawableFolder(asset){
var scale=pickScale(asset.scales,require('PixelRatio').get());
var drawbleFolder=require('../../local-cli/bundle/assetPathUtils').getAndroidDrawableFolderName(asset,scale);
var fileName=require('../../local-cli/bundle/assetPathUtils').getAndroidResourceIdentifier(asset);
return drawbleFolder+'/'+fileName+'.'+asset.type;}


function pickScale(scales,deviceScale){

for(var i=0;i<scales.length;i++){
if(scales[i]>=deviceScale){
return scales[i];}}






return scales[scales.length-1]||1;}


function resolveAssetSource(source){
if(typeof source==='object'){
return source;}


var asset=require('AssetRegistry').getAssetByID(source);
if(asset){
return assetToImageSource(asset);}


return null;}


function assetToImageSource(asset){
var devServerURL=getDevServerURL();
return {
__packager_asset:true,
width:asset.width,
height:asset.height,
uri:devServerURL?getPathOnDevserver(devServerURL,asset):getPathInArchive(asset),
scale:pickScale(asset.scales,require('PixelRatio').get())};}



module.exports=resolveAssetSource;
module.exports.pickScale=pickScale;