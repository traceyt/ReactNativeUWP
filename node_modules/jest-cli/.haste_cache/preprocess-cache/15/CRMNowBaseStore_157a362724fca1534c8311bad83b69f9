'use strict';var 







CRMNowBaseStore=function(){
function CRMNowBaseStore(){babelHelpers.classCallCheck(this,CRMNowBaseStore);
this.$CRMNowBaseStore_eventEmitter=new (require('EventEmitter'))();
this.subscribe=this.$CRMNowBaseStore_mockMethod(this.subscribe);
this.inform=this.$CRMNowBaseStore_mockMethod(this.inform);
this.__emitChange=this.$CRMNowBaseStore_mockMethod(this.__emitChange);
this.__dispatcher=jest.genMockFromModule('CRMNowDispatcher');
this.getDispatchToken=jest.genMockFunction();}babelHelpers.createClass(CRMNowBaseStore,[{key:'subscribe',value:function subscribe(


type,callback){
this.$CRMNowBaseStore_eventEmitter.addListener(type,callback);}},{key:'inform',value:function inform(


type,data){
this.$CRMNowBaseStore_eventEmitter.emit(type,data);}},{key:'mockActionToResetEveryThing',value:function mockActionToResetEveryThing()


{
this.mockAction(require('CRMNowActionTypes').RESET_EVERYTHING);}},{key:'mockAction',value:function mockAction(


actionType,data){
var payload={
action:babelHelpers.extends({
actionType:actionType},
data)};


this.onDispatchToken&&this.onDispatchToken(payload);}},{key:'$CRMNowBaseStore_mockMethod',value:function $CRMNowBaseStore_mockMethod(


impl){
return jest.genMockFunction().mockImpl(impl.bind(this));}},{key:'__emitChange',value:function __emitChange()


{}}]);return CRMNowBaseStore;}();




module.exports=CRMNowBaseStore;