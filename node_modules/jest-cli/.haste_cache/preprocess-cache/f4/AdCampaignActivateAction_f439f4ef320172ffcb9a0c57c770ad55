'use strict';















var AdCampaignActivateAction={
handleSwitch:function(
campaignID,
campaignGroupID,
isActivating,
onSuccess,
onFailure)
{
!
require('isValidRecordID')(campaignID)?require('invariant')(0,
'Action taken on unknown campaign '+campaignID):undefined;


var mutationName=isActivating?
'ad_campaign_activate':
'ad_campaign_pause';

var mutationFrag=require('GraphQLMutationQueryCreator').createQuery(
mutationName,
{
ad_campaign:campaignID,
ad_campaign_group:campaignGroupID});



var mutation;
if(isActivating){
mutation=function(RQL_0){return {calls:[{kind:'Call',metadata:{},name:'ad_campaign_activate',value:{kind:'CallVariable',callVariableName:'input'}}],children:[].concat.apply([],[{fieldName:'client_mutation_id',kind:'Field',metadata:{isGenerated:true,isRequisite:true},type:'ID'},require('Relay').QL.__frag(RQL_0)]),kind:'Mutation',metadata:{inputType:'AdCampaignActivateData!'},name:'AdCampaignActivateAction',responseType:'AdCampaignActivateResponsePayload'};}(


mutationFrag);}else 



{
mutation=function(RQL_0){return {calls:[{kind:'Call',metadata:{},name:'ad_campaign_pause',value:{kind:'CallVariable',callVariableName:'input'}}],children:[].concat.apply([],[{fieldName:'client_mutation_id',kind:'Field',metadata:{isGenerated:true,isRequisite:true},type:'ID'},require('Relay').QL.__frag(RQL_0)]),kind:'Mutation',metadata:{inputType:'AdCampaignPauseData!'},name:'AdCampaignActivateAction',responseType:'AdCampaignPauseResponsePayload'};}(


mutationFrag);}





var action=new (require('AdsManagerMutationAction'))(
isActivating?
require('MobileAdsManagerLoggerConsts').events.ACTIVATE_CAMPAIGN:
require('MobileAdsManagerLoggerConsts').events.PAUSE_CAMPAIGN);



action.runOptimisticAction(
this._buildOptimisticPayload(campaignID,isActivating));


action.runServerAction(
mutation,
{
ad_campaign_id:campaignID},

function(err,response){
if(err){
onFailure(err);}else 
{
onSuccess(response);}



var id=action.getClientMutationID();
require('defaultRQLMutationCallback')(err,response,mutation,id);});},




_buildOptimisticPayload:function(campaignID,isActivating){
var updatedCampaign={
id:campaignID,
run_status_info_with_flattening:{
is_active:isActivating}};



var payloadName=isActivating?
'ad_campaign_activate':
'ad_campaign_pause';
var result={};
result[payloadName]={
ad_campaign:updatedCampaign};

return result;}};



module.exports=AdCampaignActivateAction;