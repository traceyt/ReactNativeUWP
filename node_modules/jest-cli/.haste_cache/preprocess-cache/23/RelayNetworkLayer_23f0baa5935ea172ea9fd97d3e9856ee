'use strict'; /**
               * Copyright (c) 2013-present, Facebook, Inc.
               * All rights reserved.
               *
               * This source code is licensed under the BSD-style license found in the
               * LICENSE file in the root directory of this source tree. An additional grant
               * of patent rights can be found in the PATENTS file in the same directory.
               *
               * @providesModule RelayNetworkLayer
               * @typechecks
               * 
               */

'use strict';













var injectedNetworkLayer;

/**
 * @internal
 *
 * `RelayNetworkLayer` provides a method to inject custom network behavior.
 */
var RelayNetworkLayer = { 
  injectNetworkLayer: function (networkLayer) {
    injectedNetworkLayer = networkLayer;}, 


  sendMutation: function (mutationRequest) {
    var networkLayer = getCurrentNetworkLayer();
    var promise = networkLayer.sendMutation(mutationRequest);
    if (promise) {
      require('/Users/cpojer/Projects/relay/scripts/jest/../../node_modules/fbjs/lib/Promise').resolve(promise).done();}}, 



  sendQueries: function (queryRequests) {
    var networkLayer = getCurrentNetworkLayer();
    var promise = networkLayer.sendQueries(queryRequests);
    if (promise) {
      require('/Users/cpojer/Projects/relay/scripts/jest/../../node_modules/fbjs/lib/Promise').resolve(promise).done();}}, 



  supports: function () {
    var networkLayer = getCurrentNetworkLayer();
    return networkLayer.supports.apply(networkLayer, arguments);} };



function getCurrentNetworkLayer() {
  require('/Users/cpojer/Projects/relay/scripts/jest/../../node_modules/fbjs/lib/invariant')(
  injectedNetworkLayer, 
  'RelayNetworkLayer: Use `injectNetworkLayer` to configure a network layer.');

  return injectedNetworkLayer;}


require('RelayProfiler').instrumentMethods(RelayNetworkLayer, { 
  sendMutation: 'RelayNetworkLayer.sendMutation', 
  sendQueries: 'RelayNetworkLayer.sendQueries' });


module.exports = RelayNetworkLayer;