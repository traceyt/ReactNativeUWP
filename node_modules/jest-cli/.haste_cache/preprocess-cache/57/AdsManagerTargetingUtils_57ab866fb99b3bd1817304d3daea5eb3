'use strict';

















var MAX_NUM_COUNTRIES_TO_TARGET=25;

module.exports={



getTargetingErrors:function(
audience,
page)
{
if(!audience||this.isCustomAudience(audience)){
return [];}

var errors=this.getAudienceErrors(audience);

if(!this.audienceNameShouldHide(audience)){
errors.push(this.getAudienceNameError(audience));}

errors=errors.concat(this.getSelectAudienceErrors(audience,page));
return errors.filter(function(error){return error;});},


getTargetingErrorsForReviewScreen:function(
audience,
minAgeFromCallNowCTA)
{
return [
this.getEmptyLocationsErrorForReviewScreen(audience),
this.getAgeRestrictionFromCallNowCTAError(
audience,
minAgeFromCallNowCTA)].

filter(function(e){return e;});},


getSelectAudienceErrors:function(
audience,
page)
{
if(!audience||this.isCustomAudience(audience)){
return [];}

var errors=[];

errors.push(this.getBlacklistedLocationsError(audience.locations,page));
errors.push(this.getAgeRestrictionFromPageSettingError(
audience,
this.getMinAgeFromPage(page)));

errors.push(
this.getMinAgeConflictingWithAlcoholRestrictionError(
audience.ageMin,
audience.locations,
page));


return errors.filter(function(error){return error;});},


getAudienceErrors:function(audience){
var errors=[this.getEmptyLocationsErrorForAudience(audience)];

errors.push(this.getCountriesLimitError(audience));
return errors.filter(function(error){return error;});},


getBlacklistedLocationsError:function(
locations,
page)
{
var blacklistedLocations=this.getBlacklistedLocations(locations,page);
if(!blacklistedLocations.length){
return null;}

var locationsText=require('AdsManagerLocations').getCountryNames(
blacklistedLocations);

return require('fbt')._('__FBT__{"type":"text","texts":["You can\'t target this ad to the following countries because your Page isn\'t visible there: {list of countries, e.g. \'North Korea, United States\'.}. Please edit your locations for this ad or change the country restrictions in your Page\'s settings."],"desc":"Error message that appears at the top of the audience creation or editing screen when an advertiser attempts to save a new audience but one or more of the locations they have selected to target is blacklisted for their page. Space is not limited.","project":""}__FBT__',[require('fbt').param(







'list of countries, e.g. \'North Korea, United States\'.',
locationsText)]);},






getMinAgeConflictingWithAlcoholRestrictionError:function(
ageMin,
locations,
page)
{
var alcoholMinAgeForLocaitons=this.getAlcohoMinAgeForPageWithLocations(
locations,
page);

if(ageMin>=alcoholMinAgeForLocaitons){
return null;}

return require('fbt')._('__FBT__{"type":"text","texts":["Your Page can\'t target its ads to audiences younger than the legal drinking age in the countries you\'ve added. Please set your minimum age to {min_age} or older."],"desc":"Error message that appears at the top of the audience creation screen when an advertiser attempts to use or save an audience but the minimum age is lower than legal drinking ages in targeted locations for alcohol related page. Space is not limited.","project":""}__FBT__',[require('fbt').param(








'min_age',
alcoholMinAgeForLocaitons)]);},






getEmptyLocationsError:function(
locations)
{
if(locations&&locations.length){
return null;}


return require('fbt')._('__FBT__{"type":"text","texts":["Add at least one location for your audience."],"desc":"Error message that appears at the top of the audience creation screen when an advertiser attempts to save a new audience but hasn\'t selected any locations to target. Space is not limited.","project":""}__FBT__');},









getEmptyLocationsErrorForAudience:function(audience){
if(!audience||!audience.needsLocations){
return null;}


return this.getEmptyLocationsError(audience.locations);},


getEmptyLocationsErrorForReviewScreen:function(audience){
if(!audience||
!audience.needsLocations||
this.isCustomAudience(audience)||
audience.locations&&audience.locations.length){
return null;}


return require('fbt')._('__FBT__{"type":"text","texts":["Select a targeting location for your ad."],"desc":"Text for an error message that appears at the top of the Review screen if an advertiser is trying to create or edit a campaign without a valid location. This error message appears in a bulleted list at the top of the screen, so space is not limited.","project":""}__FBT__');},










getCountriesLimitError:function(audience){
var countriesNumber=this._getNumberOfCountriesForAudience(audience);
if(countriesNumber<=MAX_NUM_COUNTRIES_TO_TARGET){
return null;}

return require('fbt')._('__FBT__{"type":"text","texts":["Your ad can only target up to 25 countries. Edit this audience to target your ad to fewer countries."],"desc":"Error message that appears at the top of the audience creation screen when an advertiser attempts to use an audience that targets more than 25 countries. Space is not limited.","project":""}__FBT__');},










getAudienceNameError:function(audience){


if(!audience||
audience.name&&audience.name.trim()||
audience.audienceID<require('AdsManagerSpecialAudienceIDs').NEW){
return null;}

return this.getAudienceEmptyNameErrorMessage();},


getAudienceEmptyNameErrorMessage:function(audience){
return require('fbt')._('__FBT__{"type":"text","texts":["Add a name for your audience."],"desc":"Error message that appears at the top of the audience creation screen when an advertiser attempts to save a new audience without first giving it a name. Space is not limited.","project":""}__FBT__');},









getAgeRestrictionFromPageSettingError:function(
audience,
minAgeFromPageSettings)
{
if(!audience||audience.ageMin>=minAgeFromPageSettings){
return null;}

return require('fbt')._('__FBT__{"type":"text","texts":["Due to your Page settings, people younger than {min_age} can\'t see your Page or ads for your Page. Change the age range for your audience targeting."],"desc":"Error message that appears at the top of the audience creation screen when an advertiser attempts to save an audience but the minimum age is too low for their page. Space is not limited.","project":""}__FBT__',[require('fbt').param(





'min_age',
minAgeFromPageSettings)]);},







getAgeRestrictionFromCallNowCTAError:function(
audience,
minAgeFromCallNowCTA)
{
if(!audience||this.isCustomAudience(audience)){
return null;}

if(audience.ageMin<minAgeFromCallNowCTA){
return require('fbt')._('__FBT__{"type":"text","texts":["Your audience must have a minimum age of {min_age} or older when your ad includes a Call Now button."],"desc":"Error message that appears above ages section in Review when the minimum age is set to under 18. Space is not limited.","project":""}__FBT__',[require('fbt').param(




'min_age',
minAgeFromCallNowCTA)]);}





return null;},




getBlacklistedLocations:function(
locations,
page)
{var _this=this;

if(!locations||!page||
(!page.blacklisted_countries||!page.blacklisted_countries.length)&&(
!page.whitelisted_countries||!page.whitelisted_countries.length)){
return [];}

var blacklistedlocations=locations.filter(function(location){return (
_this.isBlacklistedCountry(location.country_code,page));},this);
return blacklistedlocations;},


isBlacklistedCountry:function(
countryCode,
page)
{
if(!countryCode||!page){
return false;}

if(page.blacklisted_countries&&page.blacklisted_countries.length){
if(page.blacklisted_countries.some(
function(blacklisted){return countryCode===blacklisted;})){
return true;}}


if(page.whitelisted_countries&&page.whitelisted_countries.length){
if(!page.whitelisted_countries.some(
function(whitelisted){return countryCode===whitelisted;})){
return true;}}


return false;},








getTargetingSentences:function(
audience)
{
if(!audience){
return [];}

if(audience.type===require('AdsManagerAudienceType').LOOKALIKE_AUDIENCE){
return [require('fbt')._('__FBT__{"type":"text","texts":["Lookalike Audience"],"desc":"Text for a label that indicates what type of audience are targeted by an ad. This text appears in a description of an audience in the audience selection screen. Space is somewhat limited.","project":""}__FBT__')];}else 







if(audience.type===require('AdsManagerAudienceType').CUSTOM_AUDIENCE){
return [require('fbt')._('__FBT__{"type":"text","texts":["Custom Audience"],"desc":"Text for a label that indicates what type of audience are targeted by an ad. This text appears in a description of an audience in the audience selection screen. Space is somewhat limited.","project":""}__FBT__')];}









var locationsTarget=require('AdsManagerLocations').humanReadableLocations(
audience.locations);

var genderAgesTarget=this._humanReadableGenderAgesTargetingSentence(
audience.gender,
audience.ageMin,
audience.ageMax);

var interestTarget=null;
if(audience.interests&&audience.interests.length){
var interestList=require('intlList')(
audience.interests.map(
function(interest){return interest.name;}),

require('intlList').CONJUNCTIONS.NONE);

interestTarget=require('fbt')._('__FBT__{"type":"text","texts":["Interested in {list of interests formatted according to locale convention (e.g. \'Xbox, Cookies\' for English)}"],"desc":"Text for a label that indicates which interest groups are targeted by an ad, e.g. \'Interested in Xbox, Cookies\'. This text appears in a description of a target audience in the audience selection screen. Space is somewhat limited.","project":""}__FBT__',[require('fbt').param(







'list of interests formatted according to locale convention (e.g. \'Xbox, Cookies\' for English)',
interestList)]);}




return [
genderAgesTarget,
locationsTarget,
interestTarget].
filter(function(target){return target;});},


getMinAgeFromPage:function(page){
var minAgeFromPage=page&&
page.default_ad_target_spec&&
page.default_ad_target_spec.min_age;
return minAgeFromPage?
Math.max(minAgeFromPage,require('AdsManagerAges').MIN_AGE):
require('AdsManagerAges').MIN_AGE;},


getAlcohoMinAgeForPageWithLocations:function(
locations,
page)
{


if(!page||!page.has_alcohol_content){
return 0;}

return this.getAlcoholMinAgeForLocations(locations);},


getAlcoholMinAgeForLocations:function(
locations)
{
if(!locations||!locations.length){
return 0;}

return locations.reduce(
function(max,location){return Math.max(max,location.alcohol_min_age);},
0);},



audienceNameShouldHide:function(
audience)
{
return !!(
audience&&
audience.audienceID===
require('AdsManagerSpecialAudienceIDs').INLINE_CAMPAIGN_AUDIENCE);},



isCustomAudience:function(
audience)
{
if(!audience||!audience.type){
return false;}

return audience.type===require('AdsManagerAudienceType').LOOKALIKE_AUDIENCE||
audience.type===require('AdsManagerAudienceType').CUSTOM_AUDIENCE;},








generateNameFromAudience:function(audience){


if(!audience||this.isCustomAudience(audience)){
return null;}



var locationsTarget=require('AdsManagerLocations').humanReadableLocationsSnippet(
audience.locations);


var genderTarget=require('AdsManagerGender').humanReadableSymbol(audience.gender);

var agesTarget=require('AdsManagerAges').humanReadableRange(
audience.ageMin,
audience.ageMax);



if(audience.audienceID===require('AdsManagerSpecialAudienceIDs').LOCAL_AWARENESS){
if(!genderTarget){
return require('fbt')._('__FBT__{"type":"text","texts":["{age range, e.g. 20-25} - {locations, e.g. 1 Kansas Drive, Wichita}"],"desc":"Text that\'s used to create a default name for a local awareness ad set using the age and location targeting for the ad set, e.g. \'20-25 - 1 Kansas Drive, Wichita\'. This text will appear wherever the ad set is referred to. Space is limited.","project":""}__FBT__',[require('fbt').param(




'age range, e.g. 20-25',
agesTarget),require('fbt').param(


'locations, e.g. 1 Kansas Drive, Wichita',
locationsTarget)]);}




return require('fbt')._('__FBT__{"type":"text","texts":["{gender, e.g. M} - {age range, e.g. 20-25} - {locations, e.g. 1 Kansas Drive, Wichita}"],"desc":"Text that\'s used to create a default name for an ad set using the gender, age and location targeting of the ad set, e.g. \'M - 20-25 - 1 Kansas Drive, Wichita\' This text will appear wherever the ad set is referred to. Space is limited.","project":""}__FBT__',[require('fbt').param(





'gender, e.g. M',
genderTarget),require('fbt').param(


'age range, e.g. 20-25',
agesTarget),require('fbt').param(


'locations, e.g. 1 Kansas Drive, Wichita',
locationsTarget)]);}




if(!genderTarget){
return require('fbt')._('__FBT__{"type":"text","texts":["{locations, e.g. CN,US} - {age range, e.g. 20-25}"],"desc":"Text that\'s used to create a default name for an ad set using location and age targeting for the ad set, e.g. \'CN,US - 20-25\' This text will appear wherever the ad set is referred to. Space is limited.","project":""}__FBT__',[require('fbt').param(




'locations, e.g. CN,US',
locationsTarget),require('fbt').param(


'age range, e.g. 20-25',
agesTarget)]);}




return require('fbt')._('__FBT__{"type":"text","texts":["{locations, e.g. CN,US} - {gender, e.g. M} - {age range, e.g. 20-25}"],"desc":"Text that\'s used to create a default name for an ad set using location, gender and age targeting for the ad set, e.g. \'CN,US - M - 20-25\' This text will appear wherever the ad set is referred to. Space is limited.","project":""}__FBT__',[require('fbt').param(




'locations, e.g. CN,US',
locationsTarget),require('fbt').param(


'gender, e.g. M',
genderTarget),require('fbt').param(


'age range, e.g. 20-25',
agesTarget)]);},





_getNumberOfCountriesForAudience:function(
audience)
{
if(!audience||!audience.locations){
return 0;}

var countries=[];
audience.locations.forEach(function(location){
if(countries.indexOf(location.country_code)===-1){
countries.push(location.country_code);}});


return countries.length;},


_humanReadableGenderAgesTargetingSentence:function(
gender,
minAge,
maxAge)
{
!(
require('AdsManagerGender').orderedGenders.indexOf(gender)!==-1)?require('invariant')(0,
'unknown gender %s',
gender):undefined;

var genderString=require('AdsManagerGender').humanReadable(gender);
var agesString=require('AdsManagerAges').humanReadableRange(minAge,maxAge);
return require('fbt')._('__FBT__{"type":"text","texts":["{gender, e.g. \'Men and Women\', \'Women\'}, ages {age range, e.g. 23-56}"],"desc":"Text for a label that describes the gender and age targeting for an ad that does not have gender targeting, e.g. \'Men and Women, ages 23-56\'","project":""}__FBT__',[require('fbt').param(



'gender, e.g. \'Men and Women\', \'Women\'',
genderString),require('fbt').param(


'age range, e.g. 23-56',
agesString)]);}};