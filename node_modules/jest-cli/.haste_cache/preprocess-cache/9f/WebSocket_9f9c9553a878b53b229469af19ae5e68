'use strict';













var RCTWebSocketModule=require('NativeModules').WebSocketModule;







var WebSocketId=0;
var CLOSE_NORMAL=1000;var 







WebSocket=function(_WebSocketBase){babelHelpers.inherits(WebSocket,_WebSocketBase);function WebSocket(){babelHelpers.classCallCheck(this,WebSocket);return babelHelpers.possibleConstructorReturn(this,Object.getPrototypeOf(WebSocket).apply(this,arguments));}babelHelpers.createClass(WebSocket,[{key:'connectToSocketImpl',value:function connectToSocketImpl(



url,protocols,options){
this._socketId=WebSocketId++;

RCTWebSocketModule.connect(url,protocols,options,this._socketId);

this._registerEvents(this._socketId);}},{key:'closeConnectionImpl',value:function closeConnectionImpl(


code,reason){
this._closeWebSocket(this._socketId,code,reason);}},{key:'cancelConnectionImpl',value:function cancelConnectionImpl()


{
this._closeWebSocket(this._socketId);}},{key:'sendStringImpl',value:function sendStringImpl(


message){
RCTWebSocketModule.send(message,this._socketId);}},{key:'sendArrayBufferImpl',value:function sendArrayBufferImpl()


{

console.warn('Sending ArrayBuffers is not yet supported');}},{key:'_closeWebSocket',value:function _closeWebSocket(


id,code,reason){
if(require('Platform').OS==='android'){



var statusCode=typeof code==='number'?code:CLOSE_NORMAL;
var closeReason=typeof reason==='string'?reason:'';
RCTWebSocketModule.close(statusCode,closeReason,id);}else 
{
RCTWebSocketModule.close(id);}}},{key:'_unregisterEvents',value:function _unregisterEvents()



{
this._subs.forEach(function(e){return e.remove();});
this._subs=[];}},{key:'_registerEvents',value:function _registerEvents(


id){var _this2=this;
this._subs=[
require('RCTDeviceEventEmitter').addListener('websocketMessage',function(ev){
if(ev.id!==id){
return;}

var event=new (require('WebSocketEvent'))('message',{
data:ev.type==='binary'?require('base64-js').toByteArray(ev.data).buffer:ev.data});

_this2.onmessage&&_this2.onmessage(event);
_this2.dispatchEvent(event);}),

require('RCTDeviceEventEmitter').addListener('websocketOpen',function(ev){
if(ev.id!==id){
return;}

_this2.readyState=_this2.OPEN;
var event=new (require('WebSocketEvent'))('open');
_this2.onopen&&_this2.onopen(event);
_this2.dispatchEvent(event);}),

require('RCTDeviceEventEmitter').addListener('websocketClosed',function(ev){
if(ev.id!==id){
return;}

_this2.readyState=_this2.CLOSED;
var event=new (require('WebSocketEvent'))('close');
event.code=ev.code;
event.reason=ev.reason;
_this2.onclose&&_this2.onclose(event);
_this2.dispatchEvent(event);
_this2._unregisterEvents();
_this2.close();}),

require('RCTDeviceEventEmitter').addListener('websocketFailed',function(ev){
if(ev.id!==id){
return;}

var event=new (require('WebSocketEvent'))('error');
event.message=ev.message;
_this2.onerror&&_this2.onerror(event);
_this2.onclose&&_this2.onclose(event);
_this2.dispatchEvent(event);
_this2._unregisterEvents();
_this2.close();})];}}]);return WebSocket;}(require('WebSocketBase'));





module.exports=WebSocket;