/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @emails oncall+relay
 */

'use strict';

require('configureForRelayOSS');





describe('isRelayContext()', function () {
  it('returns true for `RelayContext` instances', function () {
    expect(require('isRelayContext')(new (require('RelayContext'))())).toBe(true);});


  it('returns true for objects that conform to the interface', function () {
    var context = { 
      forceFetch: function () {return null;}, 
      getFragmentResolver: function () {return null;}, 
      getStoreData: function () {return null;}, 
      primeCache: function () {return null;} };

    expect(require('isRelayContext')(context)).toBe(true);});


  it('returns false for objects that do not conform to the interface', function () {
    var fakeContext = { 
      forceFetch: true, 
      getFragmentResolver: true, 
      getStoreData: true, 
      primeCache: true };

    expect(require('isRelayContext')(fakeContext)).toBe(false);});


  it('returns false for non-objects', function () {
    expect(require('isRelayContext')(null)).toBe(false);
    expect(require('isRelayContext')(false)).toBe(false);
    expect(require('isRelayContext')('relay')).toBe(false);
    expect(require('isRelayContext')(1)).toBe(false);});});