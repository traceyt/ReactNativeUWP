'use strict';












require('configureForRelayOSS');

jest.
dontMock('GraphQLRange').
dontMock('GraphQLSegment').
mock('warning');










describe('diffRelayQuery',function(){var _RelayTestUtils=require('RelayTestUtils');var 
getNode=_RelayTestUtils.getNode;var getVerbatimNode=_RelayTestUtils.getVerbatimNode;var writePayload=_RelayTestUtils.writePayload;
var HAS_NEXT_PAGE=undefined,HAS_PREV_PAGE=undefined,PAGE_INFO=undefined;

var rootCallMap=undefined;

beforeEach(function(){
jest.resetModuleRegistry();var _RelayConnectionInter=require('RelayConnectionInterface');

HAS_NEXT_PAGE=_RelayConnectionInter.HAS_NEXT_PAGE;HAS_PREV_PAGE=_RelayConnectionInter.HAS_PREV_PAGE;PAGE_INFO=_RelayConnectionInter.PAGE_INFO;

rootCallMap={
'viewer':{'':'client:1'}};


jasmine.addMatchers(require('RelayTestUtils').matchers);});


it('returns unfetched connections as-is',function(){
var records={};
var store=new (require('RelayRecordStore'))({records:records},{rootCallMap:rootCallMap});
var tracker=new (require('RelayQueryTracker'))();

var query=getNode(function(){return {children:[{calls:[{kind:'Call',metadata:{},name:'first',value:{kind:'CallValue',callValue:'3'}}],children:[{children:[{children:[{fieldName:'id',kind:'Field',metadata:{isRequisite:true},type:'ID'},{fieldName:'__typename',kind:'Field',metadata:{isGenerated:true,isRequisite:true},type:'String'}],fieldName:'node',kind:'Field',metadata:{canHaveSubselections:true,isAbstract:true,isRequisite:true},type:'FeedUnit'},{fieldName:'cursor',kind:'Field',metadata:{isGenerated:true,isRequisite:true},type:'String'}],fieldName:'edges',kind:'Field',metadata:{canHaveSubselections:true,isPlural:true},type:'NewsFeedEdge'},{children:[{fieldName:'hasNextPage',kind:'Field',metadata:{isGenerated:true,isRequisite:true},type:'Boolean'},{fieldName:'hasPreviousPage',kind:'Field',metadata:{isGenerated:true,isRequisite:true},type:'Boolean'}],fieldName:'pageInfo',kind:'Field',metadata:{canHaveSubselections:true,isGenerated:true,isRequisite:true},type:'PageInfo'}],fieldName:'newsFeed',kind:'Field',metadata:{canHaveSubselections:true,isConnection:true,isFindable:true},type:'NewsFeedConnection'}],fieldName:'viewer',kind:'Query',metadata:{},name:'DiffRelayQuery_connection',type:'Viewer'};}());












var diffQueries=require('diffRelayQuery')(query,store,tracker);
expect(diffQueries.length).toBe(1);
expect(diffQueries[0]).toBeQueryRoot(query);});


it('removes completely fetched connections',function(){var _PAGE_INFO;
var records={};
var store=new (require('RelayRecordStore'))({records:records},{rootCallMap:rootCallMap});
var writer=new (require('RelayRecordWriter'))(records,rootCallMap,false);
var tracker=new (require('RelayQueryTracker'))();

var payload={
viewer:{
newsFeed:babelHelpers.defineProperty({
edges:[
{cursor:'c1',node:{id:'s1'}},
{cursor:'c2',node:{id:'s2'}},
{cursor:'c3',node:{id:'s3'}}]},

PAGE_INFO,(_PAGE_INFO={},babelHelpers.defineProperty(_PAGE_INFO,
HAS_NEXT_PAGE,true),babelHelpers.defineProperty(_PAGE_INFO,
HAS_PREV_PAGE,false),_PAGE_INFO))}};




var query=getNode(function(){return {children:[{calls:[{kind:'Call',metadata:{},name:'first',value:{kind:'CallValue',callValue:'3'}}],children:[{children:[{children:[{fieldName:'id',kind:'Field',metadata:{isRequisite:true},type:'ID'},{fieldName:'__typename',kind:'Field',metadata:{isGenerated:true,isRequisite:true},type:'String'}],fieldName:'node',kind:'Field',metadata:{canHaveSubselections:true,isAbstract:true,isRequisite:true},type:'FeedUnit'},{fieldName:'cursor',kind:'Field',metadata:{isGenerated:true,isRequisite:true},type:'String'}],fieldName:'edges',kind:'Field',metadata:{canHaveSubselections:true,isPlural:true},type:'NewsFeedEdge'},{children:[{fieldName:'hasNextPage',kind:'Field',metadata:{isGenerated:true,isRequisite:true},type:'Boolean'},{fieldName:'hasPreviousPage',kind:'Field',metadata:{isGenerated:true,isRequisite:true},type:'Boolean'}],fieldName:'pageInfo',kind:'Field',metadata:{canHaveSubselections:true,isGenerated:true,isRequisite:true},type:'PageInfo'}],fieldName:'newsFeed',kind:'Field',metadata:{canHaveSubselections:true,isConnection:true,isFindable:true},type:'NewsFeedConnection'}],fieldName:'viewer',kind:'Query',metadata:{},name:'DiffRelayQuery_connection',type:'Viewer'};}());













writePayload(store,writer,query,payload,tracker);


var diffQueries=require('diffRelayQuery')(query,store,tracker);
expect(diffQueries.length).toBe(0);});


it('returns range extensions for partially fetched connections',function(){var _PAGE_INFO2;
var records={};
var store=new (require('RelayRecordStore'))({records:records},{rootCallMap:rootCallMap});
var writer=new (require('RelayRecordWriter'))(records,rootCallMap,false);
var tracker=new (require('RelayQueryTracker'))();


var payload={
viewer:{
newsFeed:babelHelpers.defineProperty({
edges:[
{
cursor:'c1',
node:{
id:'s1',
__typename:'Story'}},


{
cursor:'c2',
node:{
id:'s2',
__typename:'Story'}},


{
cursor:'c3',
node:{
id:'s3',
__typename:'Story'}}]},



PAGE_INFO,(_PAGE_INFO2={},babelHelpers.defineProperty(_PAGE_INFO2,
HAS_NEXT_PAGE,true),babelHelpers.defineProperty(_PAGE_INFO2,
HAS_PREV_PAGE,false),_PAGE_INFO2))}};




var query=getNode(function(){return {children:[{calls:[{kind:'Call',metadata:{},name:'first',value:{kind:'CallValue',callValue:'5'}}],children:[{children:[{children:[{fieldName:'id',kind:'Field',metadata:{isRequisite:true},type:'ID'},{fieldName:'__typename',kind:'Field',metadata:{isGenerated:true,isRequisite:true},type:'String'}],fieldName:'node',kind:'Field',metadata:{canHaveSubselections:true,isAbstract:true,isRequisite:true},type:'FeedUnit'},{fieldName:'cursor',kind:'Field',metadata:{isGenerated:true,isRequisite:true},type:'String'}],fieldName:'edges',kind:'Field',metadata:{canHaveSubselections:true,isPlural:true},type:'NewsFeedEdge'},{children:[{fieldName:'hasNextPage',kind:'Field',metadata:{isGenerated:true,isRequisite:true},type:'Boolean'},{fieldName:'hasPreviousPage',kind:'Field',metadata:{isGenerated:true,isRequisite:true},type:'Boolean'}],fieldName:'pageInfo',kind:'Field',metadata:{canHaveSubselections:true,isGenerated:true,isRequisite:true},type:'PageInfo'}],fieldName:'newsFeed',kind:'Field',metadata:{canHaveSubselections:true,isConnection:true,isFindable:true},type:'NewsFeedConnection'}],fieldName:'viewer',kind:'Query',metadata:{},name:'DiffRelayQuery_connection',type:'Viewer'};}());












writePayload(store,writer,query,payload,tracker);


var diffQueries=require('diffRelayQuery')(query,store,tracker);
expect(diffQueries.length).toBe(1);
expect(diffQueries[0]).toEqualQueryRoot(getNode(function(){return {children:[{calls:[{kind:'Call',metadata:{},name:'after',value:{kind:'CallValue',callValue:'c3'}},{kind:'Call',metadata:{},name:'first',value:{kind:'CallVariable',callVariableName:'count'}}],children:[{children:[{children:[{fieldName:'id',kind:'Field',metadata:{isRequisite:true},type:'ID'},{fieldName:'__typename',kind:'Field',metadata:{isGenerated:true,isRequisite:true},type:'String'}],fieldName:'node',kind:'Field',metadata:{canHaveSubselections:true,isAbstract:true,isRequisite:true},type:'FeedUnit'},{fieldName:'cursor',kind:'Field',metadata:{isGenerated:true,isRequisite:true},type:'String'}],fieldName:'edges',kind:'Field',metadata:{canHaveSubselections:true,isPlural:true},type:'NewsFeedEdge'},{children:[{fieldName:'hasNextPage',kind:'Field',metadata:{isGenerated:true,isRequisite:true},type:'Boolean'},{fieldName:'hasPreviousPage',kind:'Field',metadata:{isGenerated:true,isRequisite:true},type:'Boolean'}],fieldName:'pageInfo',kind:'Field',metadata:{canHaveSubselections:true,isGenerated:true,isRequisite:true},type:'PageInfo'}],fieldName:'newsFeed',kind:'Field',metadata:{canHaveSubselections:true,isConnection:true,isFindable:true},type:'NewsFeedConnection'}],fieldName:'viewer',kind:'Query',metadata:{},name:'DiffRelayQuery_connection',type:'Viewer'};}(),











{
count:2}));});



it('does not fetch missing `edges` data for generated `node` ids',function(){var _PAGE_INFO3;
var records={};
var store=new (require('RelayRecordStore'))({records:records},{rootCallMap:rootCallMap});
var writer=new (require('RelayRecordWriter'))(records,rootCallMap,false);
var tracker=new (require('RelayQueryTracker'))();


var writeQuery=getNode(function(){return {children:[{calls:[{kind:'Call',metadata:{},name:'first',value:{kind:'CallValue',callValue:'3'}}],children:[{children:[{children:[{children:[{fieldName:'text',kind:'Field',metadata:{},type:'String'}],fieldName:'message',kind:'Field',metadata:{canHaveSubselections:true},type:'Text'},{fieldName:'id',kind:'Field',metadata:{isGenerated:true,isRequisite:true},type:'ID'},{fieldName:'__typename',kind:'Field',metadata:{isGenerated:true,isRequisite:true},type:'String'}],fieldName:'node',kind:'Field',metadata:{canHaveSubselections:true,isAbstract:true,isRequisite:true},type:'FeedUnit'},{fieldName:'cursor',kind:'Field',metadata:{isGenerated:true,isRequisite:true},type:'String'}],fieldName:'edges',kind:'Field',metadata:{canHaveSubselections:true,isPlural:true},type:'NewsFeedEdge'},{children:[{fieldName:'hasNextPage',kind:'Field',metadata:{isGenerated:true,isRequisite:true},type:'Boolean'},{fieldName:'hasPreviousPage',kind:'Field',metadata:{isGenerated:true,isRequisite:true},type:'Boolean'}],fieldName:'pageInfo',kind:'Field',metadata:{canHaveSubselections:true,isGenerated:true,isRequisite:true},type:'PageInfo'}],fieldName:'newsFeed',kind:'Field',metadata:{canHaveSubselections:true,isConnection:true,isFindable:true},type:'NewsFeedConnection'}],fieldName:'viewer',kind:'Query',metadata:{},name:'DiffRelayQuery_connection',type:'Viewer'};}());














var payload={
viewer:{
newsFeed:babelHelpers.defineProperty({
edges:[
{
cursor:'c1',
node:{
__typename:'Story',
message:{text:'s1'}}},


{
cursor:'c2',
node:{
__typename:'Story',
message:{text:'s2'}}},


{
cursor:'c3',
node:{
__typename:'Story',
message:{text:'s3'}}}]},



PAGE_INFO,(_PAGE_INFO3={},babelHelpers.defineProperty(_PAGE_INFO3,
HAS_NEXT_PAGE,true),babelHelpers.defineProperty(_PAGE_INFO3,
HAS_PREV_PAGE,false),_PAGE_INFO3))}};




writePayload(store,writer,writeQuery,payload,tracker);


var fetchQueryA=getNode(function(){return {children:[{calls:[{kind:'Call',metadata:{},name:'first',value:{kind:'CallValue',callValue:'3'}}],children:[{children:[{children:[{children:[{fieldName:'id',kind:'Field',metadata:{isRequisite:true},type:'ID'}],fieldName:'feedback',kind:'Field',metadata:{canHaveSubselections:true,inferredRootCallName:'node',inferredPrimaryKey:'id'},type:'Feedback'},{fieldName:'id',kind:'Field',metadata:{isGenerated:true,isRequisite:true},type:'ID'},{fieldName:'__typename',kind:'Field',metadata:{isGenerated:true,isRequisite:true},type:'String'}],fieldName:'node',kind:'Field',metadata:{canHaveSubselections:true,isAbstract:true,isRequisite:true},type:'FeedUnit'},{fieldName:'cursor',kind:'Field',metadata:{isGenerated:true,isRequisite:true},type:'String'}],fieldName:'edges',kind:'Field',metadata:{canHaveSubselections:true,isPlural:true},type:'NewsFeedEdge'},{children:[{fieldName:'hasNextPage',kind:'Field',metadata:{isGenerated:true,isRequisite:true},type:'Boolean'},{fieldName:'hasPreviousPage',kind:'Field',metadata:{isGenerated:true,isRequisite:true},type:'Boolean'}],fieldName:'pageInfo',kind:'Field',metadata:{canHaveSubselections:true,isGenerated:true,isRequisite:true},type:'PageInfo'}],fieldName:'newsFeed',kind:'Field',metadata:{isConnectionWithoutNodeID:true,canHaveSubselections:true,isConnection:true,isFindable:true},type:'NewsFeedConnection'}],fieldName:'viewer',kind:'Query',metadata:{},name:'DiffRelayQuery_connection',type:'Viewer'};}());














var diffQueries=require('diffRelayQuery')(fetchQueryA,store,tracker);
expect(diffQueries.length).toBe(0);
expect([
'RelayDiffQueryBuilder: Field `node` on connection `%s` cannot be '+
'retrieved if it does not have an `id` field. If you expect fields '+
'to be retrieved on this field, add an `id` field in the schema. '+
'If you choose to ignore this warning, you can silence it by '+
'adding `@relay(isConnectionWithoutNodeID: true)` to the '+
'connection field.',
'newsFeed']).
toBeWarnedNTimes(0);



var fetchQueryB=getNode(function(){return {children:[{calls:[{kind:'Call',metadata:{},name:'first',value:{kind:'CallValue',callValue:'3'}}],children:[{children:[{children:[{children:[{fieldName:'id',kind:'Field',metadata:{isRequisite:true},type:'ID'}],fieldName:'feedback',kind:'Field',metadata:{canHaveSubselections:true,inferredRootCallName:'node',inferredPrimaryKey:'id'},type:'Feedback'},{fieldName:'id',kind:'Field',metadata:{isGenerated:true,isRequisite:true},type:'ID'},{fieldName:'__typename',kind:'Field',metadata:{isGenerated:true,isRequisite:true},type:'String'}],fieldName:'node',kind:'Field',metadata:{canHaveSubselections:true,isAbstract:true,isRequisite:true},type:'FeedUnit'},{fieldName:'cursor',kind:'Field',metadata:{isGenerated:true,isRequisite:true},type:'String'}],fieldName:'edges',kind:'Field',metadata:{canHaveSubselections:true,isPlural:true},type:'NewsFeedEdge'},{children:[{fieldName:'hasNextPage',kind:'Field',metadata:{isGenerated:true,isRequisite:true},type:'Boolean'},{fieldName:'hasPreviousPage',kind:'Field',metadata:{isGenerated:true,isRequisite:true},type:'Boolean'}],fieldName:'pageInfo',kind:'Field',metadata:{canHaveSubselections:true,isGenerated:true,isRequisite:true},type:'PageInfo'}],fieldName:'newsFeed',kind:'Field',metadata:{canHaveSubselections:true,isConnection:true,isFindable:true},type:'NewsFeedConnection'}],fieldName:'viewer',kind:'Query',metadata:{},name:'DiffRelayQuery_connection',type:'Viewer'};}());














require('diffRelayQuery')(fetchQueryB,store,tracker);

expect([
'RelayDiffQueryBuilder: Field `node` on connection `%s` cannot be '+
'retrieved if it does not have an `id` field. If you expect fields '+
'to be retrieved on this field, add an `id` field in the schema. '+
'If you choose to ignore this warning, you can silence it by '+
'adding `@relay(isConnectionWithoutNodeID: true)` to the '+
'connection field.',
'newsFeed']).
toBeWarnedNTimes(3);});


it('does not warn about unrefetchable `edges` when there is no missing data',function(){var _PAGE_INFO4;
var records={};
var store=new (require('RelayRecordStore'))({records:records},{rootCallMap:rootCallMap});
var writer=new (require('RelayRecordWriter'))(records,rootCallMap,false);
var tracker=new (require('RelayQueryTracker'))();


var writeQuery=getNode(function(){return {children:[{calls:[{kind:'Call',metadata:{},name:'first',value:{kind:'CallValue',callValue:'1'}}],children:[{children:[{children:[{children:[{fieldName:'text',kind:'Field',metadata:{},type:'String'}],fieldName:'message',kind:'Field',metadata:{canHaveSubselections:true},type:'Text'},{fieldName:'id',kind:'Field',metadata:{isGenerated:true,isRequisite:true},type:'ID'},{fieldName:'__typename',kind:'Field',metadata:{isGenerated:true,isRequisite:true},type:'String'}],fieldName:'node',kind:'Field',metadata:{canHaveSubselections:true,isAbstract:true,isRequisite:true},type:'FeedUnit'},{fieldName:'cursor',kind:'Field',metadata:{isGenerated:true,isRequisite:true},type:'String'}],fieldName:'edges',kind:'Field',metadata:{canHaveSubselections:true,isPlural:true},type:'NewsFeedEdge'},{children:[{fieldName:'hasNextPage',kind:'Field',metadata:{isGenerated:true,isRequisite:true},type:'Boolean'},{fieldName:'hasPreviousPage',kind:'Field',metadata:{isGenerated:true,isRequisite:true},type:'Boolean'}],fieldName:'pageInfo',kind:'Field',metadata:{canHaveSubselections:true,isGenerated:true,isRequisite:true},type:'PageInfo'}],fieldName:'newsFeed',kind:'Field',metadata:{canHaveSubselections:true,isConnection:true,isFindable:true},type:'NewsFeedConnection'}],fieldName:'viewer',kind:'Query',metadata:{},name:'DiffRelayQuery_connection',type:'Viewer'};}());














var payload={
viewer:{
newsFeed:babelHelpers.defineProperty({
edges:[
{
cursor:'c1',
node:{
__typename:'Story',
message:{text:'s1'}}}]},



PAGE_INFO,(_PAGE_INFO4={},babelHelpers.defineProperty(_PAGE_INFO4,
HAS_NEXT_PAGE,true),babelHelpers.defineProperty(_PAGE_INFO4,
HAS_PREV_PAGE,false),_PAGE_INFO4))}};




writePayload(store,writer,writeQuery,payload,tracker);



var fetchQuery=getNode(function(){return {children:[{calls:[{kind:'Call',metadata:{},name:'first',value:{kind:'CallValue',callValue:'1'}}],children:[{children:[{children:[{children:[{fieldName:'text',kind:'Field',metadata:{},type:'String'}],fieldName:'message',kind:'Field',metadata:{canHaveSubselections:true},type:'Text'},{fieldName:'id',kind:'Field',metadata:{isGenerated:true,isRequisite:true},type:'ID'},{fieldName:'__typename',kind:'Field',metadata:{isGenerated:true,isRequisite:true},type:'String'}],fieldName:'node',kind:'Field',metadata:{canHaveSubselections:true,isAbstract:true,isRequisite:true},type:'FeedUnit'},{fieldName:'cursor',kind:'Field',metadata:{isGenerated:true,isRequisite:true},type:'String'}],fieldName:'edges',kind:'Field',metadata:{canHaveSubselections:true,isPlural:true},type:'NewsFeedEdge'},{children:[{fieldName:'hasNextPage',kind:'Field',metadata:{isGenerated:true,isRequisite:true},type:'Boolean'},{fieldName:'hasPreviousPage',kind:'Field',metadata:{isGenerated:true,isRequisite:true},type:'Boolean'}],fieldName:'pageInfo',kind:'Field',metadata:{canHaveSubselections:true,isGenerated:true,isRequisite:true},type:'PageInfo'}],fieldName:'newsFeed',kind:'Field',metadata:{canHaveSubselections:true,isConnection:true,isFindable:true},type:'NewsFeedConnection'}],fieldName:'viewer',kind:'Query',metadata:{},name:'DiffRelayQuery_connection',type:'Viewer'};}());














var diffQueries=require('diffRelayQuery')(fetchQuery,store,tracker);
expect(diffQueries.length).toBe(0);
expect([
'RelayDiffQueryBuilder: Field `node` on connection `%s` cannot be '+
'retrieved if it does not have an `id` field. If you expect fields '+
'to be retrieved on this field, add an `id` field in the schema. '+
'If you choose to ignore this warning, you can silence it by '+
'adding `@relay(isConnectionWithoutNodeID: true)` to the '+
'connection field.',
'newsFeed']).
toBeWarnedNTimes(0);});


it('fetches split queries under unrefetchable `edges`',function(){var _PAGE_INFO5,_PAGE_INFO6;
var records={};
var store=new (require('RelayRecordStore'))({records:records},{rootCallMap:rootCallMap});
var writer=new (require('RelayRecordWriter'))(records,rootCallMap,false);
var tracker=new (require('RelayQueryTracker'))();


var writeQuery=getNode(function(){return {children:[{calls:[{kind:'Call',metadata:{},name:'first',value:{kind:'CallValue',callValue:'1'}}],children:[{children:[{children:[{children:[{fieldName:'id',kind:'Field',metadata:{isRequisite:true},type:'ID'},{calls:[{kind:'Call',metadata:{},name:'first',value:{kind:'CallValue',callValue:'1'}}],children:[{children:[{children:[{fieldName:'id',kind:'Field',metadata:{isRequisite:true},type:'ID'}],fieldName:'node',kind:'Field',metadata:{canHaveSubselections:true,inferredRootCallName:'node',inferredPrimaryKey:'id',isRequisite:true},type:'Comment'},{fieldName:'cursor',kind:'Field',metadata:{isGenerated:true,isRequisite:true},type:'String'}],fieldName:'edges',kind:'Field',metadata:{canHaveSubselections:true,isPlural:true},type:'CommentsEdge'},{children:[{fieldName:'hasNextPage',kind:'Field',metadata:{isGenerated:true,isRequisite:true},type:'Boolean'},{fieldName:'hasPreviousPage',kind:'Field',metadata:{isGenerated:true,isRequisite:true},type:'Boolean'}],fieldName:'pageInfo',kind:'Field',metadata:{canHaveSubselections:true,isGenerated:true,isRequisite:true},type:'PageInfo'}],fieldName:'comments',kind:'Field',metadata:{canHaveSubselections:true,isConnection:true},type:'CommentsConnection'}],fieldName:'feedback',kind:'Field',metadata:{canHaveSubselections:true,inferredRootCallName:'node',inferredPrimaryKey:'id'},type:'Feedback'},{fieldName:'id',kind:'Field',metadata:{isGenerated:true,isRequisite:true},type:'ID'},{fieldName:'__typename',kind:'Field',metadata:{isGenerated:true,isRequisite:true},type:'String'}],fieldName:'node',kind:'Field',metadata:{canHaveSubselections:true,isAbstract:true,isRequisite:true},type:'FeedUnit'},{fieldName:'cursor',kind:'Field',metadata:{isGenerated:true,isRequisite:true},type:'String'}],fieldName:'edges',kind:'Field',metadata:{canHaveSubselections:true,isPlural:true},type:'NewsFeedEdge'},{children:[{fieldName:'hasNextPage',kind:'Field',metadata:{isGenerated:true,isRequisite:true},type:'Boolean'},{fieldName:'hasPreviousPage',kind:'Field',metadata:{isGenerated:true,isRequisite:true},type:'Boolean'}],fieldName:'pageInfo',kind:'Field',metadata:{canHaveSubselections:true,isGenerated:true,isRequisite:true},type:'PageInfo'}],fieldName:'newsFeed',kind:'Field',metadata:{canHaveSubselections:true,isConnection:true,isFindable:true},type:'NewsFeedConnection'}],fieldName:'viewer',kind:'Query',metadata:{},name:'DiffRelayQuery_connection',type:'Viewer'};}());






















var payload={
viewer:{
newsFeed:babelHelpers.defineProperty({
edges:[
{
cursor:'c1',
node:{
__typename:'Story',
feedback:{
__typename:'Feedback',
id:'feedbackid',
comments:babelHelpers.defineProperty({
edges:[
{
cursor:'commentcurser1',
node:{
__typename:'Comment',
id:'commentid'}}]},



PAGE_INFO,(_PAGE_INFO5={},babelHelpers.defineProperty(_PAGE_INFO5,
HAS_NEXT_PAGE,true),babelHelpers.defineProperty(_PAGE_INFO5,
HAS_PREV_PAGE,false),_PAGE_INFO5))}}}]},






PAGE_INFO,(_PAGE_INFO6={},babelHelpers.defineProperty(_PAGE_INFO6,
HAS_NEXT_PAGE,true),babelHelpers.defineProperty(_PAGE_INFO6,
HAS_PREV_PAGE,false),_PAGE_INFO6))}};




writePayload(store,writer,writeQuery,payload,tracker);


var fetchQuery=getNode(function(){return {children:[{calls:[{kind:'Call',metadata:{},name:'first',value:{kind:'CallValue',callValue:'1'}}],children:[{children:[{children:[{children:[{fieldName:'id',kind:'Field',metadata:{isRequisite:true},type:'ID'},{calls:[{kind:'Call',metadata:{},name:'first',value:{kind:'CallValue',callValue:'1'}}],children:[{children:[{children:[{fieldName:'id',kind:'Field',metadata:{isRequisite:true},type:'ID'},{children:[{fieldName:'text',kind:'Field',metadata:{},type:'String'}],fieldName:'body',kind:'Field',metadata:{canHaveSubselections:true},type:'Text'}],fieldName:'node',kind:'Field',metadata:{canHaveSubselections:true,inferredRootCallName:'node',inferredPrimaryKey:'id',isRequisite:true},type:'Comment'},{fieldName:'cursor',kind:'Field',metadata:{isGenerated:true,isRequisite:true},type:'String'}],fieldName:'edges',kind:'Field',metadata:{canHaveSubselections:true,isPlural:true},type:'CommentsEdge'},{children:[{fieldName:'hasNextPage',kind:'Field',metadata:{isGenerated:true,isRequisite:true},type:'Boolean'},{fieldName:'hasPreviousPage',kind:'Field',metadata:{isGenerated:true,isRequisite:true},type:'Boolean'}],fieldName:'pageInfo',kind:'Field',metadata:{canHaveSubselections:true,isGenerated:true,isRequisite:true},type:'PageInfo'}],fieldName:'comments',kind:'Field',metadata:{canHaveSubselections:true,isConnection:true},type:'CommentsConnection'}],fieldName:'feedback',kind:'Field',metadata:{canHaveSubselections:true,inferredRootCallName:'node',inferredPrimaryKey:'id'},type:'Feedback'},{fieldName:'id',kind:'Field',metadata:{isGenerated:true,isRequisite:true},type:'ID'},{fieldName:'__typename',kind:'Field',metadata:{isGenerated:true,isRequisite:true},type:'String'}],fieldName:'node',kind:'Field',metadata:{canHaveSubselections:true,isAbstract:true,isRequisite:true},type:'FeedUnit'},{fieldName:'cursor',kind:'Field',metadata:{isGenerated:true,isRequisite:true},type:'String'}],fieldName:'edges',kind:'Field',metadata:{canHaveSubselections:true,isPlural:true},type:'NewsFeedEdge'},{children:[{fieldName:'hasNextPage',kind:'Field',metadata:{isGenerated:true,isRequisite:true},type:'Boolean'},{fieldName:'hasPreviousPage',kind:'Field',metadata:{isGenerated:true,isRequisite:true},type:'Boolean'}],fieldName:'pageInfo',kind:'Field',metadata:{canHaveSubselections:true,isGenerated:true,isRequisite:true},type:'PageInfo'}],fieldName:'newsFeed',kind:'Field',metadata:{canHaveSubselections:true,isConnection:true,isFindable:true},type:'NewsFeedConnection'}],fieldName:'viewer',kind:'Query',metadata:{},name:'DiffRelayQuery_connection',type:'Viewer'};}());






















var diffQueries=require('diffRelayQuery')(fetchQuery,store,tracker);
expect(diffQueries.length).toBe(1);
expect(diffQueries[0]).toEqualQueryRoot(getNode(function(){return {calls:[{kind:'Call',metadata:{type:'ID'},name:'id',value:{kind:'CallValue',callValue:'commentid'}}],children:[{fieldName:'__typename',kind:'Field',metadata:{isRequisite:true},type:'String'},{fieldName:'id',kind:'Field',metadata:{isGenerated:true,isRequisite:true},type:'ID'},{children:[{fieldName:'id',kind:'Field',metadata:{isRequisite:true},type:'ID'},{children:[{fieldName:'text',kind:'Field',metadata:{},type:'String'}],fieldName:'body',kind:'Field',metadata:{canHaveSubselections:true},type:'Text'}],id:require('Relay').QL.__id(),kind:'Fragment',metadata:{},name:'Comment',type:'Comment'}],fieldName:'node',kind:'Query',metadata:{isAbstract:true,identifyingArgName:'id',identifyingArgType:'ID'},name:'DiffRelayQuery_connection',type:'Node'};}()));







expect([
'RelayDiffQueryBuilder: Field `node` on connection `%s` cannot be '+
'retrieved if it does not have an `id` field. If you expect fields '+
'to be retrieved on this field, add an `id` field in the schema. '+
'If you choose to ignore this warning, you can silence it by '+
'adding `@relay(isConnectionWithoutNodeID: true)` to the '+
'connection field.',
'newsFeed']).
toBeWarnedNTimes(0);});


it('fetches missing `node` data via a `node()` query',function(){var _PAGE_INFO7;
var records={};
var store=new (require('RelayRecordStore'))({records:records},{rootCallMap:rootCallMap});
var writer=new (require('RelayRecordWriter'))(records,rootCallMap,false);
var tracker=new (require('RelayQueryTracker'))();

var payload={
viewer:{
newsFeed:babelHelpers.defineProperty({
edges:[
{
cursor:'c1',
node:{
id:'s1',
__typename:'Story',
message:{text:'s1'}}},


{
cursor:'c2',
node:{
id:'s2',
__typename:'Story',
message:{text:'s2'}}},


{
cursor:'c3',
node:{
id:'s3',
__typename:'Story',
message:{text:'s3'}}}]},



PAGE_INFO,(_PAGE_INFO7={},babelHelpers.defineProperty(_PAGE_INFO7,
HAS_NEXT_PAGE,true),babelHelpers.defineProperty(_PAGE_INFO7,
HAS_PREV_PAGE,false),_PAGE_INFO7))}};




var writeQuery=getNode(function(){return {children:[{calls:[{kind:'Call',metadata:{},name:'first',value:{kind:'CallValue',callValue:'3'}}],children:[{children:[{children:[{children:[{fieldName:'text',kind:'Field',metadata:{},type:'String'}],fieldName:'message',kind:'Field',metadata:{canHaveSubselections:true},type:'Text'},{fieldName:'id',kind:'Field',metadata:{isGenerated:true,isRequisite:true},type:'ID'},{fieldName:'__typename',kind:'Field',metadata:{isGenerated:true,isRequisite:true},type:'String'}],fieldName:'node',kind:'Field',metadata:{canHaveSubselections:true,isAbstract:true,isRequisite:true},type:'FeedUnit'},{fieldName:'cursor',kind:'Field',metadata:{isGenerated:true,isRequisite:true},type:'String'}],fieldName:'edges',kind:'Field',metadata:{canHaveSubselections:true,isPlural:true},type:'NewsFeedEdge'},{children:[{fieldName:'hasNextPage',kind:'Field',metadata:{isGenerated:true,isRequisite:true},type:'Boolean'},{fieldName:'hasPreviousPage',kind:'Field',metadata:{isGenerated:true,isRequisite:true},type:'Boolean'}],fieldName:'pageInfo',kind:'Field',metadata:{canHaveSubselections:true,isGenerated:true,isRequisite:true},type:'PageInfo'}],fieldName:'newsFeed',kind:'Field',metadata:{canHaveSubselections:true,isConnection:true,isFindable:true},type:'NewsFeedConnection'}],fieldName:'viewer',kind:'Query',metadata:{},name:'DiffRelayQuery_connection',type:'Viewer'};}());














writePayload(store,writer,writeQuery,payload,tracker);


var fetchQuery=getNode(function(){return {children:[{calls:[{kind:'Call',metadata:{},name:'first',value:{kind:'CallValue',callValue:'3'}}],children:[{children:[{children:[{children:[{fieldName:'id',kind:'Field',metadata:{isRequisite:true},type:'ID'}],fieldName:'feedback',kind:'Field',metadata:{canHaveSubselections:true,inferredRootCallName:'node',inferredPrimaryKey:'id'},type:'Feedback'},{fieldName:'id',kind:'Field',metadata:{isGenerated:true,isRequisite:true},type:'ID'},{fieldName:'__typename',kind:'Field',metadata:{isGenerated:true,isRequisite:true},type:'String'}],fieldName:'node',kind:'Field',metadata:{canHaveSubselections:true,isAbstract:true,isRequisite:true},type:'FeedUnit'},{fieldName:'cursor',kind:'Field',metadata:{isGenerated:true,isRequisite:true},type:'String'}],fieldName:'edges',kind:'Field',metadata:{canHaveSubselections:true,isPlural:true},type:'NewsFeedEdge'},{children:[{fieldName:'hasNextPage',kind:'Field',metadata:{isGenerated:true,isRequisite:true},type:'Boolean'},{fieldName:'hasPreviousPage',kind:'Field',metadata:{isGenerated:true,isRequisite:true},type:'Boolean'}],fieldName:'pageInfo',kind:'Field',metadata:{canHaveSubselections:true,isGenerated:true,isRequisite:true},type:'PageInfo'}],fieldName:'newsFeed',kind:'Field',metadata:{canHaveSubselections:true,isConnection:true,isFindable:true},type:'NewsFeedConnection'}],fieldName:'viewer',kind:'Query',metadata:{},name:'DiffRelayQuery_connection',type:'Viewer'};}());














var diffQueries=require('diffRelayQuery')(fetchQuery,store,tracker);
expect(diffQueries.length).toBe(3);
expect(diffQueries[0]).toEqualQueryRoot(getVerbatimNode(function(){return {calls:[{kind:'Call',metadata:{type:'ID'},name:'id',value:{kind:'CallValue',callValue:'s1'}}],children:[{fieldName:'id',kind:'Field',metadata:{isRequisite:true},type:'ID'},{fieldName:'__typename',kind:'Field',metadata:{isRequisite:true},type:'String'},{children:[{children:[{fieldName:'id',kind:'Field',metadata:{isRequisite:true},type:'ID'}],fieldName:'feedback',kind:'Field',metadata:{canHaveSubselections:true,inferredRootCallName:'node',inferredPrimaryKey:'id'},type:'Feedback'},{fieldName:'id',kind:'Field',metadata:{isRequisite:true},type:'ID'},{fieldName:'__typename',kind:'Field',metadata:{isRequisite:true},type:'String'}],id:require('Relay').QL.__id(),kind:'Fragment',metadata:{isAbstract:true},name:'FeedUnit',type:'FeedUnit'}],fieldName:'node',kind:'Query',metadata:{isAbstract:true,identifyingArgName:'id',identifyingArgType:'ID'},name:'DiffRelayQuery_connection',type:'Node'};}()));














expect(diffQueries[1]).toEqualQueryRoot(getVerbatimNode(function(){return {calls:[{kind:'Call',metadata:{type:'ID'},name:'id',value:{kind:'CallValue',callValue:'s2'}}],children:[{fieldName:'id',kind:'Field',metadata:{isRequisite:true},type:'ID'},{fieldName:'__typename',kind:'Field',metadata:{isRequisite:true},type:'String'},{children:[{children:[{fieldName:'id',kind:'Field',metadata:{isRequisite:true},type:'ID'}],fieldName:'feedback',kind:'Field',metadata:{canHaveSubselections:true,inferredRootCallName:'node',inferredPrimaryKey:'id'},type:'Feedback'},{fieldName:'id',kind:'Field',metadata:{isRequisite:true},type:'ID'},{fieldName:'__typename',kind:'Field',metadata:{isRequisite:true},type:'String'}],id:require('Relay').QL.__id(),kind:'Fragment',metadata:{isAbstract:true},name:'FeedUnit',type:'FeedUnit'}],fieldName:'node',kind:'Query',metadata:{isAbstract:true,identifyingArgName:'id',identifyingArgType:'ID'},name:'DiffRelayQuery_connection',type:'Node'};}()));














expect(diffQueries[2]).toEqualQueryRoot(getVerbatimNode(function(){return {calls:[{kind:'Call',metadata:{type:'ID'},name:'id',value:{kind:'CallValue',callValue:'s3'}}],children:[{fieldName:'id',kind:'Field',metadata:{isRequisite:true},type:'ID'},{fieldName:'__typename',kind:'Field',metadata:{isRequisite:true},type:'String'},{children:[{children:[{fieldName:'id',kind:'Field',metadata:{isRequisite:true},type:'ID'}],fieldName:'feedback',kind:'Field',metadata:{canHaveSubselections:true,inferredRootCallName:'node',inferredPrimaryKey:'id'},type:'Feedback'},{fieldName:'id',kind:'Field',metadata:{isRequisite:true},type:'ID'},{fieldName:'__typename',kind:'Field',metadata:{isRequisite:true},type:'String'}],id:require('Relay').QL.__id(),kind:'Fragment',metadata:{isAbstract:true},name:'FeedUnit',type:'FeedUnit'}],fieldName:'node',kind:'Query',metadata:{isAbstract:true,identifyingArgName:'id',identifyingArgType:'ID'},name:'DiffRelayQuery_connection',type:'Node'};}()));});
















it('fetches missing `node` data via a `node()` query and missing `edges` '+
'data via a `connection.find()` query if connection is findable',function(){var _PAGE_INFO8;
var records={};
var store=new (require('RelayRecordStore'))({records:records},{rootCallMap:rootCallMap});
var writer=new (require('RelayRecordWriter'))(records,rootCallMap,false);
var tracker=new (require('RelayQueryTracker'))();

var payload={
viewer:{
newsFeed:babelHelpers.defineProperty({
edges:[
{
cursor:'c1',
node:{
id:'s1',
__typename:'Story',
message:{text:'s1'}}},


{
cursor:'c2',
node:{
id:'s2',
__typename:'Story',
message:{text:'s2'}}},


{
cursor:'c3',
node:{
id:'s3',
__typename:'Story',
message:{text:'s3'}}}]},



PAGE_INFO,(_PAGE_INFO8={},babelHelpers.defineProperty(_PAGE_INFO8,
HAS_NEXT_PAGE,true),babelHelpers.defineProperty(_PAGE_INFO8,
HAS_PREV_PAGE,false),_PAGE_INFO8))}};




var writeQuery=getNode(function(){return {children:[{calls:[{kind:'Call',metadata:{},name:'first',value:{kind:'CallValue',callValue:'3'}}],children:[{children:[{children:[{children:[{fieldName:'text',kind:'Field',metadata:{},type:'String'}],fieldName:'message',kind:'Field',metadata:{canHaveSubselections:true},type:'Text'},{fieldName:'id',kind:'Field',metadata:{isGenerated:true,isRequisite:true},type:'ID'},{fieldName:'__typename',kind:'Field',metadata:{isGenerated:true,isRequisite:true},type:'String'}],fieldName:'node',kind:'Field',metadata:{canHaveSubselections:true,isAbstract:true,isRequisite:true},type:'FeedUnit'},{fieldName:'cursor',kind:'Field',metadata:{isGenerated:true,isRequisite:true},type:'String'}],fieldName:'edges',kind:'Field',metadata:{canHaveSubselections:true,isPlural:true},type:'NewsFeedEdge'},{children:[{fieldName:'hasNextPage',kind:'Field',metadata:{isGenerated:true,isRequisite:true},type:'Boolean'},{fieldName:'hasPreviousPage',kind:'Field',metadata:{isGenerated:true,isRequisite:true},type:'Boolean'}],fieldName:'pageInfo',kind:'Field',metadata:{canHaveSubselections:true,isGenerated:true,isRequisite:true},type:'PageInfo'}],fieldName:'newsFeed',kind:'Field',metadata:{canHaveSubselections:true,isConnection:true,isFindable:true},type:'NewsFeedConnection'}],fieldName:'viewer',kind:'Query',metadata:{},name:'DiffRelayQuery_connection',type:'Viewer'};}());














writePayload(store,writer,writeQuery,payload,tracker);



var fetchQuery=getNode(function(){return {children:[{calls:[{kind:'Call',metadata:{},name:'first',value:{kind:'CallValue',callValue:'3'}}],children:[{children:[{fieldName:'sortKey',kind:'Field',metadata:{},type:'String'},{children:[{fieldName:'id',kind:'Field',metadata:{isRequisite:true},type:'ID'},{fieldName:'__typename',kind:'Field',metadata:{isRequisite:true},type:'String'},{children:[{fieldName:'id',kind:'Field',metadata:{isRequisite:true},type:'ID'}],fieldName:'feedback',kind:'Field',metadata:{canHaveSubselections:true,inferredRootCallName:'node',inferredPrimaryKey:'id'},type:'Feedback'}],fieldName:'node',kind:'Field',metadata:{canHaveSubselections:true,isAbstract:true,isRequisite:true},type:'FeedUnit'},{fieldName:'cursor',kind:'Field',metadata:{isGenerated:true,isRequisite:true},type:'String'}],fieldName:'edges',kind:'Field',metadata:{canHaveSubselections:true,isPlural:true},type:'NewsFeedEdge'},{children:[{fieldName:'hasNextPage',kind:'Field',metadata:{isGenerated:true,isRequisite:true},type:'Boolean'},{fieldName:'hasPreviousPage',kind:'Field',metadata:{isGenerated:true,isRequisite:true},type:'Boolean'}],fieldName:'pageInfo',kind:'Field',metadata:{canHaveSubselections:true,isGenerated:true,isRequisite:true},type:'PageInfo'}],fieldName:'newsFeed',kind:'Field',metadata:{canHaveSubselections:true,isConnection:true,isFindable:true},type:'NewsFeedConnection'}],fieldName:'viewer',kind:'Query',metadata:{},name:'DiffRelayQuery_connection',type:'Viewer'};}());

















var diffQueries=require('diffRelayQuery')(fetchQuery,store,tracker);
expect(diffQueries.length).toBe(6);
expect(diffQueries[0]).toEqualQueryRoot(getVerbatimNode(function(){return {calls:[{kind:'Call',metadata:{type:'ID'},name:'id',value:{kind:'CallValue',callValue:'s1'}}],children:[{fieldName:'id',kind:'Field',metadata:{isRequisite:true},type:'ID'},{fieldName:'__typename',kind:'Field',metadata:{isRequisite:true},type:'String'},{children:[{children:[{fieldName:'id',kind:'Field',metadata:{isRequisite:true},type:'ID'}],fieldName:'feedback',kind:'Field',metadata:{canHaveSubselections:true,inferredRootCallName:'node',inferredPrimaryKey:'id'},type:'Feedback'},{fieldName:'id',kind:'Field',metadata:{isRequisite:true},type:'ID'},{fieldName:'__typename',kind:'Field',metadata:{isRequisite:true},type:'String'}],id:require('Relay').QL.__id(),kind:'Fragment',metadata:{isAbstract:true},name:'FeedUnit',type:'FeedUnit'}],fieldName:'node',kind:'Query',metadata:{isAbstract:true,identifyingArgName:'id',identifyingArgType:'ID'},name:'DiffRelayQuery_connection',type:'Node'};}()));














expect(diffQueries[1]).toEqualQueryRoot(getVerbatimNode(function(){return {children:[{calls:[{kind:'Call',metadata:{},name:'find',value:{kind:'CallValue',callValue:'s1'}}],children:[{children:[{fieldName:'cursor',kind:'Field',metadata:{isRequisite:true},type:'String'},{children:[{fieldName:'id',kind:'Field',metadata:{isRequisite:true},type:'ID'},{fieldName:'__typename',kind:'Field',metadata:{isRequisite:true},type:'String'}],fieldName:'node',kind:'Field',metadata:{canHaveSubselections:true,isAbstract:true,isRequisite:true},type:'FeedUnit'},{fieldName:'sortKey',kind:'Field',metadata:{},type:'String'}],fieldName:'edges',kind:'Field',metadata:{canHaveSubselections:true,isPlural:true},type:'NewsFeedEdge'},{children:[{fieldName:'hasNextPage',kind:'Field',metadata:{isGenerated:true,isRequisite:true},type:'Boolean'},{fieldName:'hasPreviousPage',kind:'Field',metadata:{isGenerated:true,isRequisite:true},type:'Boolean'}],fieldName:'pageInfo',kind:'Field',metadata:{canHaveSubselections:true,isGenerated:true,isRequisite:true},type:'PageInfo'}],fieldName:'newsFeed',kind:'Field',metadata:{canHaveSubselections:true,isConnection:true,isFindable:true},type:'NewsFeedConnection'}],fieldName:'viewer',kind:'Query',metadata:{},name:'DiffRelayQuery_connection',type:'Viewer'};}()));















expect(diffQueries[2]).toEqualQueryRoot(getVerbatimNode(function(){return {calls:[{kind:'Call',metadata:{type:'ID'},name:'id',value:{kind:'CallValue',callValue:'s2'}}],children:[{fieldName:'id',kind:'Field',metadata:{isRequisite:true},type:'ID'},{fieldName:'__typename',kind:'Field',metadata:{isRequisite:true},type:'String'},{children:[{children:[{fieldName:'id',kind:'Field',metadata:{isRequisite:true},type:'ID'}],fieldName:'feedback',kind:'Field',metadata:{canHaveSubselections:true,inferredRootCallName:'node',inferredPrimaryKey:'id'},type:'Feedback'},{fieldName:'id',kind:'Field',metadata:{isRequisite:true},type:'ID'},{fieldName:'__typename',kind:'Field',metadata:{isRequisite:true},type:'String'}],id:require('Relay').QL.__id(),kind:'Fragment',metadata:{isAbstract:true},name:'FeedUnit',type:'FeedUnit'}],fieldName:'node',kind:'Query',metadata:{isAbstract:true,identifyingArgName:'id',identifyingArgType:'ID'},name:'DiffRelayQuery_connection',type:'Node'};}()));














expect(diffQueries[3]).toEqualQueryRoot(getVerbatimNode(function(){return {children:[{calls:[{kind:'Call',metadata:{},name:'find',value:{kind:'CallValue',callValue:'s2'}}],children:[{children:[{fieldName:'cursor',kind:'Field',metadata:{isRequisite:true},type:'String'},{children:[{fieldName:'id',kind:'Field',metadata:{isRequisite:true},type:'ID'},{fieldName:'__typename',kind:'Field',metadata:{isRequisite:true},type:'String'}],fieldName:'node',kind:'Field',metadata:{canHaveSubselections:true,isAbstract:true,isRequisite:true},type:'FeedUnit'},{fieldName:'sortKey',kind:'Field',metadata:{},type:'String'}],fieldName:'edges',kind:'Field',metadata:{canHaveSubselections:true,isPlural:true},type:'NewsFeedEdge'},{children:[{fieldName:'hasNextPage',kind:'Field',metadata:{isGenerated:true,isRequisite:true},type:'Boolean'},{fieldName:'hasPreviousPage',kind:'Field',metadata:{isGenerated:true,isRequisite:true},type:'Boolean'}],fieldName:'pageInfo',kind:'Field',metadata:{canHaveSubselections:true,isGenerated:true,isRequisite:true},type:'PageInfo'}],fieldName:'newsFeed',kind:'Field',metadata:{canHaveSubselections:true,isConnection:true,isFindable:true},type:'NewsFeedConnection'}],fieldName:'viewer',kind:'Query',metadata:{},name:'DiffRelayQuery_connection',type:'Viewer'};}()));















expect(diffQueries[4]).toEqualQueryRoot(getVerbatimNode(function(){return {calls:[{kind:'Call',metadata:{type:'ID'},name:'id',value:{kind:'CallValue',callValue:'s3'}}],children:[{fieldName:'id',kind:'Field',metadata:{isRequisite:true},type:'ID'},{fieldName:'__typename',kind:'Field',metadata:{isRequisite:true},type:'String'},{children:[{children:[{fieldName:'id',kind:'Field',metadata:{isRequisite:true},type:'ID'}],fieldName:'feedback',kind:'Field',metadata:{canHaveSubselections:true,inferredRootCallName:'node',inferredPrimaryKey:'id'},type:'Feedback'},{fieldName:'id',kind:'Field',metadata:{isRequisite:true},type:'ID'},{fieldName:'__typename',kind:'Field',metadata:{isRequisite:true},type:'String'}],id:require('Relay').QL.__id(),kind:'Fragment',metadata:{isAbstract:true},name:'FeedUnit',type:'FeedUnit'}],fieldName:'node',kind:'Query',metadata:{isAbstract:true,identifyingArgName:'id',identifyingArgType:'ID'},name:'DiffRelayQuery_connection',type:'Node'};}()));














expect(diffQueries[5]).toEqualQueryRoot(getVerbatimNode(function(){return {children:[{calls:[{kind:'Call',metadata:{},name:'find',value:{kind:'CallValue',callValue:'s3'}}],children:[{children:[{fieldName:'cursor',kind:'Field',metadata:{isRequisite:true},type:'String'},{children:[{fieldName:'id',kind:'Field',metadata:{isRequisite:true},type:'ID'},{fieldName:'__typename',kind:'Field',metadata:{isRequisite:true},type:'String'}],fieldName:'node',kind:'Field',metadata:{canHaveSubselections:true,isAbstract:true,isRequisite:true},type:'FeedUnit'},{fieldName:'sortKey',kind:'Field',metadata:{},type:'String'}],fieldName:'edges',kind:'Field',metadata:{canHaveSubselections:true,isPlural:true},type:'NewsFeedEdge'},{children:[{fieldName:'hasNextPage',kind:'Field',metadata:{isGenerated:true,isRequisite:true},type:'Boolean'},{fieldName:'hasPreviousPage',kind:'Field',metadata:{isGenerated:true,isRequisite:true},type:'Boolean'}],fieldName:'pageInfo',kind:'Field',metadata:{canHaveSubselections:true,isGenerated:true,isRequisite:true},type:'PageInfo'}],fieldName:'newsFeed',kind:'Field',metadata:{canHaveSubselections:true,isConnection:true,isFindable:true},type:'NewsFeedConnection'}],fieldName:'viewer',kind:'Query',metadata:{},name:'DiffRelayQuery_connection',type:'Viewer'};}()));

















var typeField=diffQueries[5].
getFieldByStorageKey('newsFeed').
getFieldByStorageKey('edges').
getFieldByStorageKey('node').
getFieldByStorageKey('__typename');
expect(typeField).toBeTruthy();});


it('fetches missing `node` data via a `node()` query and warns about '+
'unfetchable `edges` data if connection is not findable',function(){var _PAGE_INFO9;
var records={};
var store=new (require('RelayRecordStore'))({records:records},{rootCallMap:rootCallMap});
var writer=new (require('RelayRecordWriter'))(records,rootCallMap,false);
var tracker=new (require('RelayQueryTracker'))();

var payload={
viewer:{
notificationStories:babelHelpers.defineProperty({
edges:[
{
cursor:'c1',
node:{
id:'s1',
__typename:'Story',
message:{text:'s1'}}},


{
cursor:'c2',
node:{
id:'s2',
__typename:'Story',
message:{text:'s2'}}},


{
cursor:'c3',
node:{
id:'s3',
__typename:'Story',
message:{text:'s3'}}}]},



PAGE_INFO,(_PAGE_INFO9={},babelHelpers.defineProperty(_PAGE_INFO9,
HAS_NEXT_PAGE,true),babelHelpers.defineProperty(_PAGE_INFO9,
HAS_PREV_PAGE,false),_PAGE_INFO9))}};




var writeQuery=getNode(function(){return {children:[{calls:[{kind:'Call',metadata:{},name:'first',value:{kind:'CallValue',callValue:'3'}}],children:[{children:[{children:[{children:[{fieldName:'text',kind:'Field',metadata:{},type:'String'}],fieldName:'message',kind:'Field',metadata:{canHaveSubselections:true},type:'Text'},{fieldName:'id',kind:'Field',metadata:{isGenerated:true,isRequisite:true},type:'ID'},{fieldName:'__typename',kind:'Field',metadata:{isGenerated:true,isRequisite:true},type:'String'}],fieldName:'node',kind:'Field',metadata:{canHaveSubselections:true,isAbstract:true,isRequisite:true},type:'FeedUnit'},{fieldName:'cursor',kind:'Field',metadata:{isGenerated:true,isRequisite:true},type:'String'}],fieldName:'edges',kind:'Field',metadata:{canHaveSubselections:true,isPlural:true},type:'NewsFeedEdge'},{children:[{fieldName:'hasNextPage',kind:'Field',metadata:{isGenerated:true,isRequisite:true},type:'Boolean'},{fieldName:'hasPreviousPage',kind:'Field',metadata:{isGenerated:true,isRequisite:true},type:'Boolean'}],fieldName:'pageInfo',kind:'Field',metadata:{canHaveSubselections:true,isGenerated:true,isRequisite:true},type:'PageInfo'}],fieldName:'notificationStories',kind:'Field',metadata:{canHaveSubselections:true,isConnection:true},type:'NewsFeedConnection'}],fieldName:'viewer',kind:'Query',metadata:{},name:'DiffRelayQuery_connection',type:'Viewer'};}());














writePayload(store,writer,writeQuery,payload,tracker);




var fetchQuery=getNode(function(){return {children:[{calls:[{kind:'Call',metadata:{},name:'first',value:{kind:'CallValue',callValue:'3'}}],children:[{children:[{fieldName:'showBeeper',kind:'Field',metadata:{},type:'Boolean'},{children:[{children:[{fieldName:'id',kind:'Field',metadata:{isRequisite:true},type:'ID'}],fieldName:'feedback',kind:'Field',metadata:{canHaveSubselections:true,inferredRootCallName:'node',inferredPrimaryKey:'id'},type:'Feedback'},{fieldName:'id',kind:'Field',metadata:{isGenerated:true,isRequisite:true},type:'ID'},{fieldName:'__typename',kind:'Field',metadata:{isGenerated:true,isRequisite:true},type:'String'}],fieldName:'node',kind:'Field',metadata:{canHaveSubselections:true,isAbstract:true,isRequisite:true},type:'FeedUnit'},{fieldName:'cursor',kind:'Field',metadata:{isGenerated:true,isRequisite:true},type:'String'}],fieldName:'edges',kind:'Field',metadata:{canHaveSubselections:true,isPlural:true},type:'NewsFeedEdge'},{children:[{fieldName:'hasNextPage',kind:'Field',metadata:{isGenerated:true,isRequisite:true},type:'Boolean'},{fieldName:'hasPreviousPage',kind:'Field',metadata:{isGenerated:true,isRequisite:true},type:'Boolean'}],fieldName:'pageInfo',kind:'Field',metadata:{canHaveSubselections:true,isGenerated:true,isRequisite:true},type:'PageInfo'}],fieldName:'notificationStories',kind:'Field',metadata:{canHaveSubselections:true,isConnection:true},type:'NewsFeedConnection'}],fieldName:'viewer',kind:'Query',metadata:{},name:'DiffRelayQuery_connection',type:'Viewer'};}());















var diffQueries=require('diffRelayQuery')(fetchQuery,store,tracker);
expect(diffQueries.length).toBe(3);
expect(diffQueries[0]).toEqualQueryRoot(getVerbatimNode(function(){return {calls:[{kind:'Call',metadata:{type:'ID'},name:'id',value:{kind:'CallValue',callValue:'s1'}}],children:[{fieldName:'id',kind:'Field',metadata:{isRequisite:true},type:'ID'},{fieldName:'__typename',kind:'Field',metadata:{isRequisite:true},type:'String'},{children:[{children:[{fieldName:'id',kind:'Field',metadata:{isRequisite:true},type:'ID'}],fieldName:'feedback',kind:'Field',metadata:{canHaveSubselections:true,inferredRootCallName:'node',inferredPrimaryKey:'id'},type:'Feedback'},{fieldName:'id',kind:'Field',metadata:{isRequisite:true},type:'ID'},{fieldName:'__typename',kind:'Field',metadata:{isRequisite:true},type:'String'}],id:require('Relay').QL.__id(),kind:'Fragment',metadata:{isAbstract:true},name:'FeedUnit',type:'FeedUnit'}],fieldName:'node',kind:'Query',metadata:{isAbstract:true,identifyingArgName:'id',identifyingArgType:'ID'},name:'DiffRelayQuery_connection',type:'Node'};}()));














expect(diffQueries[1]).toEqualQueryRoot(getVerbatimNode(function(){return {calls:[{kind:'Call',metadata:{type:'ID'},name:'id',value:{kind:'CallValue',callValue:'s2'}}],children:[{fieldName:'id',kind:'Field',metadata:{isRequisite:true},type:'ID'},{fieldName:'__typename',kind:'Field',metadata:{isRequisite:true},type:'String'},{children:[{children:[{fieldName:'id',kind:'Field',metadata:{isRequisite:true},type:'ID'}],fieldName:'feedback',kind:'Field',metadata:{canHaveSubselections:true,inferredRootCallName:'node',inferredPrimaryKey:'id'},type:'Feedback'},{fieldName:'id',kind:'Field',metadata:{isRequisite:true},type:'ID'},{fieldName:'__typename',kind:'Field',metadata:{isRequisite:true},type:'String'}],id:require('Relay').QL.__id(),kind:'Fragment',metadata:{isAbstract:true},name:'FeedUnit',type:'FeedUnit'}],fieldName:'node',kind:'Query',metadata:{isAbstract:true,identifyingArgName:'id',identifyingArgType:'ID'},name:'DiffRelayQuery_connection',type:'Node'};}()));














expect(diffQueries[2]).toEqualQueryRoot(getVerbatimNode(function(){return {calls:[{kind:'Call',metadata:{type:'ID'},name:'id',value:{kind:'CallValue',callValue:'s3'}}],children:[{fieldName:'id',kind:'Field',metadata:{isRequisite:true},type:'ID'},{fieldName:'__typename',kind:'Field',metadata:{isRequisite:true},type:'String'},{children:[{children:[{fieldName:'id',kind:'Field',metadata:{isRequisite:true},type:'ID'}],fieldName:'feedback',kind:'Field',metadata:{canHaveSubselections:true,inferredRootCallName:'node',inferredPrimaryKey:'id'},type:'Feedback'},{fieldName:'id',kind:'Field',metadata:{isRequisite:true},type:'ID'},{fieldName:'__typename',kind:'Field',metadata:{isRequisite:true},type:'String'}],id:require('Relay').QL.__id(),kind:'Fragment',metadata:{isAbstract:true},name:'FeedUnit',type:'FeedUnit'}],fieldName:'node',kind:'Query',metadata:{isAbstract:true,identifyingArgName:'id',identifyingArgType:'ID'},name:'DiffRelayQuery_connection',type:'Node'};}()));














expect([
'RelayDiffQueryBuilder: connection `edges{*}` fields can only be '+
'refetched if the connection supports the `find` call. Cannot '+
'refetch data for field `%s`.',
'notificationStories']).
toBeWarnedNTimes(3);});


it('does not flatten fragments when creating new root queries',function(){var _PAGE_INFO10;
var records={};
var store=new (require('RelayRecordStore'))({records:records},{rootCallMap:rootCallMap});
var writer=new (require('RelayRecordWriter'))(records,rootCallMap,false);
var tracker=new (require('RelayQueryTracker'))();

var payload={
viewer:{
newsFeed:babelHelpers.defineProperty({
edges:[
{cursor:'c1',node:{id:'s1',message:{text:'s1'}}}]},

PAGE_INFO,(_PAGE_INFO10={},babelHelpers.defineProperty(_PAGE_INFO10,
HAS_NEXT_PAGE,true),babelHelpers.defineProperty(_PAGE_INFO10,
HAS_PREV_PAGE,false),_PAGE_INFO10))}};




var writeQuery=getNode(function(){return {children:[{calls:[{kind:'Call',metadata:{},name:'first',value:{kind:'CallValue',callValue:'1'}}],children:[{children:[{children:[{children:[{fieldName:'text',kind:'Field',metadata:{},type:'String'}],fieldName:'message',kind:'Field',metadata:{canHaveSubselections:true},type:'Text'},{fieldName:'id',kind:'Field',metadata:{isGenerated:true,isRequisite:true},type:'ID'},{fieldName:'__typename',kind:'Field',metadata:{isGenerated:true,isRequisite:true},type:'String'}],fieldName:'node',kind:'Field',metadata:{canHaveSubselections:true,isAbstract:true,isRequisite:true},type:'FeedUnit'},{fieldName:'cursor',kind:'Field',metadata:{isGenerated:true,isRequisite:true},type:'String'}],fieldName:'edges',kind:'Field',metadata:{canHaveSubselections:true,isPlural:true},type:'NewsFeedEdge'},{children:[{fieldName:'hasNextPage',kind:'Field',metadata:{isGenerated:true,isRequisite:true},type:'Boolean'},{fieldName:'hasPreviousPage',kind:'Field',metadata:{isGenerated:true,isRequisite:true},type:'Boolean'}],fieldName:'pageInfo',kind:'Field',metadata:{canHaveSubselections:true,isGenerated:true,isRequisite:true},type:'PageInfo'}],fieldName:'newsFeed',kind:'Field',metadata:{canHaveSubselections:true,isConnection:true,isFindable:true},type:'NewsFeedConnection'}],fieldName:'viewer',kind:'Query',metadata:{},name:'DiffRelayQuery_connection',type:'Viewer'};}());














writePayload(store,writer,writeQuery,payload,tracker);



var edgeFragment=function(){return {children:[{fieldName:'sortKey',kind:'Field',metadata:{},type:'String'}],id:require('Relay').QL.__id(),kind:'Fragment',metadata:{},name:'DiffRelayQuery_connectionRelayQL',type:'NewsFeedEdge'};}();
var nodeFragment=function(){return {children:[{children:[{fieldName:'id',kind:'Field',metadata:{isRequisite:true},type:'ID'}],fieldName:'feedback',kind:'Field',metadata:{canHaveSubselections:true,inferredRootCallName:'node',inferredPrimaryKey:'id'},type:'Feedback'},{fieldName:'id',kind:'Field',metadata:{isGenerated:true,isRequisite:true},type:'ID'},{fieldName:'__typename',kind:'Field',metadata:{isGenerated:true,isRequisite:true},type:'String'}],id:require('Relay').QL.__id(),kind:'Fragment',metadata:{isAbstract:true},name:'DiffRelayQuery_connectionRelayQL',type:'FeedUnit'};}();
var fetchQuery=getNode(function(RQL_0,RQL_1){return {children:[{calls:[{kind:'Call',metadata:{},name:'first',value:{kind:'CallValue',callValue:'1'}}],children:[{children:[].concat.apply([],[{children:[].concat.apply([],[{fieldName:'id',kind:'Field',metadata:{isGenerated:true,isRequisite:true},type:'ID'},{fieldName:'__typename',kind:'Field',metadata:{isGenerated:true,isRequisite:true},type:'String'},require('Relay').QL.__frag(RQL_1)]),fieldName:'node',kind:'Field',metadata:{canHaveSubselections:true,isAbstract:true,isRequisite:true},type:'FeedUnit'},{fieldName:'cursor',kind:'Field',metadata:{isGenerated:true,isRequisite:true},type:'String'},require('Relay').QL.__frag(RQL_0)]),fieldName:'edges',kind:'Field',metadata:{canHaveSubselections:true,isPlural:true},type:'NewsFeedEdge'},{children:[{fieldName:'hasNextPage',kind:'Field',metadata:{isGenerated:true,isRequisite:true},type:'Boolean'},{fieldName:'hasPreviousPage',kind:'Field',metadata:{isGenerated:true,isRequisite:true},type:'Boolean'}],fieldName:'pageInfo',kind:'Field',metadata:{canHaveSubselections:true,isGenerated:true,isRequisite:true},type:'PageInfo'}],fieldName:'newsFeed',kind:'Field',metadata:{canHaveSubselections:true,isConnection:true,isFindable:true},type:'NewsFeedConnection'}],fieldName:'viewer',kind:'Query',metadata:{},name:'DiffRelayQuery_connection',type:'Viewer'};}(




edgeFragment,

nodeFragment));







var diffQueries=require('diffRelayQuery')(fetchQuery,store,tracker);
expect(diffQueries[0]).toContainQueryNode(getNode(nodeFragment));
expect(diffQueries[1]).toContainQueryNode(getNode(edgeFragment));});


it('tracks fragments for null connections',function(){
var records={};
var store=new (require('RelayRecordStore'))({records:records},{rootCallMap:rootCallMap});
var writer=new (require('RelayRecordWriter'))(records,rootCallMap,false);
var tracker=new (require('RelayQueryTracker'))();


var firstQuery=getNode(function(){return {children:[{calls:[{kind:'Call',metadata:{},name:'first',value:{kind:'CallValue',callValue:'3'}}],children:[{children:[{children:[{fieldName:'id',kind:'Field',metadata:{isRequisite:true},type:'ID'},{children:[{fieldName:'name',kind:'Field',metadata:{},type:'String'},{fieldName:'id',kind:'Field',metadata:{isGenerated:true,isRequisite:true},type:'ID'},{fieldName:'__typename',kind:'Field',metadata:{isGenerated:true,isRequisite:true},type:'String'}],fieldName:'actor',kind:'Field',metadata:{canHaveSubselections:true,inferredRootCallName:'node',inferredPrimaryKey:'id',isAbstract:true},type:'Actor'},{fieldName:'__typename',kind:'Field',metadata:{isGenerated:true,isRequisite:true},type:'String'}],fieldName:'node',kind:'Field',metadata:{canHaveSubselections:true,isAbstract:true,isRequisite:true},type:'FeedUnit'},{fieldName:'cursor',kind:'Field',metadata:{isGenerated:true,isRequisite:true},type:'String'}],fieldName:'edges',kind:'Field',metadata:{canHaveSubselections:true,isPlural:true},type:'NewsFeedEdge'},{children:[{fieldName:'hasNextPage',kind:'Field',metadata:{isGenerated:true,isRequisite:true},type:'Boolean'},{fieldName:'hasPreviousPage',kind:'Field',metadata:{isGenerated:true,isRequisite:true},type:'Boolean'}],fieldName:'pageInfo',kind:'Field',metadata:{canHaveSubselections:true,isGenerated:true,isRequisite:true},type:'PageInfo'}],fieldName:'newsFeed',kind:'Field',metadata:{canHaveSubselections:true,isConnection:true,isFindable:true},type:'NewsFeedConnection'}],fieldName:'viewer',kind:'Query',metadata:{},name:'DiffRelayQuery_connection',type:'Viewer'};}());
















var firstPayload={
viewer:{
newsFeed:null}};


writePayload(store,writer,firstQuery,firstPayload,tracker);
var trackedQueries=tracker.trackNodeForID.mock.calls;
expect(trackedQueries.length).toBe(1);
expect(trackedQueries[0][1]).toBe('client:1');
expect(trackedQueries[0][0]).toEqualQueryRoot(firstQuery);



var secondQuery=getNode(function(){return {children:[{calls:[{kind:'Call',metadata:{},name:'first',value:{kind:'CallValue',callValue:'3'}}],children:[{children:[{children:[{children:[{fieldName:'text',kind:'Field',metadata:{},type:'String'}],fieldName:'message',kind:'Field',metadata:{canHaveSubselections:true},type:'Text'},{fieldName:'id',kind:'Field',metadata:{isGenerated:true,isRequisite:true},type:'ID'},{fieldName:'__typename',kind:'Field',metadata:{isGenerated:true,isRequisite:true},type:'String'}],fieldName:'node',kind:'Field',metadata:{canHaveSubselections:true,isAbstract:true,isRequisite:true},type:'FeedUnit'},{fieldName:'cursor',kind:'Field',metadata:{isGenerated:true,isRequisite:true},type:'String'}],fieldName:'edges',kind:'Field',metadata:{canHaveSubselections:true,isPlural:true},type:'NewsFeedEdge'},{children:[{fieldName:'hasNextPage',kind:'Field',metadata:{isGenerated:true,isRequisite:true},type:'Boolean'},{fieldName:'hasPreviousPage',kind:'Field',metadata:{isGenerated:true,isRequisite:true},type:'Boolean'}],fieldName:'pageInfo',kind:'Field',metadata:{canHaveSubselections:true,isGenerated:true,isRequisite:true},type:'PageInfo'}],fieldName:'newsFeed',kind:'Field',metadata:{canHaveSubselections:true,isConnection:true,isFindable:true},type:'NewsFeedConnection'}],fieldName:'viewer',kind:'Query',metadata:{},name:'DiffRelayQuery_connection',type:'Viewer'};}());
















var diffQueries=require('diffRelayQuery')(secondQuery,store,tracker);
expect(diffQueries.length).toBe(0);


trackedQueries=tracker.trackNodeForID.mock.calls;
expect(trackedQueries.length).toBe(2);
expect(trackedQueries[1][1]).toBe('client:1');
expect(trackedQueries[1][0]).toEqualQueryRoot(secondQuery);});});