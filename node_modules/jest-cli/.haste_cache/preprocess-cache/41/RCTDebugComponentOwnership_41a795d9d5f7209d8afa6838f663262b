'use strict';

















var DebugComponentOwnershipModule=require('NativeModules').DebugComponentOwnershipModule;



function componentToString(component){
return component.getName?component.getName():'Unknown';}


function getRootTagForTag(tag){
var rootNodeID=require('ReactNativeTagHandles').tagToRootNodeID[tag];
if(!rootNodeID){
return null;}

var rootID=require('ReactNativeTagHandles').getNativeTopRootIDFromNodeID(rootNodeID);
if(!rootID){
return null;}

return require('ReactNativeTagHandles').rootNodeIDToTag[rootID];}


var RCTDebugComponentOwnership={








getOwnerHierarchy:function(requestID,tag){
var rootTag=getRootTagForTag(tag);
var instance=require('InspectorUtils').findInstanceByNativeTag(rootTag,tag);
var ownerHierarchy=instance?
require('InspectorUtils').getOwnerHierarchy(instance).map(componentToString):
null;
DebugComponentOwnershipModule.receiveOwnershipHierarchy(requestID,tag,ownerHierarchy);}};



require('BatchedBridge').registerCallableModule(
'RCTDebugComponentOwnership',
RCTDebugComponentOwnership);


module.exports=RCTDebugComponentOwnership;