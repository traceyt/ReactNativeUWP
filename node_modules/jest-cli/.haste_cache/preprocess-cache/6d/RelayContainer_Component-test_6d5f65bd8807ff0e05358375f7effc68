/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @emails oncall+relay
 */

'use strict';function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError('Cannot call a class as a function');}}function _inherits(subClass, superClass) {if (typeof superClass !== 'function' && superClass !== null) {throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;}

require('configureForRelayOSS');








describe('RelayContainer', function () {
  var MockComponent;
  var MockContainer;
  var mockCreateContainer;
  var mockRender;

  beforeEach(function () {
    jest.resetModuleRegistry();

    MockComponent = require('/Users/cpojer/Projects/relay/scripts/jest/../../node_modules/react').createClass({ displayName: 'MockComponent', 
      render: jest.genMockFunction().mockImplementation(function () {return require('/Users/cpojer/Projects/relay/scripts/jest/../../node_modules/react').createElement('div', null);}) });


    mockCreateContainer = function (component) {
      MockContainer = require('Relay').createContainer(component, { 
        initialVariables: { site: 'mobile' }, 
        fragments: { 
          foo: jest.genMockFunction().mockImplementation(
          function () {return (function () {return { children: [{ fieldName: 'id', kind: 'Field', metadata: { isRequisite: true }, type: 'ID' }, { calls: [{ kind: 'Call', metadata: {}, name: 'site', value: { kind: 'CallVariable', callVariableName: 'site' } }], fieldName: 'url', kind: 'Field', metadata: {}, type: 'String' }, { fieldName: '__typename', kind: 'Field', metadata: { isGenerated: true, isRequisite: true }, type: 'String' }], id: 'ZpUzM/ZCcI2Q:0', kind: 'Fragment', metadata: { isAbstract: true }, name: 'RelayContainer_ComponentRelayQL', type: 'Node' };})();}) } });};





    // Create default container for tests
    mockCreateContainer(MockComponent);

    require('GraphQLStoreQueryResolver').mockDefaultResolveImplementation(function (_, dataID) {
      expect(dataID).toBe('42');
      return { __dataID__: '42', id: '42', url: null };});


    var relayContext = new (require('RelayContext'))();
    var RelayTestRenderer = require('RelayTestUtils').createRenderer();
    mockRender = function () {
      return RelayTestRenderer.render(
      function (genMockPointer) {return require('/Users/cpojer/Projects/relay/scripts/jest/../../node_modules/react').createElement(MockContainer, { foo: genMockPointer('42') });}, 
      relayContext);};});




  it('creates and instance and renders', function () {
    var instance;
    expect(function () {
      instance = mockRender();}).
    not.toThrow();

    require('/Users/cpojer/Projects/relay/scripts/jest/../../node_modules/react/lib/reactComponentExpect')(instance).
    toBeCompositeComponentWithType(MockContainer).
    expectRenderedChild().
    toBeCompositeComponentWithType(MockComponent).
    expectRenderedChild().
    toBeDOMComponentWithTag('div');});


  it('provides Relay statics', function () {
    // The correct implementation of these is asserted in other tests. This
    // test merely checks if the public API exists.
    expect(typeof MockContainer.getFragmentNames).toEqual('function');
    expect(typeof MockContainer.getFragment).toEqual('function');});


  it('has the correct displayName based on the inner component', function () {
    expect(MockContainer.displayName).toEqual('Relay(MockComponent)');});


  it('works with ES6 classes', function () {var 
    MyComponent = (function (_React$Component) {_inherits(MyComponent, _React$Component);function MyComponent() {_classCallCheck(this, MyComponent);_React$Component.apply(this, arguments);}MyComponent.prototype.
      render = function render() {
        return require('/Users/cpojer/Projects/relay/scripts/jest/../../node_modules/react').createElement('span', null);};return MyComponent;})(require('/Users/cpojer/Projects/relay/scripts/jest/../../node_modules/react').Component);



    mockCreateContainer(MyComponent);

    var instance = mockRender();

    require('/Users/cpojer/Projects/relay/scripts/jest/../../node_modules/react/lib/reactComponentExpect')(instance).
    toBeCompositeComponentWithType(MockContainer).
    expectRenderedChild().
    toBeCompositeComponentWithType(MyComponent).
    expectRenderedChild().
    toBeDOMComponentWithTag('span');});});