'use strict';






































var RelayOSSNodeInterface={
ANY_TYPE:'__any',
ID:'id',
ID_TYPE:'ID!',
NODE:'node',
NODE_TYPE:'Node',
NODES:'nodes',
TYPENAME:'__typename',

isNodeRootCall:function(fieldName){
return (
fieldName===RelayOSSNodeInterface.NODE||
fieldName===RelayOSSNodeInterface.NODES);},



getResultsFromPayload:function(
store,
query,
payload)
{
var results=[];

var rootBatchCall=query.getBatchCall();
if(rootBatchCall){
getPayloadRecords(query,payload).forEach(function(result){
if(typeof result!=='object'||!result){
return;}

var dataID=result[RelayOSSNodeInterface.ID];
!(
typeof dataID==='string')?require('invariant')(0,
'RelayOSSNodeInterface.getResultsFromPayload(): Unable to write '+
'result with no `%s` field for query, `%s`.',
RelayOSSNodeInterface.ID,
query.getName()):undefined;

results.push({dataID:dataID,result:result});});}else 

{(function(){
var records=getPayloadRecords(query,payload);
var ii=0;
var storageKey=query.getStorageKey();
require('forEachRootCallArg')(query,function(_ref){var identifyingArgKey=_ref.identifyingArgKey;
var result=records[ii++];
var dataID=store.getDataID(storageKey,identifyingArgKey);
if(dataID==null){
var payloadID=
typeof result==='object'&&result&&
typeof result[RelayOSSNodeInterface.ID]==='string'?
result[RelayOSSNodeInterface.ID]:
null;
if(payloadID!=null){
dataID=payloadID;}else 
{
dataID=require('generateClientID')();}}


results.push({
dataID:dataID,
result:result,
rootCallInfo:{storageKey:storageKey,identifyingArgKey:identifyingArgKey}});});})();}




return results;}};



function getPayloadRecords(
query,
payload)
{
var fieldName=query.getFieldName();
var identifyingArg=query.getIdentifyingArg();
var identifyingArgValue=identifyingArg&&identifyingArg.value||null;
var records=payload[fieldName];
if(!query.getBatchCall()){
if(Array.isArray(identifyingArgValue)){
!
Array.isArray(records)?require('invariant')(0,
'RelayOSSNodeInterface: Expected payload for root field `%s` to be '+
'an array with %s results, instead received a single non-array result.',
fieldName,
identifyingArgValue.length):undefined;

!(
records.length===identifyingArgValue.length)?require('invariant')(0,
'RelayOSSNodeInterface: Expected payload for root field `%s` to be '+
'an array with %s results, instead received an array with %s results.',
fieldName,
identifyingArgValue.length,
records.length):undefined;}else 

if(Array.isArray(records)){
!
false?require('invariant')(0,
'RelayOSSNodeInterface: Expected payload for root field `%s` to be '+
'a single non-array result, instead received an array with %s results.',
fieldName,
records.length):undefined;}}



return Array.isArray(records)?records:[records];}


module.exports=RelayOSSNodeInterface;