'use strict';

















var warning=require('emptyFunction');

if(__DEV__){
var getOwnerStack=function(component){

var maxOwnersStackSize=1000;

var owners=[];
while(component&&owners.length<maxOwnersStackSize){
owners.push(component.getName()||'');
component=component._currentElement&&
component._currentElement._owner;}

return owners;};


warning=function(condition,format){for(var _len=arguments.length,args=Array(_len>2?_len-2:0),_key=2;_key<_len;_key++){args[_key-2]=arguments[_key];}
if(format===undefined){
throw new Error(
'`warning(condition, format, ...args)` requires a warning '+
'message argument');}



if(!condition){


require('AnalyticsLogger').logEvent('js_core_warning',{
message:format,
params:args,
owners:getOwnerStack(require('ReactCurrentOwner').current),
stack:new Error().stack});


if(format.indexOf('Failed Composite propType: ')===0){
return;}


var argIndex=0;
var message='Warning: '+format.replace(/%s/g,function(){return args[argIndex++];});
if(typeof console!=='undefined'){
console.error(message);}

try{



throw new Error(message);}
catch(x){}}};}




module.exports=warning;