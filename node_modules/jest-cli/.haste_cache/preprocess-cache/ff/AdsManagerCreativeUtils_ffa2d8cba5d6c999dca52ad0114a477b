'use strict';var _PageTypesToPreviewFo;






















var Set=require('immutable').Set;












var names=Object.
keys(require('AdsCallToActionTypes').TYPES).
map(function(type){return require('AdsCallToActionTypes').TYPES[type].name;});
var AdsCallToActionTypeNames=require('createObjectFrom')(names,names);

var BAD_CHAR_REGEX=/[\^~_=\{\}\[\]\|<>\u0250-\u0258\u0260-\u02AF\u2070-\u209F\u2100-\u2119\u2121\u2123-\u2499\u2501-\u2BFF]/;
var PUNCTUATION_START_REGEX=/^[\/!.\\?\-*,;:()]/;
var PUNCTUATION_STREAK_REGEX=/[\/!.\\?\-*,;:()]{2,}/g;
var SCREEN_WIDTH=require('Dimensions').get('window').width;




















var _ctaObjectiveMap=null;

var PageTypesToPreviewFormats=(_PageTypesToPreviewFo={},babelHelpers.defineProperty(_PageTypesToPreviewFo,
require('AdsAPIPageTypes').DESKTOP_FEED,require('AdsPreviewApiFormats').DESKTOP_FEED_STANDARD),babelHelpers.defineProperty(_PageTypesToPreviewFo,
require('AdsAPIPageTypes').INSTAGRAM_STREAM,require('AdsPreviewApiFormats').INSTAGRAM_STANDARD),babelHelpers.defineProperty(_PageTypesToPreviewFo,



require('AdsAPIPageTypes').MOBILE_EXTERNAL,require('AdsPreviewApiFormats').MOBILE_NATIVE),babelHelpers.defineProperty(_PageTypesToPreviewFo,
require('AdsAPIPageTypes').MOBILE_FEED,require('AdsPreviewApiFormats').MOBILE_FEED_STANDARD),babelHelpers.defineProperty(_PageTypesToPreviewFo,
require('AdsAPIPageTypes').RIGHT_COLUMN,require('AdsPreviewApiFormats').RIGHT_COLUMN_STANDARD),_PageTypesToPreviewFo);


var AdsManagerCreativeUtils={


MAX_HEADLINE_LENGTH:25,
MAX_TEXT_LENGTH:90,
SPEC_FIELD_WILDCARD:'*',

CTA_PER_PAGE:10,
INITIAL_CTA_DISPLAY_COUNT:1,

NEW_URL_PLACEHOLDER:'NEW_URL',



isImageRequiredForObjective:function(objective){
return objective!==require('AdsAPIObjectives').POST_ENGAGEMENT;},


getImageCropSizeForObjective:function(objective){
switch(objective){
case require('AdsAPIObjectives').PAGE_LIKES:
return {width:1200,height:444};
default:


return {width:1200,height:628};}},



getMinimumImageCropSizeForObjective:function(
objective)
{
var createInstagramAdQEConfig=require('AdsManagerMobileConfigStore').getQEConfig(
require('AdsManagerQENames').CREATE_INSTAGRAM_AD);

var canCreateInstagram=createInstagramAdQEConfig.isEnabledNoExposure();

switch(objective){
case require('AdsAPIObjectives').PAGE_LIKES:
return {width:400,height:150};
default:






return canCreateInstagram?
{width:600,height:315}:
{width:254,height:133};}},



getScaledImageCropSizeForObjective:function(
objective)
{
var unScaledImageCropSize=this.getImageCropSizeForObjective(objective);
var ratio=unScaledImageCropSize.height/unScaledImageCropSize.width;



return {
width:SCREEN_WIDTH,
height:SCREEN_WIDTH*ratio};},



shouldHideHeadline:function(objective){
return objective===require('AdsAPIObjectives').PAGE_LIKES;},


getHeadlineCharacterLeft:function(
headline)
{
return this.MAX_HEADLINE_LENGTH-(headline?headline.length:0);},


getTextCharacterLeft:function(
text)
{
return this.MAX_TEXT_LENGTH-(text?text.length:0);},


getCTAOptions:function(
objective)
{
if(_ctaObjectiveMap===null){
this._initCTAObjectiveMap();
!(
_ctaObjectiveMap!==null)?require('invariant')(0,
'_ctaObjectiveMap should not be null after initialization'):undefined;}


if(_ctaObjectiveMap.hasOwnProperty(objective)){
return _ctaObjectiveMap[objective];}

return [];},





getHeadlineAndTextEmptyError:function(
objective,
headline,
text)
{
var error=null;
var headlineError=this.getHeadlineEmptyError(objective,headline);
var textError=this.getTextEmptyError(text);
if(headlineError&&textError){
error=require('fbt')._('__FBT__{"type":"text","texts":["Add body text and a headline for your ad."],"desc":"Error message that appears at the top of the screen in ad creation if an advertiser tries to preview or complete an ad that has no headline or body text. This error message appears at the top of the screen after the advertiser taps Place Order or Preview. Space is not limited.","project":""}__FBT__');}else 








if(headlineError){
error=headlineError;}else 
if(textError){
error=textError;}

return error;},


getHeadlineEmptyError:function(
objective,
headline)
{
if(this.shouldHideHeadline(objective)||headline){
return null;}

return require('fbt')._('__FBT__{"type":"text","texts":["Add a headline for your ad."],"desc":"Error message that appears at the top of the screen in ad creation if an advertiser tries to preview or complete an ad that has no headline or body text. This error message appears at the top of the screen after the advertiser taps Place Order or Preview. Space is not limited.","project":""}__FBT__');},










getHeadlineTooLongError:function(
objective,
headline)
{
if(this.shouldHideHeadline(objective)||
this.getHeadlineCharacterLeft(headline)>=0){
return null;}

return require('fbt')._('__FBT__{"type":"text","texts":["Your headline is too long. It needs to be 25 characters or less."],"desc":"Error message that appears at the top of the screen in ad creation if an advertiser tries to preview or complete an ad that has a headline that exceeds the 25 character limit. This error message appears at the top of the screen after the advertiser taps Place Order or Preview. Space is not limited.","project":""}__FBT__');},









getTextEmptyError:function(
text)
{
return text?null:require('fbt')._('__FBT__{"type":"text","texts":["Add body text for your ad."],"desc":"Error message that appears at the top of the screen in ad creation when an advertiser tries to preview or complete an ad that has no body text. This error message appears at the top of the screen after the advertiser taps Place Order or Preview. Space is not limited.","project":""}__FBT__');},









getTextTooLongError:function(
text)
{
return this.getTextCharacterLeft(text)>=0?null:require('fbt')._('__FBT__{"type":"text","texts":["Your text is too long. It needs to be 90 characters or less."],"desc":"Error message that appears at the top of the screen in ad creation if an advertiser tries to preview or complete an ad with body text that exceeds the 90 character limit. This error message appears at the top of the screen after the advertiser taps Place Order or Preview. Space is not limited.","project":""}__FBT__');},









getTextPuncStreakError:function(
objective,
text)
{
if(!text){
return null;}


if(objective!==require('AdsAPIObjectives').PAGE_LIKES){
return null;}

if(PUNCTUATION_START_REGEX.test(text)){
return require('fbt')._('__FBT__{"type":"text","texts":["Your text can\'t start with punctuation. Please change your headline to continue"],"desc":"Error message about text starting with punctuation mark","project":""}__FBT__');}





var matches=text.match(PUNCTUATION_STREAK_REGEX)||[];

var hasError=matches.some(function(match){
return require('AdsAllowedPunctuationPairs').indexOf(match)<0;});

if(!hasError){
return null;}

return require('fbt')._('__FBT__{"type":"text","texts":["Your text can\'t include 2 punctuation marks or signs in a row. Please remove these to continue."],"desc":"Error message about consecutive punctuation marks or signs in body text","project":""}__FBT__');},






getTextBadCharError:function(
objective,
text)
{

if(objective!==require('AdsAPIObjectives').PAGE_LIKES){
return null;}

var textWithNoWhitelistedPhrases=text;
require('AdsValidationWhitelistedPhrases').forEach(function(phrase){
textWithNoWhitelistedPhrases=
textWithNoWhitelistedPhrases.replace(phrase,'');});

if(BAD_CHAR_REGEX.test(textWithNoWhitelistedPhrases)){
return require('fbt')._('__FBT__{"type":"text","texts":["Your text includes an invalid character. Ads may only contain alphanumeric characters, punctuation, and spaces. Symbols like = is not allowed."],"desc":"Error message about bad characters in text","project":""}__FBT__');}






return null;},


getURLError:function(
url)
{
return this.getURLEmptyError(url)||this.getURLInvalidError(url);},


getURLEmptyError:function(
url)
{
return url&&url.length?null:require('fbt')._('__FBT__{"type":"text","texts":["Add a website URL for your ad."],"desc":"Error message that appears at the top of screen in ad creationif an advertiser tries to preview or complete a website clicks ad without adding a website url. This error message appears at the top of the screen after the advertiser taps Place Order or Preview. Space is not limited.","project":""}__FBT__');},









getURLInvalidError:function(
url)
{
if(!require('URI').isValidURI(url)||!require('ads-lib-urllib').isUrl(url)){
return require('fbt')._('__FBT__{"type":"text","texts":["You added a website or URL that can\'t be promoted. Tap to edit it or add a new one."],"desc":"Error message that appears at the top of the screen in ad creation if an advertiser tries to preview or complete a website clicks ad with an invalid url. This error message appears at the top of the screen after the advertiser taps Place Order or Preview. Space is not limited.","project":""}__FBT__');}else 








if(require('isFacebookURI')(new (require('URI'))(require('ads-lib-urllib').normalize(url)))){
return require('fbt')._('__FBT__{"type":"text","texts":["You can\'t promote a facebook.com URL using the Website Clicks objective. Tap to edit the URL or add a new one."],"desc":"Error message that appears at the top of the screen in ad creation if an advertiser tries to preview or complete a website clicks ad with a Facebook url, which is not allowed. This error message appears at the top of the screen after the advertiser taps Place Order or Preview. Space is not limited.","project":""}__FBT__');}else 








if(!this._isValidProtocol(url)){
return require('fbt')._('__FBT__{"type":"text","texts":["You can\'t promote a website or URL with an invalid protocol. Tap to edit it or add a new one."],"desc":"Error message that appears at the top of the screen in ad creation if an advertiser tries to preview or complete a website clicks ad with a url that doesn\'t have a valid protocol (like http). This error message appears at the top of the screen after the advertiser taps Place Order or Preview Space is not limited.","project":""}__FBT__');}










return null;},


getAdImageError:function(
image,
objective)
{
if(!this.isImageRequiredForObjective(objective)||
require('AdsManagerImageUtils').isValidImageSource(image)){
return null;}

return require('fbt')._('__FBT__{"type":"text","texts":["Select an image for your ad."],"desc":"Error message that appears at the top of the screen in ad creation if an advertiser tries to preview or complete an ad without an image.This error message appears at the top of the screen after the advertiser taps Place Order or Preview. Space is not limited.","project":""}__FBT__');},








getTextAndLinkErrors:function(
objective,
headline,
text,
url)
{
var errors=[
this.getHeadlineAndTextEmptyError(objective,headline,text),
this.getHeadlineTooLongError(objective,headline),
this.getTextTooLongError(text),
this.getTextPuncStreakError(objective,text),
this.getTextBadCharError(objective,text)];

if(objective===require('AdsAPIObjectives').WEBSITE_CLICKS){
errors.push(this.getURLError(url));}

return errors.filter(function(e){return e;});},


getPhoneNumberError:function(phoneNumber){

if(phoneNumber){
return null;}

return require('fbt')._('__FBT__{"type":"text","texts":["Please add a valid phone number"],"desc":"Error message that appears at the top of the CTA section in adcreation if an advertiser tries to preview or complete an ad that hasan invalid phone number. This error message appears at the top of theCTA section after the advertiser taps Place Order or Preview. Space is not limited.","project":""}__FBT__');},









getAddressError:function(address){

if(address){
return null;}

return require('fbt')._('__FBT__{"type":"text","texts":["Please add a valid address"],"desc":"Error message that appears at the top of the CTA section in adcreation if an advertiser tries to preview or complete an ad that hasan invalid address. This error message appears at the top of theCTA section after the advertiser taps Place Order or Preview. Space is not limited.","project":""}__FBT__');},









getCTAError:function(
cta,
ctaData)
{
switch(cta){
case require('AdsCallToActionTypes').TYPES.CALL_NOW.name:
return this.getPhoneNumberError(ctaData&&ctaData.phoneNumber);
case require('AdsCallToActionTypes').TYPES.GET_DIRECTIONS.name:
return this.getAddressError(ctaData&&ctaData.address);
default:
return null;}},



getCreativeErrors:function(
objective,
headline,
text,
url,
image,
ctaType,
ctaData)
{
var errors=this.getTextAndLinkErrors(objective,headline,text,url);
errors.push(this.getAdImageError(image,objective));
errors.push(this.getCTAError(ctaType,ctaData));
return errors.filter(function(e){return e;});},


_initCTAObjectiveMap:function(){
_ctaObjectiveMap={};
for(var objective in require('AdsAPIObjectives')){
var ctaOptions=[];
for(var ctaType in require('AdsCallToActionTypes').TYPES){
var ctaInfo=require('AdsCallToActionTypes').TYPES[ctaType];
if(ctaInfo.objectives&&ctaInfo.objectives.indexOf(objective)!==-1){
ctaOptions.push(ctaInfo);}}


_ctaObjectiveMap[objective]=ctaOptions;}},



getCTADisplayCount:function(
objective,
selectedCTA)
{
if(selectedCTA===require('AdsCallToActionTypes').TYPES.NO_BUTTON.name){
return this.INITIAL_CTA_DISPLAY_COUNT;}

var displayCount=0;
var ctaOptions=this.getCTAOptions(objective);
for(var i in ctaOptions){
displayCount++;
if(ctaOptions[i].name===selectedCTA){
break;}}



return Math.max(this.INITIAL_CTA_DISPLAY_COUNT,displayCount);},


getCTATypeFromAdgroupNode:function(adgroup){
var creative=adgroup&&adgroup.creative;
return (
creative&&
creative.object_story_spec&&
creative.object_story_spec.link_data&&
creative.object_story_spec.link_data.call_to_action&&
creative.object_story_spec.link_data.call_to_action.call_to_action_type);},



getEditMutationSpec:function(adgroup){
var creativeSpec={};
if(adgroup.ad_campaign.ad_campaign_group.objective===
require('AdsAPIObjectives').PAGE_LIKES){

var pageNode=adgroup.creative.promoted_object;
if(pageNode.node_id){
creativeSpec.object_id=pageNode.node_id;}

creativeSpec.body=adgroup.creative.body_text;
creativeSpec.image_hash=adgroup.creative.image_hash;
!(
creativeSpec&&
creativeSpec.object_id&&
creativeSpec.body&&
creativeSpec.image_hash)?require('invariant')(0,
'Invalid creative spec for Page Like Objective'):undefined;

return creativeSpec;}

var objectStorySpecNode=adgroup.creative.object_story_spec;
var objectStorySpec={};
if(objectStorySpecNode.page){
objectStorySpec.page_id=objectStorySpecNode.page.node_id;}

objectStorySpec.raw_spec=objectStorySpecNode.raw_spec;
objectStorySpec.fields_retained_from_raw_spec=[this.SPEC_FIELD_WILDCARD];
if(objectStorySpecNode.link_data){
var linkData={
fields_retained_from_raw_spec:[this.SPEC_FIELD_WILDCARD],
name:objectStorySpecNode.link_data.name,
message:objectStorySpecNode.link_data.message,
link:objectStorySpecNode.link_data.link,
image_hash:objectStorySpecNode.link_data.image_hash,
description:objectStorySpecNode.link_data.description};

objectStorySpec.link_data=linkData;}


creativeSpec.object_story_spec=objectStorySpec;
!(
creativeSpec&&
creativeSpec.object_story_spec&&
creativeSpec.object_story_spec.link_data)?require('invariant')(0,
'Invalid creative spec'):undefined;

return creativeSpec;},



updateCreativeSpecWithNewData:function(
initialCreativeSpec,
newData,
objective)
{
var creativeSpec=babelHelpers.extends({},initialCreativeSpec);


if(objective===require('AdsAPIObjectives').PAGE_LIKES){
creativeSpec.body=newData.text;
return creativeSpec;}


var selectedURL=this.getSelectedURL(
newData.newURL,
newData.advertisedURL,
newData.urlType);

creativeSpec.object_story_spec.link_data=babelHelpers.extends({},
creativeSpec.object_story_spec.link_data,{
name:newData.headline,
message:newData.text,
link:selectedURL});








if(objective!==require('AdsAPIObjectives').LOCAL_AWARENESS){
var callToAction={
type:newData.ctaType,
value:null};

if(newData.ctaType!==require('AdsCallToActionTypes').TYPES.NO_BUTTON.name){
callToAction.value={
link:newData.ctaValue?newData.ctaValue:selectedURL};}


creativeSpec.object_story_spec.link_data.call_to_action=callToAction;}

return creativeSpec;},


getSelectedURL:function(
newURL,
advertisedURL,
urlType)
{
if(urlType===require('AdsManagerURLType').ADVERTISED_URL){
return advertisedURL;}else 
if(urlType===require('AdsManagerURLType').NEW_URL){
return newURL;}else 
{
!false?require('invariant')(0,'Unsupported URL type %s',urlType):undefined;}},



getPhoneNumberURL:function(phoneNumber){
return phoneNumber?'tel:'+phoneNumber:null;},


getPhoneNumberFromPage:function(page){
return page&&page.phone_number&&page.phone_number.universal_number;},


getLocationURLFromAddress:function(address){
return address&&this.getLocationURL(
address.latitude,
address.longitude,
address.address_string);},



getLocationURLFromPageLocation:function(page){
var address=this.getValidatedAddressFromPageLocation(page);
if(!address){
return null;}

return this.getLocationURL(
address.latitude,
address.longitude,
address.address_string);},



getValidatedAddressFromPageLocation:function(page){
var location=page.location;
if(!location||location.latitude===null||
location.longitude===null){
return null;}

var addressString=require('AdsManagerLocations').getPageAddressForSpec(page);
if(!addressString){
return null;}

return {
address_string:addressString,
latitude:location.latitude,
longitude:location.longitude};},



getLocationURL:function(
latitude,
longitude,
addressString)
{
return 'fbgeo://'+[
latitude,
longitude,
'"'+addressString+'"'].
join(',');},


getPreviewFormatsForPageTypes:function(
pageTypes)
{
return pageTypes.map(
function(pageType){return PageTypesToPreviewFormats[pageType];}).
filter(function(format){return !!format;});},


fetchPreviewURLs:function(
accountID,
creativeSpec,
postSpec,
onSuccess,
onFailure)
{
var creative=JSON.stringify(creativeSpec);
var formats=require('getObjectValues')(require('AdsPreviewApiFormats'));
var query=null;
if(postSpec){
var post=JSON.stringify(postSpec);
query=require('fromGraphQL').Query(function(RQL_0,RQL_1,RQL_2,RQL_3){return {calls:[{kind:'Call',metadata:{type:'ID!'},name:'id',value:require('Relay').QL.__var(RQL_0)}],children:[{calls:[{kind:'Call',metadata:{type:'AdCreativeOptions'},name:'creative_spec',value:require('Relay').QL.__var(RQL_1)},{kind:'Call',metadata:{type:'PostSpecData'},name:'post_spec',value:require('Relay').QL.__var(RQL_2)},{kind:'Call',metadata:{type:'[AdFormatsCall]'},name:'for_formats',value:require('Relay').QL.__var(RQL_3)}],directives:[{kind:'Directive',name:'fixme_fat_interface',args:[]}],fieldName:'creative_preview_urls',kind:'Field',metadata:{isPlural:true},type:'Url'},{fieldName:'id',kind:'Field',metadata:{isGenerated:true,isRequisite:true},type:'ID'},{fieldName:'__typename',kind:'Field',metadata:{isGenerated:true,isRequisite:true},type:'String'}],fieldName:'node',kind:'Query',metadata:{isAbstract:true,identifyingArgName:'id',identifyingArgType:'ID!'},name:'AdsManagerCreativeUtils',type:'Node'};}(

accountID,

creative,
post,
formats));}else 




{
query=require('fromGraphQL').Query(function(RQL_0,RQL_1,RQL_2){return {calls:[{kind:'Call',metadata:{type:'ID!'},name:'id',value:require('Relay').QL.__var(RQL_0)}],children:[{calls:[{kind:'Call',metadata:{type:'AdCreativeOptions'},name:'creative_spec',value:require('Relay').QL.__var(RQL_1)},{kind:'Call',metadata:{type:'[AdFormatsCall]'},name:'for_formats',value:require('Relay').QL.__var(RQL_2)}],directives:[{kind:'Directive',name:'fixme_fat_interface',args:[]}],fieldName:'creative_preview_urls',kind:'Field',metadata:{isPlural:true},type:'Url'},{fieldName:'id',kind:'Field',metadata:{isGenerated:true,isRequisite:true},type:'ID'},{fieldName:'__typename',kind:'Field',metadata:{isGenerated:true,isRequisite:true},type:'String'}],fieldName:'node',kind:'Query',metadata:{isAbstract:true,identifyingArgName:'id',identifyingArgType:'ID!'},name:'AdsManagerCreativeUtils',type:'Node'};}(

accountID,

creative,
formats));}






require('Relay').Store.primeCache({query:query},function(readyState){
if(readyState.done){
var result=require('Relay').Store.readQuery(query)[0];
var urls={};
if(result){
!(
result.creative_preview_urls.length===formats.length)?require('invariant')(0,
'preview urls must match formats'):undefined;

formats.forEach(function(format,index){
var url=result.creative_preview_urls[index];
if(url){
urls[format]=url;}});}




if(require('isEmpty')(urls)){
onFailure(
'Fetch preview urls error: empty value for field creative_preview_url');

return;}


onSuccess(urls);}else 
if(readyState.error){






onFailure('Fetch preview url error: '+readyState.error);}});},




updateCreativeSpecWithImageHash:function(
creativeSpec,
imageHash)
{

if(creativeSpec.object_story_spec){
creativeSpec.object_story_spec.link_data.image_hash=imageHash;}else 
{
creativeSpec.image_hash=imageHash;}

return creativeSpec;},


_isValidProtocol:function(urlString){
var protocol=new (require('URI'))(urlString).protocol;
return protocol===''||protocol==='http'||protocol==='https';}};



module.exports=AdsManagerCreativeUtils;