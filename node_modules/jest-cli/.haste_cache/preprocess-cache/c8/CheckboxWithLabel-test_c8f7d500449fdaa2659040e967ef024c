/* eslint-disable no-unused-vars */
'use strict';

jest.unmock('../CheckboxWithLabel');var _react = require('react');var _react2 = _interopRequireDefault(_react);var _reactDom = require('react-dom');var _reactDom2 = _interopRequireDefault(_reactDom);var _reactAddonsTestUtils = require('react-addons-test-utils');var _reactAddonsTestUtils2 = _interopRequireDefault(_reactAddonsTestUtils);var _CheckboxWithLabel = require('../CheckboxWithLabel');var _CheckboxWithLabel2 = _interopRequireDefault(_CheckboxWithLabel);function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}






describe('CheckboxWithLabel', function () {

  it('changes the text after click', function () {
    // Render a checkbox with label in the document
    var checkbox = _reactAddonsTestUtils2.default.renderIntoDocument(
    _react2.default.createElement(_CheckboxWithLabel2.default, { labelOn: 'On', labelOff: 'Off' }));


    var checkboxNode = _reactDom2.default.findDOMNode(checkbox);

    // Verify that it's Off by default
    expect(checkboxNode.textContent).toEqual('Off');

    // Simulate a click and verify that it is now On
    _reactAddonsTestUtils2.default.Simulate.change(
    _reactAddonsTestUtils2.default.findRenderedDOMComponentWithTag(checkbox, 'input'));

    expect(checkboxNode.textContent).toEqual('On');});});